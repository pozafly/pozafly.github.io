{"version":3,"file":"component---src-templates-index-tsx-aa5997b0e3cdd59c7777.js","mappings":"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","sources":["webpack://record-journey/./src/components/Pagination.tsx","webpack://record-journey/./src/templates/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\n\nexport type PaginationProps = {\n  currentPage: number;\n  numPages: number;\n};\n\nfunction Pagination({ currentPage, numPages }: PaginationProps) {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const isEndFirst = currentPage > 3;\n  const isEndLast = currentPage <= numPages - 3;\n  const prevPage = currentPage - 1 === 1 ? '/' : `../${(currentPage - 1).toString()}`;\n  const nextPage = `../${(currentPage + 1).toString()}`;\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {isEndFirst && (\n          <Link to=\"/\" rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {'‹'}\n          </Link>\n        )}\n\n        {Array.from(\n          { length: numPages },\n          (_, i) =>\n            i > currentPage - 4 &&\n            i < currentPage + 2 && (\n              <Link\n                key={`pagination-number${i + 1}`}\n                className={i + 1 === currentPage ? 'active' : ''}\n                to={`/${i === 0 ? '' : i + 1}`}\n              >\n                {i + 1}\n              </Link>\n            ),\n        )}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {'›'}\n          </Link>\n        )}\n\n        {isEndLast && (\n          <Link to={`/${numPages}`} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nconst navCss = css`\n  margin-bottom: 32px;\n  text-align: center;\n\n  div {\n    display: inline-block;\n    padding: 10px;\n    background: rgb(25 27 31 / 0.1);\n    border-radius: 100px;\n  }\n\n  a {\n    float: left;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    margin: 0 4px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans', 'Ubuntu',\n      'Droid Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.5rem;\n    color: black;\n    text-decoration: none;\n    background: #fff;\n    border-radius: 100px;\n    box-shadow:\n      rgb(39 44 49 / 0.06) 8px 14px 38px,\n      rgb(39 44 49 / 0.03) 1px 3px 8px;\n    transition: background-color 0.3s;\n\n    &.active {\n      background-color: #b3b3b3;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    div {\n      background: rgb(255 255 255 / 0.1);\n    }\n\n    a {\n      color: #fff;\n      background: #000;\n\n      &.active {\n        background-color: #626262;\n      }\n\n      &:hover:not(.active) {\n        background-color: #272727;\n      }\n    }\n  }\n\n  @media (max-width: 650px) {\n    a {\n      width: 32px;\n      height: 32px;\n      margin: 0 2px;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { Fragment, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { getImage, getSrc } from 'gatsby-plugin-image';\n\nimport { Footer } from '@/components/Footer.tsx';\nimport SiteNav from '@/components/header/SiteNav.tsx';\nimport Pagination from '@/components/Pagination.tsx';\nimport { PostCard } from '@/components/PostCard.tsx';\nimport { Wrapper } from '@/components/Wrapper.tsx';\nimport IndexLayout from '@/layouts/index.tsx';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteDescription,\n  SiteHeaderContent,\n  SiteHeaderStyles,\n  SiteMain,\n  SiteTitle,\n} from '@/styles/shared.ts';\nimport config from '@/website-config.ts';\n\nimport type { PageContext } from '@/templates/post.tsx';\nimport type { ImageDataLike } from 'gatsby-plugin-image';\n\nexport type IndexProps = {\n  children: React.ReactNode;\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: ImageDataLike;\n    header: ImageDataLike;\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n};\n\nexport const Head = ({ data }: IndexProps) => {\n  const width = getImage(data.header)?.width;\n  const height = getImage(data.header)?.height;\n\n  return (\n    <Fragment>\n      <title>{config.title}</title>\n      <meta name=\"description\" content={config.description} />\n      <meta property=\"og:site_name\" content={config.title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={config.title} />\n      <meta property=\"og:description\" content={config.description} />\n      <meta property=\"og:url\" content={config.siteUrl} />\n      <meta property=\"og:image\" content={`${config.siteUrl}${getSrc(data.header)}`} />\n      {config.instagram && <meta property=\"article:publisher\" content={config.instagram} />}\n      {config.googleSiteVerification && (\n        <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n      )}\n      <meta name=\"github:card\" content=\"summary_large_image\" />\n      <meta name=\"github:title\" content={config.title} />\n      <meta name=\"github:description\" content={config.description} />\n      <meta name=\"github:url\" content={config.siteUrl} />\n      <meta name=\"github:image\" content={`${config.siteUrl}${getSrc(data.header)}`} />\n      {config.github && (\n        <meta name=\"github:site\" content={`@${config.github.split('https://github.com/')[1]}`} />\n      )}\n      <meta property=\"og:image:width\" content={width?.toString()} />\n      <meta property=\"og:image:height\" content={height?.toString()} />\n      <meta name=\"google-site-verification\" content=\"X7fnDr_T5GGmrn97A919fAd2I_t2ghdL_ZkDjcR1Y8Q\" />\n      <meta name=\"naver-site-verification\" content=\"896eb3f6e2c58669212193addb6978a4bb0d80c1\" />\n    </Fragment>\n  );\n};\n\nfunction IndexPage(props: IndexProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const handleImageLoad = () => setIsLoaded(!isLoaded);\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Wrapper>\n        <div css={[outer, SiteHeaderStyles]}>\n          <HeaderBackground>\n            <img\n              src={getSrc(props.data.header)}\n              onLoad={handleImageLoad}\n              className={isLoaded ? 'loaded' : ''}\n            />\n          </HeaderBackground>\n          <div css={inner}>\n            <SiteNav isHome />\n            <SiteHeaderContent className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <img\n                    style={{ maxHeight: '55px', height: '55px' }}\n                    src={getSrc(props.data.logo)}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <div css={[PostFeed]}>\n              {props.data.allMarkdownRemark.edges.map(\n                (post, index) =>\n                  // filter out drafts in production\n                  (post.node.frontmatter.draft !== true ||\n                    (post.node.frontmatter.tags[0] !== 'Diary' &&\n                      process.env.NODE_ENV !== 'production')) && (\n                    <PostCard key={post.node.fields.slug} post={post.node} isLarge={index === 0} />\n                  ),\n              )}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        {props.pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={props.pageContext.currentPage}\n            numPages={props.pageContext.numPages}\n          />\n        )}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    header: file(relativePath: { eq: \"img/common/back3.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 2000\n          quality: 100\n          layout: FIXED\n          formats: [AUTO, WEBP, AVIF]\n          placeholder: BLURRED\n        )\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { draft: { ne: true }, tags: { ne: \"\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FULL_WIDTH\n                  formats: [AUTO, WEBP, AVIF]\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n          excerpt\n          fields {\n            readingTime {\n              text\n            }\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HeaderBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 100%;\n  height: 350px;\n\n  img {\n    transform: scale(1.05);\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    object-fit: cover;\n    transition:\n      opacity 0.6s cubic-bezier(0.33, 1, 0.68, 1),\n      transform 0.6s cubic-bezier(0.33, 1, 0.68, 1);\n\n    &.loaded {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  @media (max-width: 780px) {\n    height: 28rem;\n  }\n\n  @media (max-width: 500px) {\n    height: 25rem;\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      min-height: 280px;\n      margin-bottom: 100px;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      min-height: 380px;\n      margin-bottom: 0;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      display: block;\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["navCss","currentPage","numPages","isFirst","isLast","isEndFirst","isEndLast","prevPage","toString","nextPage","___EmotionJSX","css","Link","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","Head","_ref","data","width","getImage","header","_getImage","height","_getImage2","Fragment","config","name","content","property","getSrc","HeaderBackground","target","styles","HomePosts","props","isLoaded","setIsLoaded","useState","IndexLayout","Wrapper","outer","SiteHeaderStyles","src","onLoad","inner","SiteNav","isHome","SiteHeaderContent","SiteTitle","logo","style","maxHeight","alt","SiteDescription","id","SiteMain","Posts","PostFeed","allMarkdownRemark","edges","map","post","index","node","frontmatter","draft","tags","process","PostCard","fields","slug","isLarge","children","pageContext","Pagination","Footer"],"sourceRoot":""}