{"version":3,"file":"e0525e89-b0a9e98aca5b94b46c37.js","mappings":"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","sources":["webpack://gatsby-casper/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport { GatsbyImage, getSrc, getImage } from 'gatsby-plugin-image';\nimport { kebabCase } from 'lodash-es';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\nimport Giscus from '../components/Giscus';\nimport { AuthorItem } from '../components/AuthorItem';\n\nexport type Author = {\n  name: string;\n  bio: string;\n  avatar: any;\n};\n\ntype PageTemplateProps = {\n  location: Location;\n  data: {\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: any;\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n      };\n      fields: {\n        readingTime: {\n          text: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n};\n\nexport type PageContext = {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      text: string;\n    };\n  };\n  frontmatter: {\n    image: any;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n};\n\nfunction PageTemplate({ data, pageContext, location }: PageTemplateProps) {\n  const post = data.markdownRemark;\n  let width: number | undefined;\n  let height: number | undefined;\n  if (post.frontmatter.image) {\n    width = getImage(post.frontmatter.image)?.width;\n    height = getImage(post.frontmatter.image)?.height;\n  }\n\n  const date = new Date(post.frontmatter.date);\n  const datetime = format(date, 'yyyy-MM-dd');\n  const displayDatetime = format(date, 'yyyy MM dd');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta\n          name=\"description\"\n          content={post.frontmatter.excerpt || post.excerpt}\n        />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta\n          property=\"og:description\"\n          content={post.frontmatter.excerpt || post.excerpt}\n        />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta\n          property=\"article:published_time\"\n          content={post.frontmatter.date}\n        />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.instagram && (\n          <meta property=\"article:publisher\" content={config.instagram} />\n        )}\n        {config.instagram && (\n          <meta property=\"article:author\" content={config.instagram} />\n        )}\n        <meta name=\"github:card\" content=\"summary_large_image\" />\n        <meta name=\"github:title\" content={post.frontmatter.title} />\n        <meta\n          name=\"github:description\"\n          content={post.frontmatter.excerpt || post.excerpt}\n        />\n        <meta name=\"github:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            name=\"github:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta name=\"github:label1\" content=\"Written by\" />\n        <meta name=\"github:data1\" content={post.frontmatter.author[0].name} />\n        <meta name=\"github:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && (\n          <meta name=\"github:data2\" content={post.frontmatter.tags[0]} />\n        )}\n        {config.github && (\n          <meta\n            name=\"github:site\"\n            content={`@${config.github.split('https://github.com/')[1]}`}\n          />\n        )}\n        {config.github && (\n          <meta\n            name=\"github:creator\"\n            content={`@${config.github.split('https://github.com/')[1]}`}\n          />\n        )}\n        {width && (\n          <meta property=\"og:image:width\" content={width?.toString()} />\n        )}\n        {height && (\n          <meta property=\"og:image:height\" content={height?.toString()} />\n        )}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-full-tags\">\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 &&\n                    config.showAllTags &&\n                    post.frontmatter.tags.map((tag, idx) => (\n                      <React.Fragment key={tag}>\n                        {idx > 0 && <>, &nbsp;</>}\n                        <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                      </React.Fragment>\n                    ))}\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 &&\n                    !config.showAllTags && (\n                      <Link\n                        to={`/tags/${kebabCase(post.frontmatter.tags[0])}/`}\n                      >\n                        {post.frontmatter.tags[0]}\n                      </Link>\n                    )}\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">\n                  {post.frontmatter.title}\n                </PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <AuthorListUl className=\"author-list\">\n                      <AuthorItem\n                        key={post.frontmatter.author[0].name}\n                        author={post.frontmatter.author[0]}\n                      />\n                    </AuthorListUl>\n\n                    <section className=\"post-full-byline-meta\">\n                      <h4 className=\"author-name\">\n                        {post.frontmatter.author.map((author) => (\n                          <Link\n                            key={author.name}\n                            to={'/about'}\n                            // to={`/author/${kebabCase(author.name)}/`}\n                          >\n                            {author.name}\n                          </Link>\n                        ))}\n                      </h4>\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span>\n                          {post.fields.readingTime.text}\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <GatsbyImage\n                    image={getImage(post.frontmatter.image)!}\n                    style={{ height: '100%' }}\n                    alt={post.frontmatter.title}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n            <div css={GiscusStyle}>\n              <Giscus repo=\"pozafly/blog-comments\" />\n            </div>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nconst GiscusStyle = css`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 760px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n`;\n\nexport const AuthorListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 0 0 4px;\n  padding: 0;\n  list-style: none;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-size: 2rem;\n  line-height: 1.4em;\n  font-weight: 360;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: #768086;\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    color: #768086;\n    font-size: 1.4rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.4rem;\n    line-height: 1.3em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px auto 50px;\n  max-height: 800px;\n  background-size: cover;\n  width: 80%;\n  border-radius: 8px;\n  img {\n    border-radius: 8px;\n  }\n\n  @media (max-width: 1170px) {\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n  }\n  border: 1px solid hsl(230deg 25% 94%);\n  @media (prefers-color-scheme: dark) {\n    border: 1px solid hsl(230deg 6% 23%);\n  }\n`;\n\nexport const query = graphql`\n  query ($slug: String, $primaryTag: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        excerpt\n        image {\n          childImageSharp {\n            gatsbyImageData(\n              layout: FULL_WIDTH\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n        author {\n          name\n          bio\n          avatar {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: {\n        frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } }\n      }\n      limit: 5\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            readingTime {\n              text\n            }\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"names":["GiscusStyle","name","styles","PostTemplate","css","colors","PostFull","NoImage","PostFullHeader","target","PostFullTags","AuthorListUl","PostFullCustomExcerpt","PostFullByline","lighten","PostFullTitle","setLightness","PostFullImage","data","pageContext","location","post","markdownRemark","width","height","frontmatter","image","getImage","_getImage","_getImage2","date","Date","datetime","format","displayDatetime","___EmotionJSX","IndexLayout","className","Helmet","lang","config","title","content","excerpt","property","pathname","getSrc","tags","author","_width","toString","_height","Wrapper","outer","SiteNavMain","inner","SiteNav","isPost","id","SiteMain","length","map","tag","idx","React","key","Link","to","_kebabCase","AuthorItem","dateTime","fields","readingTime","text","GatsbyImage","style","alt","PostContent","htmlAst","Subscribe","Giscus","repo","ReadNext","currentPageSlug","relatedPosts","Footer"],"sourceRoot":""}