{"version":3,"file":"14cad5d5-d8a7c57d1caa31213d75.js","mappings":"4RAqBO,SAASA,EAAS,GAIN,IAAD,MAJO,KACvBC,EAAI,QACJC,GAAU,EAAK,OACfC,GAAS,GACK,EACd,MAAMC,EAAO,IAAIC,KAAKJ,EAAKK,YAAYF,MACjCG,GAAWC,EAAAA,EAAAA,GAAOJ,EAAM,cACxBK,GAAkBD,EAAAA,EAAAA,GAAOJ,EAAM,cAErC,OACEM,EAAAA,EAAAA,IAAAA,UAAAA,CACEC,UAAY,aAAYV,EAAKK,YAAYM,MAAQ,GAAK,cACpDV,EAAU,kBAAoB,KAEhCW,IAAG,CAAGC,EAAgBZ,GAAWa,EAAa,QAE7Cd,EAAKK,YAAYM,QAChBF,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CACHL,UAAU,uBACVE,IAAKI,EACLC,GAAIjB,EAAKkB,OAAOC,OAEhBV,EAAAA,EAAAA,IAACW,EAAa,CACZV,UAAY,oBAAkBR,EAAS,UAAY,MAElC,QAAhB,EAAAF,EAAKK,mBAAW,aAAhBgB,EAAkBV,SACjBF,EAAAA,EAAAA,IAACa,EAAAA,EAAW,CACVX,OAAOY,EAAAA,EAAAA,GAASvB,EAAKK,YAAYM,OACjCa,IAAM,GAAExB,EAAKK,YAAYoB,oBACzBC,MAAO,CAAEC,OAAQ,QACjBC,QAAS3B,EAAU,QAAU,YAMvCQ,EAAAA,EAAAA,IAACoB,EAAe,CAACnB,UAAU,qBACxBV,EAAKK,YAAYyB,MAAQC,EAAAA,EAAAA,cACxBtB,EAAAA,EAAAA,IAACuB,EAAkB,CAACtB,UAAU,yBAC3BV,EAAKK,YAAYyB,KAAKG,KAAI,CAACC,EAAKC,KAC/B1B,EAAAA,EAAAA,IAAC2B,EAAAA,SAAc,CAACC,IAAKH,GAClBC,EAAM,IAAK1B,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,KAAE,QACdA,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACE,GAAK,SAAQqB,IAAUJ,OAAUA,OAK9ClC,EAAKK,YAAYyB,OAASC,EAAAA,EAAAA,cACzBtB,EAAAA,EAAAA,IAACuB,EAAkB,CAACtB,UAAU,0BAC5BD,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACE,GAAK,SAAQqB,IAAUtC,EAAKK,YAAYyB,KAAK,QAChD9B,EAAKK,YAAYyB,KAAK,MAI7BrB,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CACHL,UAAU,yBACVE,IAAK2B,EACLtB,GAAIjB,EAAKkB,OAAOC,OAEhBV,EAAAA,EAAAA,IAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAC+B,EAAa,CAAC9B,UAAU,mBACtBV,EAAKK,YAAYoB,SAGtBhB,EAAAA,EAAAA,IAACgC,EAAe,CAAC/B,UAAU,sBACzBD,EAAAA,EAAAA,IAAAA,IAAAA,KAAIT,EAAKK,YAAYqC,SAAW1C,EAAK0C,YAGzCjC,EAAAA,EAAAA,IAACkC,EAAY,CAACjC,UAAU,mBACtBD,EAAAA,EAAAA,IAACmC,EAAqB,CAAClC,UAAU,6BAC/BD,EAAAA,EAAAA,IAAAA,OAAAA,CAAMC,UAAU,0BACdD,EAAAA,EAAAA,IAAAA,OAAAA,CAAMoC,SAAUvC,GAAWE,GAAwB,KACnDC,EAAAA,EAAAA,IAAAA,OAAAA,CAAMC,UAAU,QAAO,KAAc,KACrCD,EAAAA,EAAAA,IAAAA,OAAAA,KAAOT,EAAKkB,OAAO4B,YAAYC,UAO7C,CAEA,MAAMlC,EAAc,iOAgBdC,EAAa,gkBAkDbE,EAAiB,6FAOjBI,GAAa,mNAYD4B,EAAAA,EAAAA,SAAe,yFAQ3BnB,GAAe,6GAMfU,GAAsB3B,EAAAA,EAAAA,IAAG,yCAGpBoC,EAAAA,EAAAA,SAAe,2CAOpBhB,GAAkB,iEAEbiB,EAAAA,EAAAA,IAAQ,MAAOD,EAAAA,EAAAA,SAAe,2DAMnCR,GAAa,wMAUbC,GAAe,qRAgBfE,GAAY,+GAMZC,GAAqB,6FAIhBK,EAAAA,EAAAA,IAAQ,MAAOD,EAAAA,EAAAA,SAAe,2HAc5BC,EAAAA,EAAAA,IAAQ,MAAOD,EAAAA,EAAAA,UAAgB,8FAyB/BE,IAJOD,EAAAA,EAAAA,IAAQ,OAAQD,EAAAA,EAAAA,WAIFpC,EAAAA,EAAAA,IAAG,oDAIrBqC,EAAAA,EAAAA,IAAQ,MAAOD,EAAAA,EAAAA,WAAiB,uFAK9BA,EAAAA,EAAAA,SAAe,uC","sources":["webpack://gatsby-casper/./src/components/PostCard.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { kebabCase } from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\nimport _ from 'lodash';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport type { PageContext } from '../templates/post';\nimport config from '../website-config';\n\nexport type PostCardProps = {\n  post: PageContext;\n  isLarge?: boolean;\n  isNext?: boolean;\n};\n\nexport function PostCard({\n  post,\n  isLarge = false,\n  isNext = false,\n}: PostCardProps) {\n  const date = new Date(post.frontmatter.date);\n  const datetime = format(date, 'yyyy-MM-dd');\n  const displayDatetime = format(date, 'yyyy MM dd');\n\n  return (\n    <article\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${\n        isLarge ? 'post-card-large' : ''\n      }`}\n      css={[PostCardStyles, isLarge && PostCardLarge]}\n    >\n      {post.frontmatter.image && (\n        <Link\n          className=\"post-card-image-link\"\n          css={PostCardImageLink}\n          to={post.fields.slug}\n        >\n          <PostCardImage\n            className={`post-card-image ${isNext ? 'is-next' : ''}`}\n          >\n            {post.frontmatter?.image && (\n              <GatsbyImage\n                image={getImage(post.frontmatter.image)!}\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                loading={isLarge ? 'eager' : 'lazy'}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        {post.frontmatter.tags && config.showAllTags && (\n          <PostCardPrimaryTag className=\"post-card-primary-tag\">\n            {post.frontmatter.tags.map((tag, idx) => (\n              <React.Fragment key={tag}>\n                {idx > 0 && <>, &nbsp;</>}\n                <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n              </React.Fragment>\n            ))}\n          </PostCardPrimaryTag>\n        )}\n        {post.frontmatter.tags && !config.showAllTags && (\n          <PostCardPrimaryTag className=\"post-card-primary-tag\">\n            <Link to={`/tags/${kebabCase(post.frontmatter.tags[0])}/`}>\n              {post.frontmatter.tags[0]}\n            </Link>\n          </PostCardPrimaryTag>\n        )}\n        <Link\n          className=\"post-card-content-link\"\n          css={PostCardContentLink}\n          to={post.fields.slug}\n        >\n          <header>\n            <PostCardTitle className=\"post-card-title\">\n              {post.frontmatter.title}\n            </PostCardTitle>\n          </header>\n          <PostCardExcerpt className=\"post-card-excerpt\">\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <PostCardBylineContent className=\"post-card-byline-content\">\n            <span className=\"post-card-byline-date\">\n              <time dateTime={datetime}>{displayDatetime}</time>{' '}\n              <span className=\"bull\">&bull;</span>{' '}\n              <span>{post.fields.readingTime.text}</span>\n            </span>\n          </PostCardBylineContent>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n}\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 60px;\n  min-height: 220px;\n  background-size: cover;\n  transition: 0.4s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n  }\n`;\n\nconst PostCardLarge = css`\n  p {\n    display: block;\n  }\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    padding-bottom: 40px;\n    min-height: 280px;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-content-link {\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 12px;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background-size: cover;\n  border-radius: 12px;\n  border: 1px solid hsl(230deg 25% 94%);\n\n  img {\n    border-radius: 12px;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n    border: 1px solid hsl(230deg 6% 23%);\n  }\n  &.is-next {\n    border: 1px solid hsl(230deg 6% 23%);\n  }\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled.div`\n  margin: 15px 0 0.2em;\n  color: ${lighten('0.1', colors.midgrey)};\n  font-size: 1.3rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  }\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-size: 1.6rem;\n  @media (prefers-color-scheme: dark) {\n    color: #768086;\n  }\n  p {\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    margin-bottom: 0.8em;\n  }\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  color: ${lighten('0.1', colors.midgrey)};\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n\n  time {\n    font-size: 1.3rem;\n  }\n  span {\n    margin: 0;\n    font-size: 1.3rem;\n  }\n\n  a {\n    color: ${lighten('0.2', colors.darkgrey)};\n    font-weight: 600;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n  }\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  @media (prefers-color-scheme: dark) {\n    border-color: ${lighten('0.02', colors.darkgrey)};\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n\n  img {\n    border-radius: 100%;\n  }\n`;\n"],"names":["PostCard","post","isLarge","isNext","date","Date","frontmatter","datetime","format","displayDatetime","___EmotionJSX","className","image","css","PostCardStyles","PostCardLarge","Link","PostCardImageLink","to","fields","slug","PostCardImage","_post$frontmatter","GatsbyImage","getImage","alt","title","style","height","loading","PostCardContent","tags","config","PostCardPrimaryTag","map","tag","idx","React","key","_kebabCase","PostCardContentLink","PostCardTitle","PostCardExcerpt","excerpt","PostCardMeta","PostCardBylineContent","dateTime","readingTime","text","colors","lighten","AuthorProfileImage"],"sourceRoot":""}