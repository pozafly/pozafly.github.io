{"version":3,"file":"component---src-pages-tags-tsx-934a9ec4cce30843fca0.js","mappings":"mSAmBA,MAAMA,EAAY,CAAAC,KAAA,SAAAC,OAAA,mDAOZC,EAAO,CAAAF,KAAA,SAAAC,OAAA,wdA+CAE,EAAOA,KAClBC,EAAAA,EAAAA,GAACC,EAAAA,SAAQ,MACPD,EAAAA,EAAAA,GAAA,aAAO,SACPA,EAAAA,EAAAA,GAAA,QAAMJ,KAAK,SAASM,QAAQ,aAIjB,SAASC,GAAK,KAAEC,IAC7B,OACEJ,EAAAA,EAAAA,GAACK,EAAAA,EAAW,MACVL,EAAAA,EAAAA,GAACM,EAAAA,EAAO,CAACC,IAAKZ,IACZK,EAAAA,EAAAA,GAACQ,EAAAA,EAAO,OACRR,EAAAA,EAAAA,GAAA,QAAMS,GAAG,YAAYC,UAAU,YAAYH,IAAG,CAAGI,EAAAA,GAAUC,EAAAA,GAAK,SAC9DZ,EAAAA,EAAAA,GAAA,OAAKO,IAAKM,EAAAA,KACRb,EAAAA,EAAAA,GAAA,WAASU,UAAU,YAAYH,IAAG,CAAGO,EAAAA,SAAUC,EAAAA,QAAO,SACpDf,EAAAA,EAAAA,GAACgB,EAAAA,GAAc,CAACN,UAAU,qBACxBV,EAAAA,EAAAA,GAACiB,EAAAA,GAAa,CAACP,UAAU,mBAAkB,UAG7CV,EAAAA,EAAAA,GAACkB,EAAAA,GAAe,CAACR,UAAU,sBACzBV,EAAAA,EAAAA,GAAA,OAAKU,UAAU,iBACbV,EAAAA,EAAAA,GAAA,OAAKO,IAAKT,IACRE,EAAAA,EAAAA,GAAA,UACGI,EAAKe,kBAAkBC,MAAMC,IAAKC,IACjCtB,EAAAA,EAAAA,GAAA,MAAIuB,IAAKD,EAAIE,aACXxB,EAAAA,EAAAA,GAACyB,EAAAA,KAAI,CAACC,GAAI,UAASC,EAAAA,EAAAA,GAAUL,EAAIE,gBAC9BF,EAAIE,WAAW,KAAGF,EAAIM,WAAW,eAWtD5B,EAAAA,EAAAA,GAAC6B,EAAAA,EAAM,OAIf,C","sources":["webpack://record-journey/./src/pages/tags.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { kebabCase } from 'lodash-es';\n\nimport Footer from '@/components/Footer.tsx';\nimport SiteNav from '@/components/header/SiteNav.tsx';\nimport Wrapper from '@/components/Wrapper.tsx';\nimport IndexLayout from '@/layouts/index.tsx';\nimport {\n  inner,\n  outer,\n  PostFullContent,\n  PostFullHeader,\n  PostFullTitle,\n  SiteMain,\n} from '@/styles/shared.ts';\nimport { NoImage, PostFull } from '@/templates/post.tsx';\n\nconst PageTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    padding-bottom: 4vw;\n  }\n`;\n\nconst TagArea = css`\n  ul {\n    padding-left: initial;\n\n    li {\n      transform: translateY(0);\n      display: inline-block;\n      margin-right: 12px;\n      padding: 2px 4px;\n      color: var(--main-color);\n      list-style: none;\n      background: var(--tag-background);\n      border: 1px solid var(--image-border-color);\n      border-radius: 6px;\n      transition: all 0.2s ease;\n\n      &:hover {\n        transform: translateY(-3px);\n        box-shadow: 0 8px 20px var(--tag-boxshadow);\n      }\n\n      a {\n        display: inline-block;\n        padding: 4px;\n        color: var(--main-color);\n        text-decoration: none;\n        box-shadow: none;\n\n        &:hover {\n          box-shadow: none;\n        }\n      }\n    }\n  }\n`;\n\ntype Props = {\n  data: {\n    allMarkdownRemark: {\n      group: Array<{\n        fieldValue: string;\n        totalCount: number | string;\n      }>;\n    };\n  };\n};\n\nexport const Head = () => (\n  <Fragment>\n    <title>Tags</title>\n    <meta name=\"robots\" content=\"noindex\" />\n  </Fragment>\n);\n\nexport default function Tags({ data }: Props) {\n  return (\n    <IndexLayout>\n      <Wrapper css={PageTemplate}>\n        <SiteNav />\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <article className=\"post page\" css={[PostFull, NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTitle className=\"post-full-title\">Tags</PostFullTitle>\n              </PostFullHeader>\n\n              <PostFullContent className=\"post-full-content\">\n                <div className=\"post-content\">\n                  <div css={TagArea}>\n                    <ul>\n                      {data.allMarkdownRemark.group.map((tag) => (\n                        <li key={tag.fieldValue}>\n                          <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                            {tag.fieldValue} ({tag.totalCount})\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </PostFullContent>\n            </article>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } }\n      sort: { frontmatter: { createdAt: DESC } }\n      limit: 2000\n    ) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"names":["PageTemplate","name","styles","TagArea","Head","___EmotionJSX","Fragment","content","Tags","data","IndexLayout","Wrapper","css","SiteNav","id","className","SiteMain","outer","inner","PostFull","NoImage","PostFullHeader","PostFullTitle","PostFullContent","allMarkdownRemark","group","map","tag","key","fieldValue","Link","to","_kebabCase","totalCount","Footer"],"sourceRoot":""}