{"version":3,"sources":["webpack://gatsby-casper/./src/components/PostCard.tsx"],"names":["PostCard","post","large","date","Date","frontmatter","datetime","format","displayDatetime","className","image","css","PostCardStyles","PostCardLarge","PostCardImageLink","to","fields","slug","PostCardImage","childImageSharp","fluid","alt","title","style","height","PostCardContent","PostCardContentLink","PostCardHeader","tags","PostCardPrimaryTag","PostCardTitle","PostCardExcerpt","excerpt","PostCardMeta","authors","author","tooltip","PostCardBylineContent","map","index","key","id","length","dateTime","timeToRead","colors","Link","lighten","AuthorProfileImage"],"mappings":"mQAmBO,MAAMA,EAAoC,EAAGC,OAAMC,SAAQ,MAAY,UAC5E,MAAMC,EAAO,IAAIC,KAAKH,EAAKI,YAAYF,MAEjCG,GAAWC,OAAOJ,EAAM,cAExBK,GAAkBD,OAAOJ,EAAM,eAErC,OACE,mBACEM,UAAY,aAAYR,EAAKI,YAAYK,MAAQ,GAAK,cAAcR,EAAQ,kBAAoB,KAEhGS,IAAG,CAAGC,EAAgBV,GAASW,EAA5B,QAEFZ,EAAKI,YAAYK,QAChB,QAAC,KAAD,CAAMD,UAAU,uBAAuBE,IAAKG,EAAmBC,GAAId,EAAKe,OAAOC,OAC7E,QAACC,EAAD,CAAeT,UAAU,oBACtB,UAAAR,EAAKI,mBAAL,mBAAkBK,aAAlB,mBAAyBS,uBAAzB,eAA0CC,SACzC,QAAC,IAAD,CACEC,IAAM,GAAEpB,EAAKI,YAAYiB,oBACzBC,MAAO,CAAEC,OAAQ,QACjBJ,MAAOnB,EAAKI,YAAYK,MAAMS,gBAAgBC,WAMxD,QAACK,EAAD,CAAiBhB,UAAU,sBACzB,QAAC,KAAD,CAAMA,UAAU,yBAAyBE,IAAKe,EAAqBX,GAAId,EAAKe,OAAOC,OACjF,QAACU,EAAD,CAAgBlB,UAAU,oBACvBR,EAAKI,YAAYuB,OAChB,QAACC,EAAD,CAAoBpB,UAAU,wBAAwBM,GAAK,SAAQ,IAAYd,EAAKI,YAAYuB,KAAK,QAClG3B,EAAKI,YAAYuB,KAAK,KAG3B,QAACE,EAAD,CAAerB,UAAU,mBAAmBR,EAAKI,YAAYiB,SAE/D,QAACS,EAAD,CAAiBtB,UAAU,sBACzB,iBAAIR,EAAKI,YAAY2B,SAAW/B,EAAK+B,YAGzC,QAACC,EAAD,CAAcxB,UAAU,mBACtB,QAAC,IAAD,CAAYyB,QAASjC,EAAKI,YAAY8B,OAAQC,QAAQ,WACtD,QAACC,EAAD,CAAuB5B,UAAU,6BAC/B,oBACGR,EAAKI,YAAY8B,OAAOG,KAAI,CAACH,EAAQI,KAElC,QAAC,WAAD,CAAgBC,IAAKL,EAAOM,KAC1B,QAAC,KAAD,CAAM1B,GAAK,WAAU,IAAYoB,EAAOM,QAASN,EAAOM,IACvDxC,EAAKI,YAAY8B,OAAOO,OAAS,EAAIH,GAAS,UAKvD,gBAAM9B,UAAU,0BACd,gBAAMkC,SAAUrC,GAAWE,GAAwB,KACnD,gBAAMC,UAAU,QAAhB,KAFF,IAEwCR,EAAK2C,WAF7C,kBAWNhC,EAAiB,CAAH,uLAYdC,EAAgB,CAAH,klBAmDbC,EAAoB,CAAH,kGAOjBI,GAAgB,cAAH,oBAAG,CAAH,wIAOD2B,aAPC,MAWbpB,GAAkB,cAAH,oBAAG,CAAH,0EAMfC,GAAsBf,QAAH,yCAIdkC,aAJc,qCAWnBhB,GAAqB,OAAOiB,KAAP,sBAAH,0BAGbD,SAHa,oFAUlBf,GAAgB,aAAH,oBAAG,CAAH,sKAUbC,GAAkB,kBAAH,oBAAG,CAAH,8CAKRgB,QAAQ,MAAOF,aALP,gBASfZ,GAAe,iBAAH,oBAAG,CAAH,yEAMZI,GAAwB,cAAH,oBAAG,CAAH,8EAMhBU,QAAQ,MAAOF,aANC,6HAmBdE,QAAQ,MAAOF,cAnBD,8FA8BrBlB,GAAiB,iBAAH,oBAAG,CAAH,2CAmBPqB,IAJOD,QAAQ,OAAQF,eAIFlC,QAAH,oDAKfoC,QAAQ,MAAOF,eALA,uFAUbA,aAVa","file":"14cad5d5-1d9652f3f47610322455.js","sourcesContent":["import { format } from 'date-fns';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport _ from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\nimport { AuthorList } from './AuthorList';\n\nexport interface PostCardProps {\n  post: PageContext;\n  large?: boolean;\n}\n\nexport const PostCard: React.FC<PostCardProps> = ({ post, large = false }) => {\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <article\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${large ? 'post-card-large' : ''\n        }`}\n      css={[PostCardStyles, large && PostCardLarge]}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter?.image?.childImageSharp?.fluid && (\n              <Img\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                fluid={post.frontmatter.image.childImageSharp.fluid}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <PostCardHeader className=\"post-card-header\">\n            {post.frontmatter.tags && (\n              <PostCardPrimaryTag className=\"post-card-primary-tag\" to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                {post.frontmatter.tags[0]}\n              </PostCardPrimaryTag>\n            )}\n            <PostCardTitle className=\"post-card-title\">{post.frontmatter.title}</PostCardTitle>\n          </PostCardHeader>\n          <PostCardExcerpt className=\"post-card-excerpt\">\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList authors={post.frontmatter.author} tooltip=\"small\" />\n          <PostCardBylineContent className=\"post-card-byline-content\">\n            <span>\n              {post.frontmatter.author.map((author, index) => {\n                return (\n                  <React.Fragment key={author.id}>\n                    <Link to={`/author/${_.kebabCase(author.id)}/`}>{author.id}</Link>\n                    {post.frontmatter.author.length - 1 > index && ', '}\n                  </React.Fragment>\n                );\n              })}\n            </span>\n            <span className=\"post-card-byline-date\">\n              <time dateTime={datetime}>{displayDatetime}</time>{' '}\n              <span className=\"bull\">&bull;</span> {post.timeToRead} min read\n            </span>\n          </PostCardBylineContent>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 40px;\n  padding: 0 20px 40px;\n  min-height: 220px;\n  background-size: cover;\n`;\n\nconst PostCardLarge = css`\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    padding-bottom: 40px;\n    min-height: 280px;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: #fff no-repeat center center;\n  background-size: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  /* color: var(--darkgrey); */\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled(Link)`\n  margin: 0 0 0.2em;\n  /* color: var(--blue); */\n  color: ${colors.blue};\n  font-size: 1.2rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  }\n`;\n\nconst PostCardExcerpt = styled.section`\n  /* font-family: Georgia, serif; */\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)} !important;\n  }\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  margin: 4px 0 0 10px;\n  /* color: color(var(--midgrey) l(+10%)); */\n  color: ${lighten('0.1', colors.midgrey)};\n  font-size: 1.2rem;\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n\n  span {\n    margin: 0;\n  }\n\n  a {\n    /* color: color(var(--darkgrey) l(+20%)); */\n    color: ${lighten('0.2', colors.darkgrey)};\n    font-weight: 600;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n  }\n`;\n\nconst PostCardHeader = styled.header`\n  margin: 15px 0 0;\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-color: color(var(--darkgrey) l(+2%)); */\n    border-color: ${lighten('0.02', colors.darkgrey)};\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n"],"sourceRoot":""}