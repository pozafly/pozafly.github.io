{"version":3,"sources":["webpack://gatsby-casper/./node_modules/@deckdeckgo/highlight-code/dist/esm/deckdeckgo-highlight-code-languages-5f0b1c54.js","webpack://gatsby-casper/./node_modules/@deckdeckgo/highlight-code/dist/esm/deckgo-highlight-code.entry.js"],"names":[],"mappings":"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gBAAgB;AACzB,QAAQ,6BAA6B;AACrC,SAAS,gBAAgB;AACzB,QAAQ,eAAe;AACvB;;AAEgI;;;;;;;;;;;;;;;;;;AC/WnB;AAC4E;;AAEzL;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,+EAA+E,yBAAyB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,sCAAsC,sBAAsB;AAC5D;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,IAAI;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,oBAAoB;AACjC,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB,OAAO;AACnD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,IAAI;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,MAAM,eAAe,IAAI;AAC1C;AACA,MAAM;;AAEN,uBAAuB,IAAI;;AAE3B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,MAAM;AAC9E;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,oBAAoB;AACjC;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,YAAY;;AAEZ;AACA;AACA,mFAAmF,6BAA6B;AAChH;AACA;AACA;AACA;AACA,YAAY,QAAQ,2BAA2B,8BAA8B;AAC7E,YAAY,kBAAkB,wBAAwB,8BAA8B;AACpF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,KAAK,6BAA6B;AAClC;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA,YAAY,WAAW;AACvB,YAAY,QAAQ;AACpB,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0BAA0B,6BAA6B;AACvD;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAe,8CAA8C;;AAE7D;AACA;AACA;AACA,WAAW,OAAO,WAAW;AAC7B,WAAW,qBAAqB,cAAc;AAC9C,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA,WAAW,6BAA6B;AACxC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF;AACtF;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,IAAI;AACf,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,EAAE;AAChB,cAAc,yBAAyB;AACvC,cAAc,yBAAyB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B,aAAa;AACb,YAAY,kBAAkB;AAC9B,aAAa;AACb;;AAEA,YAAY,kBAAkB;AAC9B;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,kBAAkB;AAC7B,WAAW,EAAE;AACb,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,gBAAgB,iCAAiC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA,GAAG;AACH,eAAe,KAAK;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iJAAiJ,gBAAgB,EAAE;AACnK;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,yDAAyD;AACzD;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,YAAY,uCAAuC;AAC7E;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI;AACxB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mFAAmF,EAAE;AACrF,CAAC;;AAED;;AAEA;AACA;AACA,6HAA6H,IAAI,kDAAkD,EAAE;AACrL;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,ydAAyd;AACzd;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,OAAO,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gCAAgC,EAAE,MAAM,OAAO,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG;AACxE;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,EAAE;;AAEF;AACA,uBAAuB,eAAe;AACtC;AACA,iBAAiB;;AAEjB,iDAAiD;;AAEjD;AACA;AACA;;AAEA;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A;AACA;AACA;AACA,2BAA2B,+EAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+EAAgC;AAC3D,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+EAAgC;AACvD;AACA;AACA;AACA;AACA,uBAAuB,+EAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+EAAgC;AACzD;AACA;AACA;AACA;AACA;AACA,wDAAwD,aAAa;AACrE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sFAAsC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,sFAAsC;AAC9F,wDAAwD,sFAAsC;AAC9F;AACA,0BAA0B,sFAAsC;AAChE,+CAA+C,WAAW;AAC1D;AACA,YAAY,qDAAC,CAAC,iDAAI,GAAG,+CAA+C,4CAA4C,qDAAC,SAAS,2CAA2C,EAAE,qDAAC,UAAU,8LAA8L,GAAG,qDAAC,UAAU,eAAe;AAC7Y;AACA;AACA,0BAA0B,sFAAsC;AAChE;AACA;AACA;AACA,MAAM,qDAAC,oBAAoB,yBAAyB;AACpD,MAAM,qDAAC,SAAS,kBAAkB;AAClC;AACA;AACA;AACA,WAAW,qDAAC,SAAS,eAAe;AACpC;AACA;AACA,0BAA0B,sFAAsC;AAChE;AACA;AACA,YAAY,qDAAC,SAAS,kBAAkB,8GAA8G,qDAAC,YAAY,qDAAC,UAAU,eAAe;AAC7L;AACA;AACA,+CAA+C,kCAAkC,YAAY;AAC7F,YAAY,qDAAC,SAAS,cAAc,EAAE,qDAAC,UAAU,oBAAoB;AACrE;AACA,YAAY,QAAQ,qDAAU,OAAO;AACrC,yBAAyB;AACzB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAE4D","file":"vendors-node_modules_deckdeckgo_highlight-code_dist_esm_deckgo-highlight-code_entry_js.render-page.js","sourcesContent":["var DeckdeckgoHighlightCodeTerminal;\n(function (DeckdeckgoHighlightCodeTerminal) {\n  DeckdeckgoHighlightCodeTerminal[\"CARBON\"] = \"carbon\";\n  DeckdeckgoHighlightCodeTerminal[\"UBUNTU\"] = \"ubuntu\";\n  DeckdeckgoHighlightCodeTerminal[\"NONE\"] = \"none\";\n})(DeckdeckgoHighlightCodeTerminal || (DeckdeckgoHighlightCodeTerminal = {}));\n\nvar DeckdeckgoHighlightCodeCarbonTheme;\n(function (DeckdeckgoHighlightCodeCarbonTheme) {\n  DeckdeckgoHighlightCodeCarbonTheme[\"3024-NIGHT\"] = \"3024-night\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"A11Y-DARK\"] = \"a11y-dark\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"BLACKBOARD\"] = \"blackboard\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"BASE16-DARK\"] = \"base16-dark\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"BASE16-LIGHT\"] = \"base16-light\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"COBALT\"] = \"cobalt\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"DRACULA\"] = \"dracula\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"DUOTONE\"] = \"duotone\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"HOPSCOTCH\"] = \"hopscotch\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"LUCARIO\"] = \"lucario\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"MATERIAL\"] = \"material\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"MONOKAI\"] = \"monokai\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"NIGHT-OWL\"] = \"night-owl\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"NORD\"] = \"nord\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"OCEANIC-NEXT\"] = \"oceanic-next\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"ONE-LIGHT\"] = \"one-light\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"ONE-DARK\"] = \"one-dark\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"PANDA\"] = \"panda\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"PARAISO\"] = \"paraiso\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"SETI\"] = \"seti\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"SHADES-OF-PURPLE\"] = \"shades-of-purple\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"SOLARIZED-DARK\"] = \"solarized-dark\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"SOLARIZED-LIGHT\"] = \"solarized-light\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"SYNTHWAVE\"] = \"synthwave\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"TWILIGHT\"] = \"twilight\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"VERMINAL\"] = \"verminal\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"VSCODE\"] = \"vscode\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"YETI\"] = \"yeti\";\n  DeckdeckgoHighlightCodeCarbonTheme[\"ZENBURN\"] = \"zenburn\";\n})(DeckdeckgoHighlightCodeCarbonTheme || (DeckdeckgoHighlightCodeCarbonTheme = {}));\n\nconst deckdeckgoHighlightCodeLanguages = {\n  markup: { title: 'Markup' },\n  html: { title: 'HTML', main: 'markup' },\n  xml: { title: 'XML', main: 'markup' },\n  svg: { title: 'SVG', main: 'markup' },\n  mathml: { title: 'MathML', main: 'markup' },\n  ssml: { title: 'SSML', main: 'markup' },\n  atom: { title: 'Atom', main: 'markup' },\n  rss: { title: 'RSS', main: 'markup' },\n  css: { title: 'CSS' },\n  clike: { title: 'C-like' },\n  javascript: { title: 'JavaScript' },\n  js: { title: 'js', main: 'javascript' },\n  abap: { title: 'ABAP' },\n  abnf: { title: 'ABNF' },\n  actionscript: { title: 'ActionScript' },\n  ada: { title: 'Ada' },\n  agda: { title: 'Agda' },\n  al: { title: 'AL' },\n  antlr4: { title: 'ANTLR4' },\n  g4: { title: 'g4', main: 'antlr4' },\n  apacheconf: { title: 'Apache Configuration' },\n  apex: { title: 'Apex', require: ['sql'] },\n  apl: { title: 'APL' },\n  applescript: { title: 'AppleScript' },\n  aql: { title: 'AQL' },\n  arduino: { title: 'Arduino', require: ['cpp'] },\n  arff: { title: 'ARFF' },\n  asciidoc: { title: 'AsciiDoc' },\n  adoc: { title: 'adoc', main: 'asciidoc' },\n  aspnet: { title: 'ASP.NET (C#)', require: ['markup', 'csharp'] },\n  asm6502: { title: '6502 Assembly' },\n  autohotkey: { title: 'AutoHotkey' },\n  autoit: { title: 'AutoIt' },\n  bash: { title: 'Bash' },\n  shell: { title: 'Shell', main: 'bash' },\n  basic: { title: 'BASIC' },\n  batch: { title: 'Batch' },\n  bbcode: { title: 'BBcode' },\n  shortcode: { title: 'Shortcode', main: 'bbcode' },\n  birb: { title: 'Birb' },\n  bison: { title: 'Bison', require: ['c'] },\n  bnf: { title: 'BNF' },\n  rbnf: { title: 'RBNF', main: 'bnf' },\n  brainfuck: { title: 'Brainfuck' },\n  brightscript: { title: 'BrightScript' },\n  bro: { title: 'Bro' },\n  bsl: { title: 'BSL (1C:Enterprise)' },\n  oscript: { title: 'OneScript', main: 'bsl' },\n  c: { title: 'C' },\n  csharp: { title: 'C#' },\n  cs: { title: 'cs', main: 'csharp' },\n  dotnet: { title: 'dotnet', main: 'csharp' },\n  cpp: { title: 'C++', require: ['c'] },\n  cfscript: { title: 'CFScript' },\n  cfc: { title: 'cfc', main: 'cfscript' },\n  chaiscript: { title: 'ChaiScript', require: ['cpp'] },\n  cil: { title: 'CIL' },\n  clojure: { title: 'Clojure' },\n  cmake: { title: 'CMake' },\n  coffeescript: { title: 'CoffeeScript' },\n  coffee: { title: 'coffee', main: 'coffeescript' },\n  concurnas: { title: 'Concurnas' },\n  conc: { title: 'conc', main: 'concurnas' },\n  csp: { title: 'Content-Security-Policy' },\n  crystal: { title: 'Crystal', require: ['ruby'] },\n  'css-extras': { title: 'CSS Extras', require: ['css'] },\n  cypher: { title: 'Cypher' },\n  d: { title: 'D' },\n  dart: { title: 'Dart' },\n  dataweave: { title: 'DataWeave' },\n  dax: { title: 'DAX' },\n  dhall: { title: 'Dhall' },\n  diff: { title: 'Diff' },\n  django: { title: 'Django/Jinja2', require: ['markup-templating'] },\n  jinja2: { title: 'jinja2', main: 'django', require: ['markup-templating'] },\n  'dns-zone-file': { title: 'DNS zone file' },\n  'dns-zone': { title: 'dns-zone', main: 'dns-zone-file' },\n  docker: { title: 'Docker' },\n  dockerfile: { title: 'dockerfile', main: 'docker' },\n  dot: { title: 'DOT (Graphviz)' },\n  gv: { title: 'gv', main: 'dot' },\n  ebnf: { title: 'EBNF' },\n  editorconfig: { title: 'EditorConfig' },\n  eiffel: { title: 'Eiffel' },\n  ejs: { title: 'EJS', require: ['markup-templating'] },\n  eta: { title: 'Eta', main: 'ejs', require: ['markup-templating'] },\n  elixir: { title: 'Elixir' },\n  elm: { title: 'Elm' },\n  etlua: { title: 'Embedded Lua templating', require: ['lua', 'markup-templating'] },\n  erb: { title: 'ERB', require: ['ruby', 'markup-templating'] },\n  erlang: { title: 'Erlang' },\n  'excel-formula': { title: 'Excel Formula' },\n  xlsx: { title: 'xlsx', main: 'excel-formula' },\n  xls: { title: 'xls', main: 'excel-formula' },\n  fsharp: { title: 'F#' },\n  factor: { title: 'Factor' },\n  'firestore-security-rules': { title: 'Firestore security rules' },\n  flow: { title: 'Flow' },\n  fortran: { title: 'Fortran' },\n  ftl: { title: 'FreeMarker Template Language', require: ['markup-templating'] },\n  gml: { title: 'GameMaker Language' },\n  gamemakerlanguage: { title: 'gamemakerlanguage', main: 'gml' },\n  gcode: { title: 'G-code' },\n  gdscript: { title: 'GDScript' },\n  gedcom: { title: 'GEDCOM' },\n  gherkin: { title: 'Gherkin' },\n  git: { title: 'Git' },\n  glsl: { title: 'GLSL', require: ['c'] },\n  go: { title: 'Go' },\n  graphql: { title: 'GraphQL' },\n  groovy: { title: 'Groovy' },\n  haml: { title: 'Haml', require: ['ruby'] },\n  handlebars: { title: 'Handlebars', require: ['markup-templating'] },\n  haskell: { title: 'Haskell' },\n  hs: { title: 'hs', main: 'haskell' },\n  haxe: { title: 'Haxe' },\n  hcl: { title: 'HCL' },\n  hlsl: { title: 'HLSL', require: ['c'] },\n  http: { title: 'HTTP' },\n  hpkp: { title: 'HTTP Public-Key-Pins' },\n  hsts: { title: 'HTTP Strict-Transport-Security' },\n  ichigojam: { title: 'IchigoJam' },\n  icon: { title: 'Icon' },\n  'icu-message-format': { title: 'ICU Message Format' },\n  idris: { title: 'Idris', require: ['haskell'] },\n  idr: { title: 'idr', main: 'idris', require: ['haskell'] },\n  ignore: { title: '.ignore' },\n  gitignore: { title: '.gitignore', main: 'ignore' },\n  hgignore: { title: '.hgignore', main: 'ignore' },\n  npmignore: { title: '.npmignore', main: 'ignore' },\n  inform7: { title: 'Inform 7' },\n  ini: { title: 'Ini' },\n  io: { title: 'Io' },\n  j: { title: 'J' },\n  java: { title: 'Java' },\n  javadoc: { title: 'JavaDoc', require: ['markup', 'java', 'javadoclike'] },\n  javadoclike: { title: 'JavaDoc-like' },\n  javastacktrace: { title: 'Java stack trace' },\n  jolie: { title: 'Jolie' },\n  jq: { title: 'JQ' },\n  jsdoc: { title: 'JSDoc', require: ['javadoclike', 'typescript'] },\n  'js-extras': { title: 'JS Extras' },\n  json: { title: 'JSON' },\n  webmanifest: { title: 'Web App Manifest', main: 'json' },\n  json5: { title: 'JSON5', require: ['json'] },\n  jsonp: { title: 'JSONP', require: ['json'] },\n  jsstacktrace: { title: 'JS stack trace' },\n  'js-templates': { title: 'JS Templates' },\n  julia: { title: 'Julia' },\n  keyman: { title: 'Keyman' },\n  kotlin: { title: 'Kotlin' },\n  kt: { title: 'kt', main: 'kotlin' },\n  kts: { title: 'Kotlin Script', main: 'kotlin' },\n  kumir: { title: 'KuMir (КуМир)' },\n  kum: { title: 'kum', main: 'kumir' },\n  latex: { title: 'LaTeX' },\n  tex: { title: 'TeX', main: 'latex' },\n  context: { title: 'ConTeXt', main: 'latex' },\n  latte: { title: 'Latte', require: ['markup-templating', 'php'] },\n  less: { title: 'Less', require: ['css'] },\n  lilypond: { title: 'LilyPond', require: ['scheme'] },\n  ly: { title: 'ly', main: 'lilypond', require: ['scheme'] },\n  liquid: { title: 'Liquid' },\n  lisp: { title: 'Lisp' },\n  emacs: { title: 'emacs', main: 'lisp' },\n  elisp: { title: 'elisp', main: 'lisp' },\n  'emacs-lisp': { title: 'emacs-lisp', main: 'lisp' },\n  livescript: { title: 'LiveScript' },\n  llvm: { title: 'LLVM IR' },\n  lolcode: { title: 'LOLCODE' },\n  lua: { title: 'Lua' },\n  makefile: { title: 'Makefile' },\n  markdown: { title: 'Markdown', require: ['markup'] },\n  md: { title: 'md', main: 'markdown', require: ['markup'] },\n  'markup-templating': { title: 'Markup templating', require: ['markup'] },\n  matlab: { title: 'MATLAB' },\n  mel: { title: 'MEL' },\n  mizar: { title: 'Mizar' },\n  mongodb: { title: 'MongoDB' },\n  monkey: { title: 'Monkey' },\n  moonscript: { title: 'MoonScript' },\n  moon: { title: 'moon', main: 'moonscript' },\n  n1ql: { title: 'N1QL' },\n  n4js: { title: 'N4JS' },\n  n4jsd: { title: 'n4jsd', main: 'n4js' },\n  'nand2tetris-hdl': { title: 'Nand To Tetris HDL' },\n  naniscript: { title: 'Naninovel Script' },\n  nani: { title: 'nani', main: 'naniscript' },\n  nasm: { title: 'NASM' },\n  neon: { title: 'NEON' },\n  nginx: { title: 'nginx' },\n  nim: { title: 'Nim' },\n  nix: { title: 'Nix' },\n  nsis: { title: 'NSIS' },\n  objectivec: { title: 'Objective-C', require: ['c'] },\n  objc: { title: 'objc', main: 'objectivec', require: ['c'] },\n  ocaml: { title: 'OCaml' },\n  opencl: { title: 'OpenCL', require: ['c'] },\n  oz: { title: 'Oz' },\n  parigp: { title: 'PARI/GP' },\n  parser: { title: 'Parser', require: ['markup'] },\n  pascal: { title: 'Pascal' },\n  objectpascal: { title: 'Object Pascal', main: 'pascal' },\n  pascaligo: { title: 'Pascaligo' },\n  psl: { title: 'PATROL Scripting Language' },\n  pcaxis: { title: 'PC-Axis' },\n  px: { title: 'px', main: 'pcaxis' },\n  peoplecode: { title: 'PeopleCode' },\n  pcode: { title: 'pcode', main: 'peoplecode' },\n  perl: { title: 'Perl' },\n  php: { title: 'PHP', require: ['markup-templating'] },\n  phpdoc: { title: 'PHPDoc', require: ['php', 'javadoclike'] },\n  'php-extras': { title: 'PHP Extras', require: ['php'] },\n  plsql: { title: 'PL/SQL', require: ['sql'] },\n  powerquery: { title: 'PowerQuery' },\n  pq: { title: 'pq', main: 'powerquery' },\n  mscript: { title: 'mscript', main: 'powerquery' },\n  powershell: { title: 'PowerShell' },\n  processing: { title: 'Processing' },\n  prolog: { title: 'Prolog' },\n  promql: { title: 'PromQL' },\n  properties: { title: '.properties' },\n  protobuf: { title: 'Protocol Buffers' },\n  pug: { title: 'Pug', require: ['markup'] },\n  puppet: { title: 'Puppet' },\n  pure: { title: 'Pure' },\n  purebasic: { title: 'PureBasic' },\n  pbfasm: { title: 'pbfasm', main: 'purebasic' },\n  purescript: { title: 'PureScript', require: ['haskell'] },\n  purs: { title: 'purs', main: 'purescript', require: ['haskell'] },\n  python: { title: 'Python' },\n  py: { title: 'py', main: 'python' },\n  q: { title: 'Q (kdb+ database)' },\n  qml: { title: 'QML' },\n  qore: { title: 'Qore' },\n  r: { title: 'R' },\n  racket: { title: 'Racket', require: ['scheme'] },\n  rkt: { title: 'rkt', main: 'racket', require: ['scheme'] },\n  jsx: { title: 'React JSX', require: ['markup'] },\n  tsx: { title: 'React TSX', require: ['jsx', 'typescript'] },\n  reason: { title: 'Reason' },\n  regex: { title: 'Regex' },\n  rego: { title: 'Rego' },\n  renpy: { title: \"Ren'py\" },\n  rpy: { title: 'rpy', main: 'renpy' },\n  rest: { title: 'reST (reStructuredText)' },\n  rip: { title: 'Rip' },\n  roboconf: { title: 'Roboconf' },\n  robotframework: { title: 'Robot Framework' },\n  robot: { title: 'robot', main: 'robotframework' },\n  ruby: { title: 'Ruby' },\n  rb: { title: 'rb', main: 'ruby' },\n  rust: { title: 'Rust' },\n  sas: { title: 'SAS' },\n  sass: { title: 'Sass (Sass)', require: ['css'] },\n  scss: { title: 'Sass (Scss)', require: ['css'] },\n  scala: { title: 'Scala', require: ['java'] },\n  scheme: { title: 'Scheme' },\n  'shell-session': { title: 'Shell session', require: ['bash'] },\n  'sh-session': { title: 'sh-session', main: 'shell-session', require: ['bash'] },\n  shellsession: { title: 'shellsession', main: 'shell-session', require: ['bash'] },\n  smali: { title: 'Smali' },\n  smalltalk: { title: 'Smalltalk' },\n  smarty: { title: 'Smarty', require: ['markup-templating'] },\n  sml: { title: 'SML' },\n  smlnj: { title: 'SML/NJ', main: 'sml' },\n  solidity: { title: 'Solidity (Ethereum)' },\n  sol: { title: 'sol', main: 'solidity' },\n  'solution-file': { title: 'Solution file' },\n  sln: { title: 'sln', main: 'solution-file' },\n  soy: { title: 'Soy (Closure Template)', require: ['markup-templating'] },\n  sparql: { title: 'SPARQL', require: ['turtle'] },\n  rq: { title: 'rq', main: 'sparql', require: ['turtle'] },\n  'splunk-spl': { title: 'Splunk SPL' },\n  sqf: { title: 'SQF: Status Quo Function (Arma 3)' },\n  sql: { title: 'SQL' },\n  squirrel: { title: 'Squirrel' },\n  stan: { title: 'Stan' },\n  iecst: { title: 'Structured Text (IEC 61131-3)' },\n  stylus: { title: 'Stylus' },\n  swift: { title: 'Swift' },\n  't4-templating': { title: 'T4 templating' },\n  't4-cs': { title: 'T4 Text Templates (C#)', require: ['t4-templating', 'csharp'] },\n  t4: { title: 't4', main: 't4-cs', require: ['t4-templating', 'csharp'] },\n  't4-vb': { title: 'T4 Text Templates (VB)', require: ['t4-templating', 'vbnet'] },\n  tap: { title: 'TAP', require: ['yaml'] },\n  tcl: { title: 'Tcl' },\n  tt2: { title: 'Template Toolkit 2', require: ['markup-templating'] },\n  textile: { title: 'Textile', require: ['markup'] },\n  toml: { title: 'TOML' },\n  turtle: { title: 'Turtle' },\n  trig: { title: 'TriG', main: 'turtle' },\n  twig: { title: 'Twig', require: ['markup'] },\n  typescript: { title: 'TypeScript' },\n  ts: { title: 'ts', main: 'typescript' },\n  typoscript: { title: 'TypoScript' },\n  tsconfig: { title: 'TSConfig', main: 'typoscript' },\n  unrealscript: { title: 'UnrealScript' },\n  uscript: { title: 'uscript', main: 'unrealscript' },\n  uc: { title: 'uc', main: 'unrealscript' },\n  uri: { title: 'URI' },\n  url: { title: 'URL', main: 'uri' },\n  v: { title: 'V' },\n  vala: { title: 'Vala' },\n  vbnet: { title: 'VB.Net', require: ['basic'] },\n  velocity: { title: 'Velocity', require: ['markup'] },\n  verilog: { title: 'Verilog' },\n  vhdl: { title: 'VHDL' },\n  vim: { title: 'vim' },\n  'visual-basic': { title: 'Visual Basic' },\n  vb: { title: 'vb', main: 'visual-basic' },\n  vba: { title: 'VBA', main: 'visual-basic' },\n  warpscript: { title: 'WarpScript' },\n  wasm: { title: 'WebAssembly' },\n  wiki: { title: 'Wiki markup', require: ['markup'] },\n  xeora: { title: 'Xeora', require: ['markup'] },\n  xeoracube: { title: 'XeoraCube', main: 'xeora', require: ['markup'] },\n  'xml-doc': { title: 'XML doc (.net)', require: ['markup'] },\n  xojo: { title: 'Xojo (REALbasic)' },\n  xquery: { title: 'XQuery', require: ['markup'] },\n  yaml: { title: 'YAML' },\n  yml: { title: 'yml', main: 'yaml' },\n  yang: { title: 'YANG' },\n  zig: { title: 'Zig' },\n};\n\nexport { DeckdeckgoHighlightCodeTerminal as D, DeckdeckgoHighlightCodeCarbonTheme as a, deckdeckgoHighlightCodeLanguages as d };\n","import { h, r as registerInstance, c as createEvent, H as Host, g as getElement } from './index-5142f31b.js';\nimport { a as DeckdeckgoHighlightCodeCarbonTheme, D as DeckdeckgoHighlightCodeTerminal, d as deckdeckgoHighlightCodeLanguages } from './deckdeckgo-highlight-code-languages-5f0b1c54.js';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n    return commonjsRequire();\n  }\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar prism = createCommonjsModule(function (module) {\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will only be run by the current worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\tlookbehindLength = 0,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\n\t\t\t\tif (greedy && currentNode != tokenList.tail.prev) {\n\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str);\n\t\t\t\t}\n\n\t\t\t\tif (!match) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (lookbehind) {\n\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\tmatchStr = match[0].slice(lookbehindLength),\n\t\t\t\t\tto = from + matchStr.length,\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(to);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif ( module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof commonjsGlobal !== 'undefined') {\n\tcommonjsGlobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tvar Prism = window.Prism;\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n})();\n});\n\nfunction debounce(func, timeout) {\n    let timer;\n    return (...args) => {\n        const next = () => func(...args);\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(next, timeout && timeout > 0 ? timeout : 300);\n    };\n}\n\nfunction injectCSS(id, src) {\n    return new Promise((resolve, reject) => {\n        if (!document) {\n            resolve();\n            return;\n        }\n        if (document.getElementById(id)) {\n            resolve('CSS already loaded.');\n            return;\n        }\n        const link = document.createElement('link');\n        link.id = id;\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('href', src);\n        link.addEventListener('load', () => resolve('CSS loaded.'));\n        link.addEventListener('error', () => reject('Error loading css.'));\n        link.addEventListener('abort', () => reject('CSS loading aborted.'));\n        document.head.appendChild(link);\n    });\n}\n\nfunction loadTheme(theme) {\n  if (!theme || theme === undefined) {\n    return undefined;\n  }\n  switch (theme) {\n    case DeckdeckgoHighlightCodeCarbonTheme['3024-NIGHT']:\n      return import('./3024-night-8138cc8f.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['A11Y-DARK']:\n      return import('./a11y-dark-533291b3.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['BASE16-DARK']:\n      return import('./base16-dark-12f375e0.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['BASE16-LIGHT']:\n      return import('./base16-light-52469b64.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.BLACKBOARD:\n      return import('./blackboard-db1ca116.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.COBALT:\n      return import('./cobalt-5d681c9a.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.DUOTONE:\n      return import('./duotone-acd564a2.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.HOPSCOTCH:\n      return import('./hopscotch-4820dd1a.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.LUCARIO:\n      return import('./lucario-59b2ad39.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.MATERIAL:\n      return import('./material-8e59c55f.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.MONOKAI:\n      return import('./monokai-c3bd40c3.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['NIGHT-OWL']:\n      return import('./night-owl-36dc5565.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.NORD:\n      return import('./nord-ce9f3484.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['OCEANIC-NEXT']:\n      return import('./oceanic-next-e3f20f17.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['ONE-DARK']:\n      return import('./one-dark-3da1a5b7.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['ONE-LIGHT']:\n      return import('./one-light-81b6cd67.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.PANDA:\n      return import('./panda-2e75c11f.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.PARAISO:\n      return import('./paraiso-cc30311f.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.SETI:\n      return import('./seti-977c4512.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['SHADES-OF-PURPLE']:\n      return import('./shades-of-purple-649a9b24.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['SOLARIZED-DARK']:\n      return import('./solarized-dark-d1ab5e8b.js');\n    case DeckdeckgoHighlightCodeCarbonTheme['SOLARIZED-LIGHT']:\n      return import('./solarized-light-429511f1.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.SYNTHWAVE:\n      return import('./synthwave-af3bb869.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.TWILIGHT:\n      return import('./twilight-68d946d8.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.VERMINAL:\n      return import('./verminal-f2bc4235.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.VSCODE:\n      return import('./vscode-1e0057d8.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.YETI:\n      return import('./yeti-67a4664e.js');\n    case DeckdeckgoHighlightCodeCarbonTheme.ZENBURN:\n      return import('./zenburn-a2e7f052.js');\n    default:\n      return import('./dracula-0eb4b4d6.js');\n  }\n}\n\nconst CarbonThemeStyle = ({ style }) => {\n  return (h(\"style\", null, `\n      :host ${style};\n    `));\n};\n\nconst deckdeckgoHighlightCodeCss = \"code[class*=\\\"language-\\\"],pre[class*=\\\"language-\\\"]{color:black;background:none;text-shadow:0 1px white;font-family:Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=\\\"language-\\\"]::-moz-selection,pre[class*=\\\"language-\\\"] ::-moz-selection,code[class*=\\\"language-\\\"]::-moz-selection,code[class*=\\\"language-\\\"] ::-moz-selection{text-shadow:none;background:#b3d4fc}pre[class*=\\\"language-\\\"]::selection,pre[class*=\\\"language-\\\"] ::selection,code[class*=\\\"language-\\\"]::selection,code[class*=\\\"language-\\\"] ::selection{text-shadow:none;background:#b3d4fc}@media print{code[class*=\\\"language-\\\"],pre[class*=\\\"language-\\\"]{text-shadow:none}}pre[class*=\\\"language-\\\"]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=\\\"language-\\\"],pre[class*=\\\"language-\\\"]{background:#f5f2f0}:not(pre)>code[class*=\\\"language-\\\"]{padding:.1em;border-radius:.3em;white-space:normal}.token.comment,.token.prolog,.token.doctype,.token.cdata{color:slategray}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.property,.token.tag,.token.boolean,.token.number,.token.constant,.token.symbol,.token.deleted{color:#905}.token.selector,.token.attr-name,.token.string,.token.char,.token.builtin,.token.inserted{color:#690}.token.operator,.token.entity,.token.url,.language-css .token.string,.style .token.string{color:#9a6e3a;background:hsla(0, 0%, 100%, .5)}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.function,.token.class-name{color:#DD4A68}.token.regex,.token.important,.token.variable{color:#e90}.token.important,.token.bold{font-weight:bold}.token.italic{font-style:italic}.token.entity{cursor:help}:host ::slotted([slot=code]){display:none}:host([editable]){cursor:text}:host([editable]) code:empty:not(:focus):after{content:var(--deckgo-highlight-code-empty-text, \\\"Click to add your code\\\")}:host(.deckgo-highlight-code-carbon){display:var(--deckgo-highlight-code-carbon-display, block);overflow:var(--deckgo-highlight-code-carbon-overflow, auto);border:var(--deckgo-highlight-code-carbon-border);border-radius:var(--deckgo-highlight-code-carbon-border-radius, 4px);background:var(--deckgo-highlight-code-carbon-background, #282a36);color:var(--deckgo-highlight-code-carbon-color, white);box-shadow:var(--deckgo-highlight-code-carbon-box-shadow, rgba(0, 0, 0, 0.55) 0 8px 16px);margin:var(--deckgo-highlight-code-carbon-margin, 16px 0)}:host(.deckgo-highlight-code-carbon) div.deckgo-highlight-code-container{margin:var(--deckgo-highlight-code-margin, 0 0 16px)}:host(.deckgo-highlight-code-carbon) div.deckgo-highlight-code-container code>div.deckgo-highlight-code-line-number:before{background:var(--deckgo-highlight-code-carbon-background, transparent);border-color:var(--deckgo-highlight-code-line-numbers, var(--deckgo-highlight-code-token-comment, #6272a4));color:var(--deckgo-highlight-code-line-numbers, var(--deckgo-highlight-code-token-comment, #6272a4))}:host(.deckgo-highlight-code-carbon) ::slotted([slot=code]){color:var(--deckgo-highlight-code-carbon-color, white)}:host(.deckgo-highlight-code-ubuntu){display:var(--deckgo-highlight-code-ubuntu-display, block);overflow:var(--deckgo-highlight-code-ubuntu-overflow, auto);border:var(--deckgo-highlight-code-ubuntu-border);border-radius:var(--deckgo-highlight-code-ubuntu-border-radius, 6px 6px 0 0);background:var(--deckgo-highlight-code-ubuntu-background, #4c1e3d);color:var(--deckgo-highlight-code-ubuntu-color, #ddd);box-shadow:var(--deckgo-highlight-code-ubuntu-box-shadow, 2px 4px 10px rgba(0, 0, 0, 0.5));margin:var(--deckgo-highlight-code-ubuntu-margin, 16px 0)}:host(.deckgo-highlight-code-ubuntu) div.deckgo-highlight-code-container{margin:var(--deckgo-highlight-code-margin, 0 0 16px);padding:var(--deckgo-highlight-code-padding, 2px 0 0);background:transparent}:host(.deckgo-highlight-code-ubuntu) div.deckgo-highlight-code-container code{font-family:var(--deckgo-highlight-code-font-family, \\\"Ubuntu mono\\\")}:host(.deckgo-highlight-code-ubuntu) div.deckgo-highlight-code-container code>div.deckgo-highlight-code-line-number:before{background:var(--deckgo-highlight-code-ubuntu-background, #4c1e3d)}:host(.deckgo-highlight-code-ubuntu) ::slotted([slot=code]){color:var(--deckgo-highlight-code-ubuntu-color, #ddd)}div.deckgo-highlight-code-container{color:var(--deckgo-highlight-code-color, inherit);background:var(--deckgo-highlight-code-background);padding:var(--deckgo-highlight-code-padding, 0 16px);border-radius:var(--deckgo-highlight-code-border-radius);margin:var(--deckgo-highlight-code-margin, 16px 0);transform-origin:bottom left;transition:all 0.2s ease-in-out;transform:scale(var(--deckgo-highlight-code-zoom, 1));direction:var(--deckgo-highlight-code-direction, ltr);text-align:var(--deckgo-highlight-code-text-align, start);width:var(--deckgo-highlight-code-container-width);height:var(--deckgo-highlight-code-container-height);display:var(--deckgo-highlight-code-container-display, block);justify-content:var(--deckgo-highlight-code-container-justify-content);flex-direction:var(--deckgo-highlight-code-container-flex-direction);align-items:var(--deckgo-highlight-code-container-align-items)}div.deckgo-highlight-code-container code{overflow-y:var(--deckgo-highlight-code-scroll, auto);white-space:var(--deckgo-highlight-code-white-space, pre-wrap);font-size:var(--deckgo-highlight-code-font-size);font-family:var(--deckgo-highlight-code-font-family, monospace);line-height:var(--deckgo-highlight-code-line-height);display:var(--deckgo-highlight-code-display, block);counter-reset:linenumber;height:100%;}div.deckgo-highlight-code-container code>div.deckgo-highlight-code-line-number{counter-increment:linenumber;position:relative;padding-left:3.5em}div.deckgo-highlight-code-container code>div.deckgo-highlight-code-line-number:before{content:counter(linenumber);display:inline-block;position:absolute;top:0;bottom:0;left:0;width:2.5em;background:var(--deckgo-highlight-code-background);border-right:1px solid var(--deckgo-highlight-code-line-numbers, var(--deckgo-highlight-code-token-comment, #6272a4));color:var(--deckgo-highlight-code-line-numbers, var(--deckgo-highlight-code-token-comment, #6272a4))}div.deckgo-highlight-code-container code span.deckgo-highlight-code-anchor-hidden{visibility:hidden}div.deckgo-highlight-code-container code .deckgo-highlight-code-line{background:var(--deckgo-highlight-code-line-background, #3e4564);border-top:var(--deckgo-highlight-code-line-border-top);border-bottom:var(--deckgo-highlight-code-line-border-bottom)}div.deckgo-highlight-code-container code .language-css .token.string:not(.deckgo-highlight-code-line),div.deckgo-highlight-code-container code .style .token.string:not(.deckgo-highlight-code-line),div.deckgo-highlight-code-container code .token.entity:not(.deckgo-highlight-code-line),div.deckgo-highlight-code-container code .token.operator:not(.deckgo-highlight-code-line),div.deckgo-highlight-code-container code .token.url:not(.deckgo-highlight-code-line){background:inherit}div.deckgo-highlight-code-container code .token.comment,div.deckgo-highlight-code-container code .token.prolog,div.deckgo-highlight-code-container code .token.doctype,div.deckgo-highlight-code-container code .token.cdata{color:var(--deckgo-highlight-code-token-comment, #6272a4)}div.deckgo-highlight-code-container code .token.punctuation{color:var(--deckgo-highlight-code-token-punctuation, #6272a4)}div.deckgo-highlight-code-container code .token.property,div.deckgo-highlight-code-container code .token.tag,div.deckgo-highlight-code-container code .token.boolean,div.deckgo-highlight-code-container code .token.number,div.deckgo-highlight-code-container code .token.constant,div.deckgo-highlight-code-container code .token.symbol,div.deckgo-highlight-code-container code .token.deleted{color:var(--deckgo-highlight-code-token-property, #bd93f9)}div.deckgo-highlight-code-container code .token.selector,div.deckgo-highlight-code-container code .token.attr-name,div.deckgo-highlight-code-container code .token.string,div.deckgo-highlight-code-container code .token.char,div.deckgo-highlight-code-container code .token.builtin,div.deckgo-highlight-code-container code .token.inserted{color:var(--deckgo-highlight-code-token-selector, #50fa7b)}div.deckgo-highlight-code-container code .token.operator,div.deckgo-highlight-code-container code .token.entity,div.deckgo-highlight-code-container code .token.url,div.deckgo-highlight-code-container code .language-css .token.string,div.deckgo-highlight-code-container code .style .token.string{color:var(--deckgo-highlight-code-token-operator, #ff79c6)}div.deckgo-highlight-code-container code .token.atrule,div.deckgo-highlight-code-container code .token.attr-value,div.deckgo-highlight-code-container code .token.keyword{color:var(--deckgo-highlight-code-token-atrule, #ff79c6)}div.deckgo-highlight-code-container code .token.function,div.deckgo-highlight-code-container code .token.class-name{color:var(--deckgo-highlight-code-token-function, #ffb86c)}div.deckgo-highlight-code-container code .token.regex,div.deckgo-highlight-code-container code .token.important,div.deckgo-highlight-code-container code .token.variable{color:var(--deckgo-highlight-code-token-regex, #f1fa8c)}div.carbon{display:flex;justify-content:flex-start;padding:var(--deckgo-highlight-code-carbon-header-padding, 8px 16px);margin:var(--deckgo-highlight-code-carbon-header-margin, 0)}div.carbon>div{display:var(--deckgo-highlight-code-carbon-toolbar-display, \\\"block\\\");width:var(--deckgo-highlight-code-carbon-header-button-width, 12px);height:var(--deckgo-highlight-code-carbon-header-button-height, 12px);border-radius:var(--deckgo-highlight-code-carbon-header-button-border-radius, 50%);margin:var(--deckgo-highlight-code-carbon-header-button-margin, 8px 6px 8px 0)}div.carbon>div.red{background:var(--deckgo-highlight-code-carbon-header-button-red-background, #ff5f56);border:var(--deckgo-highlight-code-carbon-header-button-red-border, 0.5px solid #e0443e)}div.carbon>div.yellow{background:var(--deckgo-highlight-code-carbon-header-button-yellow-background, #ffbd2e);border:var(--deckgo-highlight-code-carbon-header-button-yellow-border, 0.5px solid #dea123)}div.carbon>div.green{background:var(--deckgo-highlight-code-carbon-header-button-green-background, #27c93f);border:var(--deckgo-highlight-code-carbon-header-button-green-border, 0.5px solid #1aab29)}div.ubuntu{display:flex;justify-content:flex-start;align-items:center;padding:var(--deckgo-highlight-code-ubuntu-header-padding, 0 8px);height:var(--deckgo-highlight-code-ubuntu-header-height, 25px);background:var(--deckgo-highlight-code-ubuntu-header-background, linear-gradient(#504b45 0%, #3c3b37 100%));font-family:var(--deckgo-highlight-code-ubuntu-header-font-family, \\\"Ubuntu\\\")}div.ubuntu>div{display:flex;align-items:center;justify-content:center;width:var(--deckgo-highlight-code-ubuntu-header-button-width, 12px);height:var(--deckgo-highlight-code-ubuntu-header-button-height, 12px);border-radius:var(--deckgo-highlight-code-ubuntu-header-button-border-radius, 50%);margin:var(--deckgo-highlight-code-ubuntu-header-button-margin, 0 4px 0 0);font-size:var(--deckgo-highlight-code-ubuntu-header-button-font-size, 7px);color:var(--deckgo-highlight-code-ubuntu-header-button-color, black);text-shadow:var(--deckgo-highlight-code-ubuntu-header-button-text-shadow, 0px 1px 0px rgba(255, 255, 255, 0.2));box-shadow:var(--deckgo-highlight-code-ubuntu-header-button-box-shadow, 0px 0px 1px 0px #41403a, 0px 1px 1px 0px #474642)}div.ubuntu>div.close{background:var(--deckgo-highlight-code-ubuntu-header-button-close-background, linear-gradient(#f37458 0%, #de4c12 100%));border:var(--deckgo-highlight-code-ubuntu-header-button-close-border)}div.ubuntu>div.minimize{background:var(--deckgo-highlight-code-ubuntu-header-button-minimize-background, linear-gradient(#7d7871 0%, #595953 100%));border:var(--deckgo-highlight-code-ubuntu-header-button-minimize-border)}div.ubuntu>div.maximize{background:var(--deckgo-highlight-code-ubuntu-header-button-maximize-background, linear-gradient(#7d7871 0%, #595953 100%));border:var(--deckgo-highlight-code-ubuntu-header-button-maximize-border)}div.ubuntu>div.close span,div.ubuntu>div.minimize span,div.ubuntu>div.maximize span{display:var(--deckgo-highlight-code-ubuntu-header-button-span-display, inherit)}div.ubuntu>p{color:var(--deckgo-highlight-code-ubuntu-header-user-color, #d5d0ce);font-size:var(--deckgo-highlight-code-ubuntu-header-user-font-size, 12px);line-height:var(--deckgo-highlight-code-ubuntu-header-user-line-height, 14px);margin:var(--deckgo-highlight-code-ubuntu-header-user-margin, 0 0 1px 4px)}\";\n\nconst DeckdeckgoHighlightCode = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.prismLanguageLoaded = createEvent(this, \"prismLanguageLoaded\", 7);\n    this.codeDidChange = createEvent(this, \"codeDidChange\", 7);\n    this.anchor = '// DeckDeckGo';\n    this.anchorZoom = '// DeckDeckGoZoom';\n    this.hideAnchor = true;\n    this.language = 'javascript';\n    this.lineNumbers = false;\n    this.terminal = DeckdeckgoHighlightCodeTerminal.CARBON;\n    this.editable = false;\n    this.theme = DeckdeckgoHighlightCodeCarbonTheme.DRACULA;\n    this.anchorOffsetTop = 0;\n    this.fetchOrParseAfterUpdate = false;\n    this.loaded = false;\n    this.catchTab = async ($event) => {\n      if ($event && $event.key === 'Tab') {\n        $event.preventDefault();\n        document.execCommand('insertHTML', false, '&#009');\n      }\n    };\n    this.debounceUpdateSlot = debounce(async () => {\n      await this.copyCodeToSlot();\n    }, 500);\n  }\n  async componentWillLoad() {\n    await this.loadGoogleFonts();\n    await this.loadTheme();\n  }\n  async componentDidLoad() {\n    const languageWasLoaded = await this.languageDidLoad();\n    await this.loadLanguages();\n    if (languageWasLoaded) {\n      await this.fetchOrParse();\n    }\n  }\n  async componentDidUpdate() {\n    if (this.fetchOrParseAfterUpdate) {\n      await this.fetchOrParse();\n      this.fetchOrParseAfterUpdate = false;\n    }\n  }\n  async loadTheme() {\n    if (this.terminal !== DeckdeckgoHighlightCodeTerminal.CARBON || !this.theme) {\n      this.themeStyle = undefined;\n      return;\n    }\n    const { theme } = await loadTheme(this.theme);\n    this.themeStyle = theme;\n  }\n  async languageLoaded($event) {\n    if (!$event || !$event.detail) {\n      return;\n    }\n    if (this.languagesToLoad) {\n      this.languagesToLoad = this.languagesToLoad.filter((lang) => lang !== $event.detail);\n    }\n    if (this.language && !this.loaded && (this.languagesToLoad === undefined || this.languagesToLoad.length <= 0)) {\n      await this.fetchOrParse();\n      this.loaded = true;\n    }\n  }\n  async fetchOrParse() {\n    if (!this.language || !deckdeckgoHighlightCodeLanguages[this.language]) {\n      return;\n    }\n    if (this.src) {\n      await this.fetchCode();\n    }\n    else {\n      await this.parseSlottedCode();\n    }\n  }\n  languageDidLoad() {\n    return new Promise((resolve) => {\n      if (!document || !this.language || this.language === '') {\n        resolve(false);\n        return;\n      }\n      const scripts = document.querySelector(\"[deckdeckgo-prism-loaded='\" + this.language + \"']\");\n      if (scripts) {\n        resolve(true);\n      }\n      else {\n        resolve(false);\n      }\n    });\n  }\n  async onLanguage() {\n    await this.loadLanguages(true);\n  }\n  async loadLanguages(reload = false) {\n    this.loaded = false;\n    if (!this.language || !deckdeckgoHighlightCodeLanguages[this.language]) {\n      console.error(`Language ${this.language} is not supported`);\n      return;\n    }\n    await this.initLanguagesToLoad();\n    await this.loadLanguagesRequire();\n    await this.loadScript(this.language, reload);\n  }\n  async initLanguagesToLoad() {\n    if (!this.language) {\n      return;\n    }\n    const definition = deckdeckgoHighlightCodeLanguages[this.language];\n    this.languagesToLoad = definition.require && definition.require.length > 0 ? [this.language, ...definition.require] : [this.language];\n  }\n  async loadLanguagesRequire() {\n    const promises = [];\n    const definition = deckdeckgoHighlightCodeLanguages[this.language];\n    if (definition.require) {\n      promises.push(...definition.require.map((extraScript) => this.loadScript(extraScript, false, true)));\n    }\n    if (promises.length <= 0) {\n      return;\n    }\n    await Promise.all(promises);\n  }\n  loadScript(lang, reload = false, requireScript = false) {\n    return new Promise(async (resolve) => {\n      if (!document || !lang || lang === '') {\n        resolve();\n        return;\n      }\n      // No need to load javascript, it is there\n      if (lang === 'javascript') {\n        this.prismLanguageLoaded.emit('javascript');\n        resolve();\n        return;\n      }\n      const scripts = document.querySelector(\"[deckdeckgo-prism='\" + lang + \"']\");\n      if (scripts) {\n        if (reload) {\n          this.prismLanguageLoaded.emit(lang);\n        }\n        resolve();\n        return;\n      }\n      const script = document.createElement('script');\n      script.onload = async () => {\n        script.setAttribute('deckdeckgo-prism-loaded', lang);\n        this.prismLanguageLoaded.emit(lang);\n      };\n      script.onerror = async () => {\n        if (script.parentElement) {\n          script.parentElement.removeChild(script);\n        }\n        // if the language definition doesn't exist or if unpkg is down, display code anyway\n        this.prismLanguageLoaded.emit(lang);\n      };\n      const definition = deckdeckgoHighlightCodeLanguages[this.language];\n      let language = !requireScript && definition.main ? definition.main : lang;\n      script.src = 'https://unpkg.com/prismjs@latest/components/prism-' + language + '.js';\n      script.setAttribute('deckdeckgo-prism', language);\n      script.defer = true;\n      document.head.appendChild(script);\n      script.addEventListener('load', () => resolve(), { once: true });\n    });\n  }\n  async onLineNumbersChange() {\n    await this.fetchOrParse();\n  }\n  async onCarbonChange() {\n    this.fetchOrParseAfterUpdate = true;\n    await this.loadGoogleFonts();\n  }\n  async loadGoogleFonts() {\n    if (this.terminal === DeckdeckgoHighlightCodeTerminal.UBUNTU) {\n      await injectCSS('google-fonts-ubuntu', 'https://fonts.googleapis.com/css?family=Ubuntu|Ubuntu+Mono&display=swap');\n    }\n  }\n  load() {\n    return new Promise(async (resolve) => {\n      if (!this.language || this.language === '') {\n        resolve();\n        return;\n      }\n      if (this.language === 'javascript') {\n        await this.fetchOrParse();\n        resolve();\n        return;\n      }\n      if (document.querySelector(\"[deckdeckgo-prism-loaded='\" + this.language + \"']\")) {\n        await this.fetchOrParse();\n      }\n      else {\n        await this.loadLanguages();\n      }\n      resolve();\n    });\n  }\n  parseSlottedCode() {\n    const code = this.el.querySelector(\"[slot='code']\");\n    if (code) {\n      return this.parseCode(code.innerText ? code.innerText.trim() : code.innerText);\n    }\n    else {\n      return new Promise((resolve) => {\n        resolve();\n      });\n    }\n  }\n  async fetchCode() {\n    if (!this.src) {\n      return;\n    }\n    let fetchedCode;\n    try {\n      const response = await fetch(this.src);\n      fetchedCode = await response.text();\n      await this.parseCode(fetchedCode);\n    }\n    catch (e) {\n      // Prism might not be able to parse the code for the selected language\n      const container = this.el.shadowRoot.querySelector('div.deckgo-highlight-code-container');\n      if (container && fetchedCode) {\n        container.children[0].innerHTML = fetchedCode;\n      }\n    }\n  }\n  parseCode(code) {\n    return new Promise(async (resolve, reject) => {\n      const container = this.el.shadowRoot.querySelector('div.deckgo-highlight-code-container');\n      if (!code || code === undefined || code === '') {\n        resolve();\n        return;\n      }\n      if (container) {\n        try {\n          // clear the container first\n          container.children[0].innerHTML = '';\n          // split the code on linebreaks\n          const regEx = RegExp(/\\n(?!$)/g); //\n          const match = code.split(regEx);\n          match.forEach((m, idx, array) => {\n            // On last element\n            if (idx === array.length - 1) {\n              this.attachHighlightObserver(container);\n            }\n            let div = document.createElement('div');\n            if (this.lineNumbers) {\n              div.classList.add('deckgo-highlight-code-line-number');\n            }\n            const highlight = prism.highlight(m, prism.languages[this.language], this.language);\n            // If empty, use \\u200B as zero width text spacer\n            div.innerHTML = highlight && highlight !== '' ? highlight : '\\u200B';\n            container.children[0].appendChild(div);\n          });\n          await this.addAnchors();\n          resolve();\n        }\n        catch (err) {\n          reject(err);\n        }\n      }\n    });\n  }\n  attachHighlightObserver(container) {\n    if (window && 'ResizeObserver' in window) {\n      // @ts-ignore\n      const observer = new ResizeObserver(async (_entries) => {\n        await this.addHighlight();\n        observer.disconnect();\n      });\n      observer.observe(container);\n    }\n    else {\n      // Back in my days...\n      setTimeout(async () => {\n        await this.addHighlight();\n      }, 100);\n    }\n  }\n  addAnchors() {\n    return new Promise((resolve) => {\n      const elements = this.el.shadowRoot.querySelectorAll('span.comment');\n      if (elements) {\n        const elementsArray = Array.from(elements);\n        const anchors = elementsArray.filter((element) => {\n          return this.hasLineAnchor(element.innerHTML);\n        });\n        if (anchors) {\n          anchors.forEach((anchor) => {\n            anchor.classList.add('deckgo-highlight-code-anchor');\n            if (this.hideAnchor) {\n              anchor.classList.add('deckgo-highlight-code-anchor-hidden');\n            }\n          });\n        }\n      }\n      resolve();\n    });\n  }\n  hasLineAnchor(line) {\n    return line && this.anchor && line.indexOf('@Prop') === -1 && line.split(' ').join('').indexOf(this.anchor.split(' ').join('')) > -1;\n  }\n  addHighlight() {\n    return new Promise(async (resolve) => {\n      if (this.highlightLines && this.highlightLines.length > 0) {\n        const rows = await this.findRowsToHighlight();\n        if (rows && rows.length > 0) {\n          const containerCode = this.el.shadowRoot.querySelector('code');\n          if (containerCode && containerCode.hasChildNodes()) {\n            const elements = Array.prototype.slice.call(containerCode.childNodes);\n            let rowIndex = 0;\n            let lastOffsetTop = -1;\n            let offsetHeight = -1;\n            elements.forEach((element) => {\n              let editElement;\n              // We need to convert text entries to an element in order to be able to style it\n              if (element.nodeName === '#text') {\n                const span = document.createElement('span');\n                if (element.previousElementSibling) {\n                  element.previousElementSibling.insertAdjacentElement('afterend', span);\n                }\n                else {\n                  element.parentNode.prepend(span);\n                }\n                span.appendChild(element);\n                editElement = span;\n              }\n              else {\n                editElement = element;\n              }\n              // We try to find the row index with the offset of the element\n              rowIndex = editElement.offsetTop > lastOffsetTop ? rowIndex + 1 : rowIndex;\n              lastOffsetTop = editElement.offsetTop;\n              // For some reason, some converted text element are displayed on two lines, that's why we should consider the 2nd one as index\n              offsetHeight = offsetHeight === -1 || offsetHeight > editElement.offsetHeight ? editElement.offsetHeight : offsetHeight;\n              const rowsIndexToCompare = editElement.offsetHeight > offsetHeight ? rowIndex + 1 : rowIndex;\n              if (rows.indexOf(rowsIndexToCompare) > -1) {\n                editElement.classList.add('deckgo-highlight-code-line');\n              }\n            });\n          }\n        }\n      }\n      resolve();\n    });\n  }\n  findRowsToHighlight() {\n    return new Promise((resolve) => {\n      let results = [];\n      const rows = this.highlightLines.split(' ');\n      if (rows && rows.length > 0) {\n        rows.forEach((row) => {\n          const index = row.split(',');\n          if (index && index.length >= 1) {\n            const start = parseInt(index[0], 0);\n            const end = parseInt(index[1], 0);\n            for (let i = start; i <= (isNaN(end) ? start : end); i++) {\n              results.push(i);\n            }\n          }\n        });\n      }\n      resolve(results);\n    });\n  }\n  findNextAnchor(enter) {\n    return new Promise(async (resolve) => {\n      const elements = this.el.shadowRoot.querySelectorAll('span.deckgo-highlight-code-anchor');\n      if (elements) {\n        const elementsArray = enter ? Array.from(elements) : Array.from(elements).reverse();\n        const anchor = elementsArray.find((element) => {\n          return enter ? element.offsetTop > this.anchorOffsetTop : element.offsetTop < this.anchorOffsetTop;\n        });\n        if (anchor) {\n          this.anchorOffsetTop = anchor.offsetTop;\n          resolve({\n            offsetTop: anchor.offsetTop,\n            hasLineZoom: this.hasLineZoom(anchor.textContent),\n          });\n        }\n        else if (!enter) {\n          const elementCode = this.el.shadowRoot.querySelector('code');\n          if (elementCode && elementCode.firstElementChild) {\n            this.anchorOffsetTop = 0;\n            resolve({\n              offsetTop: 0,\n              hasLineZoom: false,\n            });\n          }\n          else {\n            resolve(null);\n          }\n        }\n        else {\n          resolve(null);\n        }\n      }\n      else {\n        resolve(null);\n      }\n    });\n  }\n  zoomCode(zoom) {\n    return new Promise((resolve) => {\n      const container = this.el.shadowRoot.querySelector('div.deckgo-highlight-code-container');\n      if (container) {\n        container.style.setProperty('--deckgo-highlight-code-zoom', zoom ? '1.3' : '1');\n      }\n      resolve();\n    });\n  }\n  hasLineZoom(line) {\n    return line && this.anchorZoom && line.indexOf('@Prop') === -1 && line.split(' ').join('').indexOf(this.anchorZoom.split(' ').join('')) > -1;\n  }\n  async applyCode() {\n    if (!this.editable) {\n      return;\n    }\n    await this.copyCodeToSlot();\n    await this.parseSlottedCode();\n    this.codeDidChange.emit(this.el);\n  }\n  inputCode() {\n    if (!this.editable) {\n      return;\n    }\n    this.debounceUpdateSlot();\n  }\n  async copyCodeToSlot() {\n    var _a, _b;\n    const code = this.el.querySelector(\"[slot='code']\");\n    if (code) {\n      code.innerHTML = (_b = (_a = this.refCode) === null || _a === void 0 ? void 0 : _a.innerText) === null || _b === void 0 ? void 0 : _b.replace(/(?:\\n\\n)/g, '\\n').replace(/\\u200B/g, '');\n    }\n  }\n  edit() {\n    var _a;\n    if (!this.editable) {\n      return;\n    }\n    (_a = this.refCode) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  render() {\n    const hostClass = {\n      'deckgo-highlight-code-carbon': this.terminal === DeckdeckgoHighlightCodeTerminal.CARBON,\n      'deckgo-highlight-code-ubuntu': this.terminal === DeckdeckgoHighlightCodeTerminal.UBUNTU,\n    };\n    if (this.terminal === DeckdeckgoHighlightCodeTerminal.CARBON) {\n      hostClass[`deckgo-highlight-code-theme-${this.theme}`] = true;\n    }\n    return (h(Host, { class: hostClass, onClick: () => this.edit() }, this.renderCarbon(), this.renderUbuntu(), h(\"div\", { class: \"deckgo-highlight-code-container\" }, h(\"code\", { contentEditable: this.editable, onBlur: async () => await this.applyCode(), onInput: () => this.inputCode(), onKeyDown: ($event) => this.catchTab($event), ref: (el) => (this.refCode = el) }), h(\"slot\", { name: \"code\" }))));\n  }\n  renderCarbon() {\n    if (this.terminal !== DeckdeckgoHighlightCodeTerminal.CARBON) {\n      return undefined;\n    }\n    return [\n      h(CarbonThemeStyle, { style: this.themeStyle }),\n      h(\"div\", { class: \"carbon\" }, this.renderCarbonCircle('red'), this.renderCarbonCircle('yellow'), this.renderCarbonCircle('green')),\n    ];\n  }\n  renderCarbonCircle(color) {\n    return h(\"div\", { class: color });\n  }\n  renderUbuntu() {\n    if (this.terminal !== DeckdeckgoHighlightCodeTerminal.UBUNTU) {\n      return undefined;\n    }\n    return (h(\"div\", { class: \"ubuntu\" }, this.renderUbuntuCircle('close'), this.renderUbuntuCircle('minimize'), this.renderUbuntuCircle('maximize'), h(\"p\", null, h(\"slot\", { name: \"user\" }))));\n  }\n  renderUbuntuCircle(mode) {\n    const symbol = mode === 'close' ? '&#10005;' : mode === 'minimize' ? '&#9472;' : '&#9723;';\n    return (h(\"div\", { class: mode }, h(\"span\", { innerHTML: symbol })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"theme\": [\"loadTheme\"],\n    \"language\": [\"onLanguage\"],\n    \"lineNumbers\": [\"onLineNumbersChange\"],\n    \"terminal\": [\"onCarbonChange\"]\n  }; }\n};\nDeckdeckgoHighlightCode.style = deckdeckgoHighlightCodeCss;\n\nexport { DeckdeckgoHighlightCode as deckgo_highlight_code };\n"],"sourceRoot":""}