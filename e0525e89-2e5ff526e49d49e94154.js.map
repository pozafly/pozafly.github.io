{"version":3,"file":"e0525e89-2e5ff526e49d49e94154.js","mappings":"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","sources":["webpack://record-journey/./src/templates/post.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { format } from 'date-fns';\nimport { GatsbyImage, getImage, getSrc } from 'gatsby-plugin-image';\nimport { kebabCase } from 'lodash-es';\n\nimport { AuthorItem } from '@/components/AuthorItem.tsx';\nimport { Footer } from '@/components/Footer.tsx';\nimport Giscus from '@/components/Giscus.tsx';\nimport SiteNav from '@/components/header/SiteNav.tsx';\nimport PostContent from '@/components/PostContent.tsx';\nimport { ReadNext } from '@/components/ReadNext.tsx';\nimport { Wrapper } from '@/components/Wrapper.tsx';\nimport IndexLayout from '@/layouts/index.tsx';\nimport { colors } from '@/styles/colors.ts';\nimport { inner, outer, SiteMain } from '@/styles/shared.ts';\nimport config from '@/website-config.ts';\n\nimport type { ImageDataLike } from 'gatsby-plugin-image';\n\nexport type Author = {\n  name: string;\n  bio: string;\n  avatar: ImageDataLike;\n};\n\ntype PageTemplateProps = {\n  location: Location;\n  data: {\n    markdownRemark: {\n      html: string;\n      htmlAst: unknown;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: ImageDataLike;\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n      };\n      fields: {\n        readingTime: {\n          text: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            readingTime: {\n              text: string;\n            };\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n};\n\nexport type PageContext = {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      text: string;\n    };\n  };\n  frontmatter: {\n    image: ImageDataLike;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n};\n\nexport const Head = ({ data, location }: PageTemplateProps) => {\n  const post = data.markdownRemark;\n  const imageData = post.frontmatter.image;\n  let width: number | undefined;\n  let height: number | undefined;\n  if (imageData) {\n    width = getImage(imageData)?.width;\n    height = getImage(imageData)?.height;\n  }\n\n  const date = new Date(post.frontmatter.date);\n  const publishedTime = date.toISOString();\n\n  return (\n    <Fragment>\n      <title>{post.frontmatter.title}</title>\n\n      <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n      <meta property=\"og:site_name\" content={config.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={post.frontmatter.title} />\n      <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n      <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n      {imageData && <meta property=\"og:image\" content={`${config.siteUrl}${getSrc(imageData)}`} />}\n      <meta property=\"article:published_time\" content={publishedTime} />\n      {/* not sure if modified time possible */}\n      {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n      {post.frontmatter.tags && <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />}\n\n      {config.instagram && <meta property=\"article:publisher\" content={config.instagram} />}\n      {config.instagram && <meta property=\"article:author\" content={config.instagram} />}\n      <meta name=\"github:card\" content=\"summary_large_image\" />\n      <meta name=\"github:title\" content={post.frontmatter.title} />\n      <meta name=\"github:description\" content={post.frontmatter.excerpt || post.excerpt} />\n      <meta name=\"github:url\" content={config.siteUrl + location.pathname} />\n      {imageData && <meta name=\"github:image\" content={`${config.siteUrl}${getSrc(imageData)}`} />}\n      <meta name=\"github:label1\" content=\"Written by\" />\n      <meta name=\"github:data1\" content={post.frontmatter.author[0].name} />\n      <meta name=\"github:label2\" content=\"Filed under\" />\n      {post.frontmatter.tags && <meta name=\"github:data2\" content={post.frontmatter.tags[0]} />}\n      {config.github && (\n        <meta name=\"github:site\" content={`@${config.github.split('https://github.com/')[1]}`} />\n      )}\n      {config.github && (\n        <meta name=\"github:creator\" content={`@${config.github.split('https://github.com/')[1]}`} />\n      )}\n      {width && <meta property=\"og:image:width\" content={width?.toString()} />}\n      {height && <meta property=\"og:image:height\" content={height?.toString()} />}\n    </Fragment>\n  );\n};\n\nfunction PageTemplate({ data, pageContext, location }: PageTemplateProps) {\n  const post = data.markdownRemark;\n\n  const imageData = post.frontmatter.image;\n  const imageSource = getImage(imageData);\n\n  const date = new Date(post.frontmatter.date);\n  const datetime = format(date, 'yyyy-MM-dd');\n  const displayDatetime = format(date, 'yyyy-MM-dd');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Wrapper css={PostTemplate}>\n        <SiteNav isPost post={post.frontmatter} />\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !imageData && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-full-tags\">\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 &&\n                    config.showAllTags &&\n                    post.frontmatter.tags.map((tag, idx) => (\n                      <Fragment key={tag}>\n                        {idx > 0 && <Fragment>, &nbsp;</Fragment>}\n                        <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                      </Fragment>\n                    ))}\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 &&\n                    !config.showAllTags && (\n                      <Link to={`/tags/${kebabCase(post.frontmatter.tags[0])}/`}>\n                        {post.frontmatter.tags[0]}\n                      </Link>\n                    )}\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <AuthorListUl className=\"author-list\">\n                      <AuthorItem\n                        key={post.frontmatter.author[0].name}\n                        author={post.frontmatter.author[0]}\n                      />\n                    </AuthorListUl>\n\n                    <section className=\"post-full-byline-meta\">\n                      <div className=\"author-name\">\n                        {post.frontmatter.author.map((author) => (\n                          <Link key={author.name} to={'/about'}>\n                            {author.name}\n                          </Link>\n                        ))}\n                      </div>\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span>\n                          {post.fields.readingTime.text}\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {imageSource && (\n                <PostFullImage>\n                  <GatsbyImage\n                    image={imageSource}\n                    style={{ height: '100%' }}\n                    alt={post.frontmatter.title}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent html={post.html} />\n            </article>\n            <div css={GiscusStyle}>\n              <Giscus />\n            </div>\n          </div>\n        </main>\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nconst GiscusStyle = css`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 760px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    padding-bottom: 4vw;\n    background: var(--background-color);\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 1.2rem;\n  font-weight: 600;\n  line-height: 1.4em;\n  color: ${colors.midgrey};\n\n  a {\n    font-size: 1.2rem;\n  }\n`;\n\nexport const AuthorListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 0 0 4px;\n  padding: 0;\n  list-style: none;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  font-size: 2rem;\n  font-weight: 360;\n  line-height: 1.4em;\n  color: var(--post-card-description);\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  border-top: 1px solid var(--post-full-border);\n\n  .post-full-byline-content {\n    display: flex;\n    flex-grow: 1;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    font-size: 1.4rem;\n    line-height: 1.2em;\n    color: #768086;\n    letter-spacing: 0.2px;\n  }\n\n  .post-full-byline-meta .author-name {\n    margin: 0 0 3px;\n    font-size: 1.4rem;\n    font-weight: 500;\n    line-height: 1.3em;\n  }\n\n  .post-full-byline-meta .author-name a {\n    font-size: 13px;\n    color: var(--post-full-meta-link);\n  }\n\n  .post-full-byline-meta .author-name a:hover {\n    color: var(--post-full-meta-link-hover);\n  }\n\n  .post-full-byline-meta .byline-reading-time,\n  .post-full-byline-meta .byline-meta-date {\n    font-size: 13px;\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: var(--post-full-title);\n\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  width: 80%;\n  max-height: 800px;\n  margin: 25px auto 50px;\n  background-size: cover;\n  border: 1px solid var(--image-border-color);\n  border-radius: 8px;\n\n  img {\n    border-radius: 8px;\n  }\n\n  @media (max-width: 1170px) {\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n  }\n\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n  }\n`;\n\nexport const query = graphql`\n  query ($slug: String, $primaryTag: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        excerpt\n        image {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n        author {\n          name\n          bio\n          avatar {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 5\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            readingTime {\n              text\n            }\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"names":["Head","_ref","data","location","post","markdownRemark","imageData","frontmatter","image","width","height","getImage","_getImage","_getImage2","publishedTime","Date","date","toISOString","___EmotionJSX","Fragment","title","name","content","excerpt","property","config","pathname","getSrc","tags","author","_width","toString","_height","GiscusStyle","styles","PostTemplate","PostFull","NoImage","PostFullHeader","target","PostFullTags","colors","AuthorListUl","PostFullCustomExcerpt","PostFullByline","PostFullTitle","PostFullImage","pageContext","imageSource","datetime","format","displayDatetime","IndexLayout","className","Wrapper","css","SiteNav","isPost","id","SiteMain","outer","inner","length","map","tag","idx","key","Link","to","_kebabCase","AuthorItem","dateTime","fields","readingTime","text","GatsbyImage","style","alt","PostContent","html","Giscus","ReadNext","currentPageSlug","relatedPosts","Footer"],"sourceRoot":""}