{"version":3,"file":"component---src-pages-tags-tsx-2e00b819c6f80ea0c2a5.js","mappings":"8PAsBA,MAAMA,GAAeC,EAAAA,EAAAA,IAAG,4HAUJC,EAAAA,EAAAA,SAAe,gBAiEnC,UA5DuBC,IAAmB,IAAlB,KAAEC,GAAW,EACnC,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,MACVD,EAAAA,EAAAA,IAACE,EAAAA,EAAM,MACLF,EAAAA,EAAAA,IAAAA,QAAAA,KAAO,UAETA,EAAAA,EAAAA,IAACG,EAAAA,EAAO,CAACP,IAAKD,IACZK,EAAAA,EAAAA,IAAAA,SAAAA,CAAQI,UAAU,+BAA+BR,IAAG,CAAGS,EAAAA,GAAYC,EAAAA,GAAiB,SAClFN,EAAAA,EAAAA,IAAAA,MAAAA,CAAKJ,IAAG,CAAGW,EAAAA,GAAOC,EAAAA,GAAW,SAC3BR,EAAAA,EAAAA,IAAAA,MAAAA,CAAKJ,IAAKa,EAAAA,KACRT,EAAAA,EAAAA,IAACU,EAAAA,EAAO,CAACC,QAAQ,QAIvBX,EAAAA,EAAAA,IAAAA,OAAAA,CAAMY,GAAG,YAAYR,UAAU,YAAYR,IAAG,CAAGiB,EAAAA,GAAUN,EAAAA,GAAK,SAC9DP,EAAAA,EAAAA,IAAAA,MAAAA,CAAKJ,IAAKa,EAAAA,KACRT,EAAAA,EAAAA,IAAAA,UAAAA,CAASI,UAAU,YAAYR,IAAG,CAAGkB,EAAAA,SAAUC,EAAAA,QAAO,SACpDf,EAAAA,EAAAA,IAACgB,EAAAA,eAAc,CAACZ,UAAU,qBACxBJ,EAAAA,EAAAA,IAACiB,EAAAA,cAAa,CAACb,UAAU,mBAAkB,UAG7CJ,EAAAA,EAAAA,IAACkB,EAAAA,EAAe,CAACd,UAAU,sBACzBJ,EAAAA,EAAAA,IAAAA,MAAAA,CAAKI,UAAU,iBACbJ,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAAAA,KAAAA,KACGD,EAAKoB,kBAAkBC,MAAMC,KAAIC,IAChCtB,EAAAA,EAAAA,IAAAA,KAAAA,CAAIuB,IAAKD,EAAIE,aACXxB,EAAAA,EAAAA,IAACyB,EAAAA,GAAI,CAACC,GAAK,SAAQC,IAAUL,EAAIE,gBAC9BF,EAAIE,WAAW,KAAGF,EAAIM,WAAW,gBAWtD5B,EAAAA,EAAAA,IAAC6B,EAAAA,EAAM,OAEG,C","sources":["webpack://gatsby-casper/./src/pages/tags.tsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql, Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport kebabCase from \"lodash/kebabCase\"\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostFullContent } from '../components/PostContent';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  SiteArchiveHeader,\n  SiteHeader,\n  SiteMain,\n  SiteNavMain,\n} from '../styles/shared';\nimport { NoImage, PostFull, PostFullHeader, PostFullTitle } from '../templates/post';\nimport { colors } from '../styles/colors';\n\nconst PageTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    padding-bottom: 4vw;\n    background: #fff;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nconst Tags: React.FC = ({ data }: any) => {\n  return (\n    <IndexLayout>\n      <Helmet>\n        <title>Tags</title>\n      </Helmet>\n      <Wrapper css={PageTemplate}>\n        <header className=\"site-archive-header no-image\" css={[SiteHeader, SiteArchiveHeader]}>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <article className=\"post page\" css={[PostFull, NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTitle className=\"post-full-title\">Tags</PostFullTitle>\n              </PostFullHeader>\n\n              <PostFullContent className=\"post-full-content\">\n                <div className=\"post-content\">\n                  <div>\n                    <ul>\n                      {data.allMarkdownRemark.group.map(tag => (\n                        <li key={tag.fieldValue}>\n                          <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                            {tag.fieldValue} ({tag.totalCount})\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </PostFullContent>\n            </article>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 2000\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags;"],"names":["PageTemplate","css","colors","_ref","data","___EmotionJSX","IndexLayout","Helmet","Wrapper","className","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","id","SiteMain","PostFull","NoImage","PostFullHeader","PostFullTitle","PostFullContent","allMarkdownRemark","group","map","tag","key","fieldValue","Link","to","kebabCase","totalCount","Footer"],"sourceRoot":""}