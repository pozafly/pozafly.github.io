{"version":3,"file":"component---src-templates-index-tsx-7f2fafa3dd0456c5354d.js","mappings":"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","sources":["webpack://record-journey/./src/components/header/BackgroundImage.tsx","webpack://record-journey/./src/components/header/HomeSiteNav.tsx","webpack://record-journey/./src/components/Pagination.tsx","webpack://record-journey/./src/templates/index.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { getSrc } from 'gatsby-plugin-image';\n\nimport type { ImageDataLike } from 'gatsby-plugin-image';\n\nexport default function BackgroundImage({ imageSrc }: { imageSrc: ImageDataLike }) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const imgRef = useRef<null | HTMLImageElement>(null);\n\n  useEffect(() => {\n    if (imgRef.current) {\n      setIsLoaded(true);\n    }\n  }, []);\n\n  return (\n    <HeaderBackground>\n      <img\n        src={getSrc(imageSrc) || ''}\n        className={isLoaded ? 'loaded' : ''}\n        alt=\"header background\"\n        ref={imgRef}\n      />\n    </HeaderBackground>\n  );\n}\n\nconst HeaderBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 100%;\n  height: 350px;\n\n  img {\n    transform: scale(1.05) translateY(10px);\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    object-fit: cover;\n    transition:\n      opacity 0.6s cubic-bezier(0.33, 1, 0.68, 1),\n      transform 0.6s cubic-bezier(0.33, 1, 0.68, 1);\n\n    &.loaded {\n      transform: scale(1) translateY(0);\n      opacity: 1;\n    }\n  }\n\n  @media (max-width: 780px) {\n    height: 28rem;\n  }\n\n  @media (max-width: 500px) {\n    height: 25rem;\n  }\n`;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { SiteNavLogo } from '@/components/header/SiteNavLogo.tsx';\nimport ThemeModeSwitch from '@/components/header/ThemeModeSwitch.tsx';\nimport { Github } from '@/components/icons/github.tsx';\nimport { Instagram } from '@/components/icons/instagram.tsx';\nimport useTheme from '@/hooks/useTheme.ts';\nimport { inner, SocialLink, SocialLinkFb } from '@/styles/shared.ts';\nimport config from '@/website-config.ts';\n\nconst HEIGHT_OFFSET = 92;\n\nexport default function HomeSiteNav() {\n  const [isScrollDown, isSetScrollDown] = useState(false);\n  const lastScrollY = useRef<number>(0);\n  const ticking = useRef<boolean>(false);\n  const { theme } = useTheme();\n  const isWhite = !(isScrollDown && theme === 'light');\n\n  const onScroll = useCallback(() => {\n    if (!ticking.current) {\n      requestAnimationFrame(() => {\n        lastScrollY.current = window.scrollY;\n        const isScrolled = lastScrollY.current >= HEIGHT_OFFSET;\n        isSetScrollDown(isScrolled);\n        ticking.current = false;\n      });\n    }\n    ticking.current = true;\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll, { passive: true });\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [onScroll]);\n\n  return (\n    <header className=\"site-header\">\n      <div css={[SiteNavMain]} className={`${isScrollDown ? 'is-scroll-down' : ''}`}>\n        <div css={inner}>\n          <nav css={SiteNavStyles}>\n            <SiteNavLeft className={`site-nav-left`}>\n              <SiteNavLogo />\n              <SiteNavContent>\n                <ul css={NavStyles} role=\"menu\">\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      Home\n                    </Link>\n                  </li>\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/about\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      About\n                    </Link>\n                  </li>\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/tags\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      Tags\n                    </Link>\n                  </li>\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/tags/diary/\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      Diary\n                    </Link>\n                  </li>\n                </ul>\n              </SiteNavContent>\n            </SiteNavLeft>\n            <SiteNavRight>\n              <SocialLinks>\n                {config.instagram && (\n                  <a\n                    className={`not-mobile ${isWhite ? 'is-white' : ''}`}\n                    css={[SocialLink, SocialLinkFb]}\n                    href={config.instagram}\n                    target=\"_blank\"\n                    title=\"Instagram\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Instagram />\n                  </a>\n                )}\n                {config.github && (\n                  <a\n                    className={`not-mobile ${isWhite ? 'is-white' : ''}`}\n                    css={SocialLink}\n                    href={config.github}\n                    title=\"Github\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Github />\n                  </a>\n                )}\n\n                <ThemeModeSwitch isWhite={isWhite} />\n              </SocialLinks>\n            </SiteNavRight>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport const SiteNavMain = css`\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  right: 0;\n  left: 0;\n  transition: background 0.4s ease;\n\n  &.is-scroll-down {\n    background: var(--nav-background);\n    backdrop-filter: saturate(180%) blur(20px);\n    border-bottom: 1px solid var(--nav-border-color);\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 100;\n  overflow-y: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 52px;\n  font-size: 1.3rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  overflow: auto hidden;\n  display: flex;\n  flex: 1 0 auto;\n  align-items: center;\n  margin-right: 10px;\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.2px;\n  white-space: nowrap;\n  -webkit-overflow-scrolling: touch;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n  }\n`;\n\nconst SiteNavContent = styled.div`\n  position: relative;\n  align-self: flex-start;\n`;\n\nconst NavStyles = css`\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1);\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n  }\n\n  li a {\n    position: relative;\n    display: block;\n    padding: 10px 12px;\n    font-size: 1.2rem;\n    color: var(--main-color);\n    opacity: 0.7;\n    transition: opacity 0.2s ease-in-out;\n\n    @media (max-width: 700px) {\n      padding: 10px 8px;\n    }\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n\n  li a.is-white {\n    color: #fff;\n\n    &:before {\n      background: #fff;\n    }\n  }\n\n  .nav-current {\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  display: flex;\n  flex: 0 1 auto;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n\n  @media (max-width: 700px) {\n    .not-mobile {\n      display: none;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\n\nexport type PaginationProps = {\n  currentPage: number;\n  numPages: number;\n};\n\nfunction Pagination({ currentPage, numPages }: PaginationProps) {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const isEndFirst = currentPage > 3;\n  const isEndLast = currentPage <= numPages - 3;\n  const prevPage = currentPage - 1 === 1 ? '/' : `../${(currentPage - 1).toString()}`;\n  const nextPage = `../${(currentPage + 1).toString()}`;\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {isEndFirst && (\n          <Link to=\"/\" rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {'‹'}\n          </Link>\n        )}\n\n        {Array.from(\n          { length: numPages },\n          (_, i) =>\n            i > currentPage - 4 &&\n            i < currentPage + 2 && (\n              <Link\n                key={`pagination-number${i + 1}`}\n                className={i + 1 === currentPage ? 'active' : ''}\n                to={`/${i === 0 ? '' : i + 1}`}\n              >\n                {i + 1}\n              </Link>\n            ),\n        )}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {'›'}\n          </Link>\n        )}\n\n        {isEndLast && (\n          <Link to={`/${numPages}`} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nconst navCss = css`\n  margin-bottom: 32px;\n  text-align: center;\n\n  div {\n    display: inline-block;\n    padding: 10px;\n    background: rgb(25 27 31 / 0.1);\n    border-radius: 100px;\n  }\n\n  a {\n    float: left;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    margin: 0 4px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans', 'Ubuntu',\n      'Droid Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.5rem;\n    color: black;\n    text-decoration: none;\n    background: #fff;\n    border-radius: 100px;\n    box-shadow:\n      rgb(39 44 49 / 0.06) 8px 14px 38px,\n      rgb(39 44 49 / 0.03) 1px 3px 8px;\n    transition: background-color 0.3s;\n\n    &.active {\n      background-color: #b3b3b3;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    div {\n      background: rgb(255 255 255 / 0.1);\n    }\n\n    a {\n      color: #fff;\n      background: #000;\n\n      &.active {\n        background-color: #626262;\n      }\n\n      &:hover:not(.active) {\n        background-color: #272727;\n      }\n    }\n  }\n\n  @media (max-width: 650px) {\n    a {\n      width: 32px;\n      height: 32px;\n      margin: 0 2px;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { getImage, getSrc } from 'gatsby-plugin-image';\n\nimport { Footer } from '@/components/Footer.tsx';\nimport BackgroundImage from '@/components/header/BackgroundImage';\nimport HomeSiteNav from '@/components/header/HomeSiteNav';\nimport Pagination from '@/components/Pagination.tsx';\nimport { PostCard } from '@/components/PostCard.tsx';\nimport { Wrapper } from '@/components/Wrapper.tsx';\nimport IndexLayout from '@/layouts/index.tsx';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteDescription,\n  SiteHeaderContent,\n  SiteHeaderStyles,\n  SiteMain,\n  SiteTitle,\n} from '@/styles/shared.ts';\nimport config from '@/website-config.ts';\n\nimport type { PageContext } from '@/templates/post.tsx';\nimport type { ImageDataLike } from 'gatsby-plugin-image';\n\nexport type IndexProps = {\n  children: React.ReactNode;\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: ImageDataLike;\n    header: ImageDataLike;\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n};\n\nexport const Head = ({ data }: IndexProps) => {\n  const width = getImage(data.header)?.width;\n  const height = getImage(data.header)?.height;\n\n  return (\n    <Fragment>\n      <title>{config.title}</title>\n      <meta name=\"description\" content={config.description} />\n      <meta property=\"og:site_name\" content={config.title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={config.title} />\n      <meta property=\"og:description\" content={config.description} />\n      <meta property=\"og:url\" content={config.siteUrl} />\n      <meta property=\"og:image\" content={`${config.siteUrl}${getSrc(data.header)}`} />\n      {config.instagram && <meta property=\"article:publisher\" content={config.instagram} />}\n      {config.googleSiteVerification && (\n        <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n      )}\n      <meta name=\"github:card\" content=\"summary_large_image\" />\n      <meta name=\"github:title\" content={config.title} />\n      <meta name=\"github:description\" content={config.description} />\n      <meta name=\"github:url\" content={config.siteUrl} />\n      <meta name=\"github:image\" content={`${config.siteUrl}${getSrc(data.header)}`} />\n      {config.github && (\n        <meta name=\"github:site\" content={`@${config.github.split('https://github.com/')[1]}`} />\n      )}\n      <meta property=\"og:image:width\" content={width?.toString()} />\n      <meta property=\"og:image:height\" content={height?.toString()} />\n      <meta name=\"google-site-verification\" content=\"X7fnDr_T5GGmrn97A919fAd2I_t2ghdL_ZkDjcR1Y8Q\" />\n      <meta name=\"naver-site-verification\" content=\"896eb3f6e2c58669212193addb6978a4bb0d80c1\" />\n    </Fragment>\n  );\n};\n\nfunction IndexPage(props: IndexProps) {\n  return (\n    <IndexLayout css={HomePosts}>\n      <Wrapper>\n        <div css={[outer, SiteHeaderStyles]}>\n          <BackgroundImage imageSrc={props.data.header} />\n          <div css={inner}>\n            <HomeSiteNav />\n            <SiteHeaderContent className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <img\n                    style={{ maxHeight: '55px', height: '55px' }}\n                    src={getSrc(props.data.logo)}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <div css={[PostFeed]}>\n              {props.data.allMarkdownRemark.edges.map(\n                (post, index) =>\n                  // filter out drafts in production\n                  (post.node.frontmatter.draft !== true ||\n                    (post.node.frontmatter.tags[0] !== 'Diary' &&\n                      process.env.NODE_ENV !== 'production')) && (\n                    <PostCard key={post.node.fields.slug} post={post.node} isLarge={index === 0} />\n                  ),\n              )}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        {props.pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={props.pageContext.currentPage}\n            numPages={props.pageContext.numPages}\n          />\n        )}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    header: file(relativePath: { eq: \"img/common/back5.jpg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 2000\n          quality: 100\n          layout: FIXED\n          formats: [AUTO, WEBP, AVIF]\n          placeholder: BLURRED\n        )\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { draft: { ne: true }, tags: { ne: \"\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FULL_WIDTH\n                  formats: [AUTO, WEBP, AVIF]\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n          excerpt\n          fields {\n            readingTime {\n              text\n            }\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      min-height: 280px;\n      margin-bottom: 100px;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      min-height: 380px;\n      margin-bottom: 0;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      display: block;\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["BackgroundImage","imageSrc","isLoaded","setIsLoaded","useState","imgRef","useRef","useEffect","current","___EmotionJSX","HeaderBackground","src","getSrc","className","alt","ref","target","name","styles","HomeSiteNav","isScrollDown","isSetScrollDown","lastScrollY","ticking","theme","useTheme","isWhite","onScroll","useCallback","requestAnimationFrame","window","scrollY","isScrolled","addEventListener","passive","removeEventListener","css","SiteNavMain","inner","SiteNavStyles","SiteNavLeft","SiteNavLogo","SiteNavContent","NavStyles","role","Link","to","activeClassName","SiteNavRight","SocialLinks","config","SocialLink","SocialLinkFb","href","title","rel","Instagram","Github","ThemeModeSwitch","navCss","currentPage","numPages","isFirst","isLast","isEndFirst","isEndLast","prevPage","toString","nextPage","String","fromCharCode","Array","from","length","_","i","key","Head","_ref","data","width","getImage","header","_getImage","height","_getImage2","Fragment","content","property","HomePosts","props","IndexLayout","Wrapper","outer","SiteHeaderStyles","SiteHeaderContent","SiteTitle","logo","style","maxHeight","SiteDescription","id","SiteMain","Posts","PostFeed","allMarkdownRemark","edges","map","post","index","node","frontmatter","draft","tags","process","PostCard","fields","slug","isLarge","children","pageContext","Pagination","Footer"],"sourceRoot":""}