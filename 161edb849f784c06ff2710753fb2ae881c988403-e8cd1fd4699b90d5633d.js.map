{"version":3,"file":"161edb849f784c06ff2710753fb2ae881c988403-e8cd1fd4699b90d5633d.js","mappings":"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","sources":["webpack://record-journey/./src/styles/prism.ts","webpack://record-journey/./src/components/PostContent.tsx","webpack://record-journey/./src/styles/PageStyleComponents.ts","webpack://record-journey/./src/components/post/Giscus.tsx","webpack://record-journey/./src/components/AuthorItem.tsx","webpack://record-journey/./src/components/post/PostHead.tsx","webpack://record-journey/./src/components/post/PostImage.tsx","webpack://record-journey/./src/components/ReadNextCard.tsx","webpack://record-journey/./src/components/ReadNext.tsx","webpack://record-journey/./src/templates/post.tsx"],"sourcesContent":["import { css } from '@emotion/react';\n\nimport type { Theme } from '@emotion/react';\n\nexport default (theme: Theme) => css`\n  *:not(pre) > code[class*='language-'] {\n    border-radius: 0.3em;\n    background: var(--little-code-background);\n    border: 1px solid var(--little-code-border);\n    color: var(--main-color);\n    padding: 0.15em 0.5em;\n    white-space: normal;\n    font-size: 13px;\n\n    @media (max-width: 800px) {\n      display: inline;\n    }\n  }\n\n  .gatsby-highlight-code-line {\n    display: block;\n    margin-right: -1.3125rem;\n    margin-left: -1.3125rem;\n    padding-right: 1em;\n    padding-left: 1.25em;\n    background-color: var(--prism-background);\n    border-left: 0.25em solid var(--prism-border-left);\n    font-size: 1.4rem;\n  }\n\n  .gatsby-highlight {\n    margin-bottom: 1.75rem;\n    margin-left: -1.3125rem;\n    margin-right: -1.3125rem;\n    border-radius: 10px;\n    background: var(--highlight-background);\n    box-shadow: inset 0 0 0 1px var(--highlight-border);\n    -webkit-overflow-scrolling: touch;\n    overflow: auto;\n  }\n\n  .gatsby-highlight pre[class*='language-'] {\n    float: left;\n    min-width: 100%;\n    font-size: 1.4rem;\n    line-height: 24px;\n  }\n\n  pre[class*='language-'],\n  code[class*='language-'] {\n    color: var(--pre-code-color);\n    text-shadow: none;\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n    direction: ltr;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    line-height: 1.8;\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n\n    &::-webkit-scrollbar {\n      background-color: transparent;\n      height: 4px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      background-color: hsla(230, 5%, 35%, 1);\n    }\n\n    @media (max-width: 800px) {\n      display: inline-block;\n    }\n  }\n\n  pre[class*='language-'] {\n    overflow: auto;\n  }\n\n  .token {\n    font-size: 1.4rem;\n  }\n\n  pre[data-line] {\n    padding: 1em 0 1em 3em;\n    position: relative;\n  }\n\n  @media print {\n    pre[class*='language-'],\n    code[class*='language-'] {\n      text-shadow: none;\n    }\n  }\n\n  pre[class*='language-'] {\n    padding: 1em;\n    overflow: auto;\n    margin: 0;\n  }\n\n  :not(pre) > code[class*='language-'] {\n    padding: 0.1em 0.3em;\n    border-radius: 0.3em;\n    color: #c9d1d9;\n    background: #343942;\n  }\n  /* Line highlighting */\n\n  pre[data-line] {\n    position: relative;\n  }\n\n  pre[class*='language-'] > code[class*='language-'] {\n    position: relative;\n    z-index: 1;\n  }\n\n  .line-highlight {\n    position: absolute;\n    left: 0;\n    right: 0;\n    padding: inherit 0;\n    margin-top: 1em;\n    background: #2f2a1e;\n    box-shadow: inset 5px 0 0 #674c16;\n    z-index: 0;\n    pointer-events: none;\n    line-height: inherit;\n    white-space: pre;\n  }\n\n  .namespace {\n    opacity: 0.7;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: #8b949e;\n  }\n\n  .token.punctuation {\n    color: #c9d1d9;\n  }\n\n  .token.property,\n  .token.tag,\n  .token.boolean,\n  .token.number,\n  .token.constant,\n  .token.symbol,\n  .token.deleted {\n    color: #79c0ff;\n  }\n\n  .token.selector,\n  .token.attr-name,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted {\n    color: #a5d6ff;\n  }\n\n  .token.operator,\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n    color: #a5d6ff;\n  }\n\n  .token.atrule,\n  .token.attr-value,\n  .token.keyword {\n    color: #a5d6ff;\n  }\n\n  .token.function {\n    color: #d2a8ff;\n  }\n\n  .token.regex,\n  .token.important,\n  .token.variable {\n    color: #a8daff;\n  }\n\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.italic {\n    font-style: italic;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  ${theme.mode === 'light'\n    ? `\n  .token.comment,\n  .token.prolog,\n  .token.cdata {\n    color: hsl(230, 4%, 64%);\n  }\n\n  .token.doctype,\n  .token.punctuation,\n  .token.entity {\n    color: hsl(230, 8%, 24%);\n  }\n\n  .token.attr-name,\n  .token.class-name,\n  .token.boolean,\n  .token.constant,\n  .token.number,\n  .token.atrule {\n    color: hsl(35, 99%, 36%);\n  }\n\n  .token.keyword {\n    color: hsl(301, 63%, 40%);\n  }\n\n  .token.property,\n  .token.tag,\n  .token.symbol,\n  .token.deleted,\n  .token.important {\n    color: hsl(5, 74%, 59%);\n  }\n\n  .token.selector,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted,\n  .token.regex,\n  .token.attr-value,\n  .token.attr-value > .token.punctuation {\n    color: hsl(119, 34%, 47%);\n  }\n\n  .token.variable,\n  .token.operator,\n  .token.function {\n    color: hsl(221, 87%, 60%);\n  }\n\n  .token.url {\n    color: hsl(198, 99%, 37%);\n  }\n\n  .token.attr-value > .token.punctuation.attr-equals,\n  .token.special-attr > .token.attr-value > .token.value.css {\n    color: hsl(230, 8%, 24%);\n  }\n\n  .language-css .token.selector {\n    color: hsl(5, 74%, 59%);\n  }\n\n  .language-css .token.property {\n    color: hsl(230, 8%, 24%);\n  }\n\n  .language-css .token.function,\n  .language-css .token.url > .token.function {\n    color: hsl(198, 99%, 37%);\n  }\n\n  .language-css .token.url > .token.string.url {\n    color: hsl(119, 34%, 47%);\n  }\n\n  .language-css .token.important,\n  .language-css .token.atrule .token.rule {\n    color: hsl(301, 63%, 40%);\n  }\n\n  .language-javascript .token.operator {\n    color: hsl(301, 63%, 40%);\n  }\n\n  .language-javascript\n    .token.template-string\n    > .token.interpolation\n    > .token.interpolation-punctuation.punctuation {\n    color: hsl(344, 84%, 43%);\n  }\n\n  .language-json .token.operator {\n    color: hsl(230, 8%, 24%);\n  }\n\n  .language-json .token.null.keyword {\n    color: hsl(35, 99%, 36%);\n  }\n\n  .language-markdown .token.url,\n  .language-markdown .token.url > .token.operator,\n  .language-markdown .token.url-reference.url > .token.string {\n    color: hsl(230, 8%, 24%);\n  }\n\n  .language-markdown .token.url > .token.content {\n    color: hsl(221, 87%, 60%);\n  }\n\n  .language-markdown .token.url > .token.url,\n  .language-markdown .token.url-reference.url {\n    color: hsl(198, 99%, 37%);\n  }\n\n  .language-markdown .token.blockquote.punctuation,\n  .language-markdown .token.hr.punctuation {\n    color: hsl(230, 4%, 64%);\n  }\n\n  .language-markdown .token.code-snippet {\n    color: hsl(119, 34%, 47%);\n  }\n\n  .language-markdown .token.bold .token.content {\n    color: hsl(35, 99%, 36%);\n  }\n\n  .language-markdown .token.italic .token.content {\n    color: hsl(301, 63%, 40%);\n  }\n\n  .language-markdown .token.strike .token.content,\n  .language-markdown .token.strike .token.punctuation,\n  .language-markdown .token.list.punctuation,\n  .language-markdown .token.title.important > .token.punctuation {\n    color: hsl(5, 74%, 59%);\n  }\n\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  .token.namespace {\n    color: rgb(75 117 133);\n  }\n\n  .token.token.tab:not(:empty):before,\n  .token.token.cr:before,\n  .token.token.lf:before,\n  .token.token.space:before {\n    color: hsla(230, 8%, 24%, 0.2);\n  }\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > button,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > a,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > span {\n    background: hsl(230, 1%, 90%);\n    color: hsl(230, 6%, 44%);\n    padding: 0.1em 0.4em;\n    border-radius: 0.3em;\n  }\n\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > button:hover,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > button:focus,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > a:hover,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > a:focus,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > span:hover,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > span:focus {\n    background: hsl(230, 1%, 78%);\n    color: hsl(230, 8%, 24%);\n  }\n\n  .line-highlight.line-highlight {\n    background: hsla(230, 8%, 24%, 0.05);\n  }\n\n  .line-highlight.line-highlight:before,\n  .line-highlight.line-highlight[data-end]:after {\n    background: hsl(230, 1%, 90%);\n    color: hsl(230, 8%, 24%);\n    padding: 0.1em 0.6em;\n    border-radius: 0.3em;\n    box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.2); /* same as Toolbar plugin default */\n  }\n\n  pre[id].linkable-line-numbers.linkable-line-numbers\n    span.line-numbers-rows\n    > span:hover:before {\n    background-color: hsla(230, 8%, 24%, 0.05);\n  }\n\n  .line-numbers.line-numbers .line-numbers-rows,\n  .command-line .command-line-prompt {\n    border-right-color: hsla(230, 8%, 24%, 0.2);\n  }\n\n  .line-numbers .line-numbers-rows > span:before,\n  .command-line .command-line-prompt > span:before {\n    color: hsl(230, 1%, 62%);\n  }\n\n  .rainbow-braces .token.token.punctuation.brace-level-1,\n  .rainbow-braces .token.token.punctuation.brace-level-5,\n  .rainbow-braces .token.token.punctuation.brace-level-9 {\n    color: hsl(5, 74%, 59%);\n  }\n\n  .rainbow-braces .token.token.punctuation.brace-level-2,\n  .rainbow-braces .token.token.punctuation.brace-level-6,\n  .rainbow-braces .token.token.punctuation.brace-level-10 {\n    color: hsl(119, 34%, 47%);\n  }\n\n  .rainbow-braces .token.token.punctuation.brace-level-3,\n  .rainbow-braces .token.token.punctuation.brace-level-7,\n  .rainbow-braces .token.token.punctuation.brace-level-11 {\n    color: hsl(221, 87%, 60%);\n  }\n\n  .rainbow-braces .token.token.punctuation.brace-level-4,\n  .rainbow-braces .token.token.punctuation.brace-level-8,\n  .rainbow-braces .token.token.punctuation.brace-level-12 {\n    color: hsl(301, 63%, 40%);\n  }\n\n  pre.diff-highlight > code .token.token.deleted:not(.prefix),\n  pre > code.diff-highlight .token.token.deleted:not(.prefix) {\n    background-color: hsla(353, 100%, 66%, 0.15);\n  }\n\n  pre.diff-highlight > code .token.token.inserted:not(.prefix),\n  pre > code.diff-highlight .token.token.inserted:not(.prefix) {\n    background-color: hsla(137, 100%, 55%, 0.15);\n  }\n\n  .prism-previewer.prism-previewer:before,\n  .prism-previewer-gradient.prism-previewer-gradient div {\n    border-color: hsl(0, 0, 95%);\n  }\n  .prism-previewer.prism-previewer:after {\n    border-top-color: hsl(0, 0, 95%);\n  }\n\n  .prism-previewer-flipped.prism-previewer-flipped.after {\n    border-bottom-color: hsl(0, 0, 95%);\n  }\n\n  .prism-previewer-angle.prism-previewer-angle:before,\n  .prism-previewer-time.prism-previewer-time:before,\n  .prism-previewer-easing.prism-previewer-easing {\n    background: hsl(0, 0%, 100%);\n  }\n\n  .prism-previewer-angle.prism-previewer-angle circle,\n  .prism-previewer-time.prism-previewer-time circle {\n    stroke: hsl(230, 8%, 24%);\n    stroke-opacity: 1;\n  }\n\n  .prism-previewer-easing.prism-previewer-easing circle,\n  .prism-previewer-easing.prism-previewer-easing path,\n  .prism-previewer-easing.prism-previewer-easing line {\n    stroke: hsl(230, 8%, 24%);\n  }\n\n  .prism-previewer-easing.prism-previewer-easing circle {\n    fill: transparent;\n  }\n  `\n    : ``}\n`;\n","import styled from '@emotion/styled';\n\nimport { colors } from '@/styles/colors.ts';\nimport prism from '@/styles/prism.ts';\n\nfunction PostContent({ html }: { html: string }) {\n  return (\n    <PostFullContent className=\"post-full-content\" css={prism}>\n      <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: html }} />\n    </PostFullContent>\n  );\n}\n\nexport const PostFullContent = styled.section`\n  position: relative;\n  min-height: 230px;\n  margin: 0 auto;\n  padding: 0 100px 6vw;\n  font-size: 2rem;\n  line-height: 1.6em;\n  background: var(--background-color);\n  border-radius: 6px;\n\n  .no-image {\n    padding-top: 0;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  dl,\n  pre,\n  blockquote,\n  .post-full-comments,\n  .footnotes {\n    min-width: 100%;\n    margin: 0 0 1.5em;\n  }\n\n  li > ul,\n  li > ol {\n    margin: 0;\n  }\n\n  li {\n    word-break: break-word;\n  }\n\n  li p {\n    margin: 0;\n  }\n\n  a {\n    color: #0a84ff;\n  }\n\n  a[class*='image'],\n  a[class*='image']:hover {\n    box-shadow: none;\n\n    span[class*='image'] {\n      border-radius: 6px;\n    }\n  }\n\n  strong,\n  em {\n    color: var(--strong-color);\n  }\n\n  small {\n    display: inline-block;\n    line-height: 1.6em;\n  }\n\n  img,\n  video {\n    display: block;\n    max-width: 840px;\n    height: auto;\n    margin: 2em auto;\n    border: 1px solid var(--image-border-color);\n    border-radius: 8px;\n  }\n\n  hr + p {\n    margin-top: 1.2em;\n  }\n\n  img[src$='#full'] {\n    width: 100vw;\n    max-width: none;\n  }\n\n  img + br + small {\n    display: block;\n    margin-top: -3em;\n    margin-bottom: 1.5em;\n    text-align: center;\n  }\n\n  iframe {\n    margin: 10px auto 20px;\n  }\n\n  blockquote {\n    margin: 0 0 1.5em;\n    padding: 0 1.5em;\n    border-left: 3px solid var(--image-border-color);\n  }\n\n  blockquote p {\n    margin: 0 0 1em;\n    font-size: inherit;\n    font-style: italic;\n    line-height: inherit;\n    color: inherit;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n\n  code {\n    padding: 0 5px 2px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans', 'Ubuntu',\n      'Droid Sans', 'Helvetica Neue', sans-serif;\n    font-size: 0.8em;\n    font-weight: 400 !important;\n    line-height: 1em;\n    border-radius: 3px;\n  }\n\n  p code {\n    word-break: keep-all;\n  }\n\n  pre {\n    overflow-x: auto;\n    max-width: 100%;\n    padding: 20px;\n    font-size: 1.4rem;\n    line-height: 1.5em;\n    color: ${colors.whitegrey};\n    border-radius: 5px;\n  }\n\n  pre code {\n    padding: 0;\n    font-size: inherit;\n    line-height: inherit;\n    background: transparent;\n  }\n\n  pre code :not(span) {\n    color: inherit;\n  }\n\n  .fluid-width-video-wrapper {\n    margin: 1.5em 0 3em;\n  }\n\n  hr {\n    margin: 2em 0;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans', 'Ubuntu',\n      'Droid Sans', 'Helvetica Neue', sans-serif;\n    color: var(--home-header-color);\n  }\n\n  h1 {\n    margin: 0.5em 0 0.4em;\n    font-size: 4.2rem;\n    font-weight: 600;\n    line-height: 1.25em;\n  }\n\n  p + h1 {\n    margin-top: 0.8em;\n  }\n\n  h2 {\n    margin: 1.2em 0 0.6em;\n    font-size: 3.4rem;\n    font-weight: 600;\n    line-height: 1.25em;\n  }\n\n  p + h2 {\n    margin-top: 0.8em;\n  }\n\n  h3 {\n    margin: 1rem 0 0.2em;\n    padding-top: 1.8rem;\n    font-size: 2.6rem;\n    font-weight: 600;\n    line-height: 1.3em;\n  }\n\n  h2 + h3 {\n    margin-top: 0.7em;\n  }\n\n  h4 {\n    margin: 1em 0 0.2em;\n    font-size: 2rem;\n    font-weight: 800;\n  }\n\n  h2 + h4 {\n    margin-top: 0.7em;\n  }\n\n  h3 + h4 {\n    margin-top: 0;\n  }\n\n  h5 {\n    display: block;\n    margin: 0.5em 0;\n    font-size: 1.8rem;\n    font-weight: 600;\n    line-height: 1.35em;\n\n    /* color: ${colors.blue}; */\n\n    /* text-align: center; */\n    border: 0;\n  }\n\n  h6 {\n    margin: 0.5em 0 0.2em;\n    font-size: 2rem;\n    font-weight: 700;\n  }\n\n  table {\n    overflow-x: auto;\n    display: inline-block;\n    border-spacing: 0;\n    border-collapse: collapse;\n    width: auto;\n    max-width: 100%;\n    margin: 0.5em 0 2.5em;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans', 'Ubuntu',\n      'Droid Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    white-space: nowrap;\n    vertical-align: top;\n    background:\n      radial-gradient(ellipse at left, rgb(0 0 0 / 0.2) 0%, rgb(0 0 0 / 0) 75%) 0 center,\n      radial-gradient(ellipse at right, rgb(0 0 0 / 0.2) 0%, rgb(0 0 0 / 0) 75%) 100% center;\n    background-repeat: no-repeat;\n    background-attachment: scroll, scroll;\n    background-size:\n      10px 100%,\n      10px 100%;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  table th {\n    font-size: 1.2rem;\n    font-weight: 700;\n    color: var(--home-header-color);\n    text-align: left;\n    text-transform: uppercase;\n    letter-spacing: 0.2px;\n    background-color: var(--table-th-background);\n  }\n\n  table th,\n  table td {\n    padding: 6px 12px;\n    border: var(--table-th-border) 1px solid;\n  }\n\n  table td:first-of-type {\n    background-image: var(--table-first-of-type);\n    background-repeat: no-repeat;\n    background-size: 20px 100%;\n  }\n\n  table td:last-child {\n    background-image: var(--table-last-of-type);\n    background-repeat: no-repeat;\n    background-position: 100% 0;\n    background-size: 20px 100%;\n  }\n\n  figcaption {\n    color: var(--figcaption-color);\n  }\n\n  @media (max-width: 1170px) {\n    padding: 0 11vw;\n  }\n\n  @media (max-width: 800px) {\n    padding: 0 5vw;\n    font-size: 1.8rem;\n  }\n\n  @media (max-width: 500px) {\n    padding: 0;\n  }\n\n  @media (max-width: 500px) {\n    .post-full-custom-excerpt {\n      font-size: 1.9rem;\n      line-height: 1.5em;\n    }\n  }\n\n  @media (max-width: 500px) {\n    p,\n    ul,\n    ol,\n    dl,\n    pre,\n    .post-full-comments,\n    .footnotes {\n      margin-bottom: 1.28em;\n    }\n  }\n\n  @media (max-width: 1040px) {\n    img,\n    video {\n      width: 100%;\n    }\n  }\n\n  @media (max-width: 500px) {\n    blockquote {\n      padding: 0 1.3em;\n    }\n  }\n\n  @media (max-width: 800px) {\n    h1 {\n      font-size: 3.2rem;\n      line-height: 1.25em;\n    }\n\n    h2 {\n      margin: 0.5rem 0 0.3em;\n      font-size: 2.8rem;\n      line-height: 1.25em;\n    }\n\n    h3 {\n      margin: 0.5rem 0 0.3em;\n      font-size: 2.4rem;\n      line-height: 1.3em;\n    }\n\n    h4 {\n      margin-bottom: 0.3em;\n      font-size: 1.8rem;\n      line-height: 1.3em;\n    }\n\n    h5 {\n      max-width: 1060px;\n      padding: 0 0 0.5em;\n      font-size: 2.4rem;\n      text-align: initial;\n    }\n\n    h6 {\n      font-size: 1.8rem;\n      line-height: 1.4em;\n    }\n  }\n`;\n\nexport default PostContent;\n","import styled from '@emotion/styled';\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: var(--post-full-title);\n\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n`;\n","import { createRef, memo, useContext, useEffect } from 'react';\n\nimport { ThemeToggleContext } from '@/layouts/ThemeToggleContext.ts';\n\nconst src = 'https://giscus.app/client.js';\nconst repo = 'pozafly/blog-comments';\n\nconst Giscus = () => {\n  const containerRef = createRef<HTMLDivElement>();\n  const { theme } = useContext(ThemeToggleContext);\n\n  useEffect(() => {\n    const scriptElement = document.createElement('script');\n\n    scriptElement.src = src;\n    scriptElement.async = true;\n    scriptElement.crossOrigin = 'anonymous';\n    scriptElement.setAttribute('data-repo', repo);\n    scriptElement.setAttribute('data-repo-id', 'MDEwOlJlcG9zaXRvcnkyNjU3MTk2NDk=');\n    scriptElement.setAttribute('data-category', 'Comments');\n    scriptElement.setAttribute('data-category-id', 'DIC_kwDOD9aPYc4CX-sv');\n    scriptElement.setAttribute('data-mapping', 'pathname');\n    scriptElement.setAttribute('data-strict', '0');\n    scriptElement.setAttribute('data-reactions-enabled', '1');\n    scriptElement.setAttribute('data-emit-metadata', '0');\n    scriptElement.setAttribute('data-input-position', 'top');\n    scriptElement.setAttribute('data-theme', document.body.className === 'dark' ? 'dark' : 'light');\n\n    containerRef.current?.appendChild(scriptElement);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const iframe = document.querySelector<HTMLIFrameElement>('iframe.giscus-frame');\n    iframe?.contentWindow?.postMessage({ giscus: { setConfig: { theme } } }, 'https://giscus.app');\n  }, [theme]);\n\n  return <div ref={containerRef} />;\n};\n\nexport default memo(Giscus);\n","import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport { AuthorProfileImage } from '@/components/PostCard.tsx';\n\nimport type { Author } from '@/templates/post.tsx';\n\ntype AuthorItemProps = {\n  author: Author;\n};\n\nexport function AuthorItem({ author }: AuthorItemProps) {\n  const imageSrc = getImage(author.avatar);\n\n  return (\n    <AuthorItemLi className=\"author-list-item\">\n      <Link css={AuthorAvatar} className=\"author-avatar\" to={'/about'}>\n        {imageSrc && (\n          <GatsbyImage\n            image={imageSrc}\n            css={AuthorProfileImage}\n            className=\"author-profile-image\"\n            alt={author.name}\n          />\n        )}\n      </Link>\n    </AuthorItemLi>\n  );\n}\n\nconst AuthorItemLi = styled.li`\n  position: relative;\n  flex-shrink: 0;\n  margin: 0;\n  padding: 0;\n\n  :hover .author-name-tooltip {\n    transform: translate(-10px, -2px);\n    opacity: 1;\n  }\n`;\n\nconst AuthorAvatar = css`\n  overflow: hidden;\n  display: block;\n  width: 40px;\n  height: 40px;\n  margin: 0 -4px;\n  border: 2px solid var(--author-border);\n  border-radius: 100%;\n\n  @media (max-width: 500px) {\n    width: 36px;\n    height: 36px;\n  }\n`;\n","import { Fragment } from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport { kebabCase } from 'lodash-es';\n\nimport { AuthorItem } from '@/components/AuthorItem.tsx';\nimport { colors } from '@/styles/colors.ts';\nimport { PostFullHeader, PostFullTitle } from '@/styles/PageStyleComponents.ts';\nimport config from '@/website-config.ts';\n\nimport type { Author } from '@/templates/post.tsx';\n\ntype Props = {\n  tags: string[];\n  excerpt: string;\n  title: string;\n  author: Author[];\n  readingTime: {\n    text: string;\n  };\n  datetime: string;\n};\n\nexport default function PostHead({ tags, datetime, readingTime, author, excerpt, title }: Props) {\n  return (\n    <PostFullHeader className=\"post-full-header\">\n      <PostFullTags className=\"post-full-tags\">\n        {tags &&\n          tags.length > 0 &&\n          config.showAllTags &&\n          tags.map((tag, idx) => (\n            <Fragment key={tag}>\n              {idx > 0 && <Fragment>, &nbsp;</Fragment>}\n              <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n            </Fragment>\n          ))}\n        {tags && tags.length > 0 && !config.showAllTags && (\n          <Link to={`/tags/${kebabCase(tags[0])}/`}>{tags[0]}</Link>\n        )}\n      </PostFullTags>\n      <PostFullTitle className=\"post-full-title\">{title}</PostFullTitle>\n      <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">{excerpt}</PostFullCustomExcerpt>\n      <PostFullByline className=\"post-full-byline\">\n        <section className=\"post-full-byline-content\">\n          <AuthorListUl className=\"author-list\">\n            <AuthorItem key={author[0].name} author={author[0]} />\n          </AuthorListUl>\n\n          <section className=\"post-full-byline-meta\">\n            <div className=\"author-name\">\n              {author.map((author) => (\n                <Link key={author.name} to={'/about'}>\n                  {author.name}\n                </Link>\n              ))}\n            </div>\n            <div className=\"byline-meta-content\">\n              <time className=\"byline-meta-date\" dateTime={datetime}>\n                {datetime}\n              </time>\n              <span className=\"byline-reading-time\">\n                <span className=\"bull\">&bull;</span>\n                {readingTime.text}\n              </span>\n            </div>\n          </section>\n        </section>\n      </PostFullByline>\n    </PostFullHeader>\n  );\n}\n\nconst PostFullTags = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 1.2rem;\n  font-weight: 600;\n  line-height: 1.4em;\n  color: ${colors.midgrey};\n\n  a {\n    font-size: 1.2rem;\n  }\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  font-size: 2rem;\n  font-weight: 360;\n  line-height: 1.4em;\n  color: var(--post-card-description);\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  border-top: 1px solid var(--post-full-border);\n\n  .post-full-byline-content {\n    display: flex;\n    flex-grow: 1;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    font-size: 1.4rem;\n    line-height: 1.2em;\n    color: #768086;\n    letter-spacing: 0.2px;\n  }\n\n  .post-full-byline-meta .author-name {\n    margin: 0 0 3px;\n    font-size: 1.4rem;\n    font-weight: 500;\n    line-height: 1.3em;\n  }\n\n  .post-full-byline-meta .author-name a {\n    font-size: 13px;\n    color: var(--post-full-meta-link);\n  }\n\n  .post-full-byline-meta .author-name a:hover {\n    color: var(--post-full-meta-link-hover);\n  }\n\n  .post-full-byline-meta .byline-reading-time,\n  .post-full-byline-meta .byline-meta-date {\n    font-size: 13px;\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n`;\n\nconst AuthorListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 0 0 4px;\n  padding: 0;\n  list-style: none;\n`;\n","import { Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport type { IGatsbyImageData } from 'gatsby-plugin-image';\n\ntype Props = {\n  imageSource: IGatsbyImageData;\n  title: string;\n  imageMeta: {\n    photoAuthor?: string;\n    photoVender?: string;\n  };\n};\n\nexport default function PostImage({ imageSource, title, imageMeta }: Props) {\n  const [photoAuthorName, photoAuthorLink] = imageMeta.photoAuthor?.split('>>') || [\n    undefined,\n    undefined,\n  ];\n  const [photoVenderName, photoVenderLink] = imageMeta.photoVender?.split('>>') || [\n    undefined,\n    undefined,\n  ];\n\n  return (\n    <PostFullImage>\n      <div className=\"image-wrapper\">\n        <GatsbyImage image={imageSource} style={{ height: '100%' }} alt={title} />\n      </div>\n\n      {photoAuthorLink && (\n        <PhotoAuthorSection>\n          Photo by{' '}\n          <a href={photoAuthorLink} target=\"_blank\" rel=\"noreferrer\">\n            {photoAuthorName}\n          </a>\n          {photoVenderName && (\n            <Fragment>\n              {' '}\n              on{' '}\n              {photoVenderLink ? (\n                <a href={photoVenderLink} target=\"_blank\" rel=\"noreferrer\">\n                  {photoVenderName}\n                </a>\n              ) : (\n                <span>{photoVenderName}</span>\n              )}\n            </Fragment>\n          )}\n        </PhotoAuthorSection>\n      )}\n    </PostFullImage>\n  );\n}\n\nconst PostFullImage = styled.figure`\n  width: 80%;\n  max-height: 800px;\n  margin: 25px auto 100px;\n  background-size: cover;\n\n  .image-wrapper {\n    overflow: hidden;\n    width: 100%;\n    border: 1px solid var(--image-border-color);\n    border-radius: 8px;\n\n    img {\n      border-radius: 8px;\n    }\n  }\n\n  @media (max-width: 1170px) {\n    .image-wrapper {\n      img {\n        max-width: 1170px;\n      }\n    }\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    margin: 25px auto 60px;\n  }\n`;\n\nconst PhotoAuthorSection = styled.figcaption`\n  max-width: 728px;\n  margin: 10px auto;\n  font-size: 13px;\n  text-align: center;\n\n  a,\n  span {\n    font-size: 13px;\n  }\n`;\n","import { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport { format } from 'date-fns';\nimport { kebabCase } from 'lodash-es';\nimport { lighten } from 'polished';\n\nimport { colors } from '@/styles/colors.ts';\n\nexport type ReadNextProps = {\n  tags: string[];\n  currentPageSlug: string;\n  relatedPosts: {\n    totalCount: number;\n    edges: Array<{\n      node: {\n        frontmatter: {\n          title: string;\n          date: string;\n        };\n        fields: {\n          readingTime: {\n            text: string;\n          };\n          slug: string;\n        };\n      };\n    }>;\n  };\n};\n\nexport function ReadNextCard(props: ReadNextProps) {\n  // filter out current post and limit to 3 related posts\n  const relatedPosts = props.relatedPosts.edges\n    .filter((post) => post.node.fields.slug !== props.currentPageSlug)\n    .slice(0, 3);\n\n  return (\n    <ReadNextCardArticle className=\"read-next-card\">\n      <header className=\"read-next-card-header\">\n        <ReadNextCardHeaderTitle>\n          <span>More in</span>{' '}\n          <Link to={`/tags/${kebabCase(props.tags[0])}/`}>{props.tags[0]}</Link>\n        </ReadNextCardHeaderTitle>\n      </header>\n      <ReadNextCardContent className=\"read-next-card-content\">\n        <ul>\n          {relatedPosts.map((n) => {\n            const date = new Date(n.node.frontmatter.date);\n            const datetime = format(date, 'yyyy-MM-dd');\n            const displayDatetime = format(date, 'yyyy-MM-dd');\n\n            return (\n              <li key={n.node.frontmatter.title}>\n                <h4>\n                  <Link to={n.node.fields.slug}>{n.node.frontmatter.title}</Link>\n                </h4>\n                <ReadNextCardMeta className=\"read-next-card-meta\">\n                  <p>\n                    <time dateTime={datetime}>{displayDatetime}</time> -{' '}\n                    {n.node.fields.readingTime.text}\n                  </p>\n                </ReadNextCardMeta>\n              </li>\n            );\n          })}\n        </ul>\n      </ReadNextCardContent>\n      <ReadNextCardFooter className=\"read-next-card-footer\">\n        <Link to={`/tags/${kebabCase(props.tags[0])}/`}>\n          {props.relatedPosts.totalCount > 1 && `See all ${props.relatedPosts.totalCount} posts`}\n          {props.relatedPosts.totalCount === 1 && '1 post'}\n          {props.relatedPosts.totalCount === 0 && 'No posts'} →\n        </Link>\n      </ReadNextCardFooter>\n    </ReadNextCardArticle>\n  );\n}\n\nconst ReadNextCardArticle = styled.article`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex: 0 1 326px;\n  flex-direction: column;\n  margin: 0 25px 50px;\n  padding: 25px;\n  background: linear-gradient(\n    ${lighten('0.02', colors.darkgrey)},\n    ${lighten('-0.05', colors.darkgrey)}\n  );\n  border-radius: 3px;\n\n  a {\n    transition: all 0.2s ease-in-out;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n\n  @media (max-width: 1170px) {\n    flex: 1 1 261px;\n    margin-bottom: 5vw;\n  }\n\n  @media (max-width: 650px) {\n    display: none;\n    flex: 1 1 auto;\n    margin: 0 25px;\n    padding: 0;\n    background: none;\n  }\n`;\n\nconst ReadNextCardHeaderTitle = styled.h3`\n  margin: 0;\n  font-size: 1.3rem;\n  font-weight: 300;\n  line-height: 1em;\n  color: rgb(255 255 255 / 0.6);\n  letter-spacing: 0.4px;\n\n  span,\n  a {\n    font-size: inherit;\n  }\n\n  a {\n    font-weight: 500;\n    color: #fff;\n    text-decoration: none;\n    opacity: 0.8;\n  }\n\n  a:hover {\n    opacity: 1;\n  }\n`;\n\nconst ReadNextCardContent = styled.div`\n  font-size: 1.3rem;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin: 0;\n    padding: 20px 0;\n    border-bottom: rgb(255 255 255 / 0.1);\n  }\n\n  li:last-of-type {\n    padding-bottom: 5px;\n    border: none;\n  }\n\n  h4 {\n    margin: 0;\n    font-size: 1.3rem;\n    font-weight: 600;\n    line-height: 1.6em;\n  }\n\n  li a {\n    display: block;\n    font-size: inherit;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    opacity: 1;\n  }\n`;\n\nconst ReadNextCardMeta = styled.div`\n  margin-top: 2px;\n  font-size: 1.2rem;\n  font-weight: 400;\n  line-height: 1.4em;\n\n  p {\n    margin: 0;\n    font-size: inherit;\n    color: rgb(255 255 255 / 0.6);\n\n    time {\n      font-size: inherit;\n    }\n  }\n`;\n\nconst ReadNextCardFooter = styled.footer`\n  position: relative;\n  margin: 40px 0 5px;\n\n  a {\n    padding: 7px 12px 8px 14px;\n    font-size: 1.3rem;\n    color: rgb(255 255 255 / 0.6);\n    border: 1px solid rgb(255 255 255 / 0.6);\n    border-radius: 999px;\n    transition: all 0.35s ease-in-out;\n  }\n\n  a:hover {\n    color: ${colors.yellow};\n    text-decoration: none;\n    border-color: ${colors.yellow};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { lighten } from 'polished';\n\nimport { PostCard } from '@/components/PostCard.tsx';\nimport { ReadNextCard } from '@/components/ReadNextCard.tsx';\nimport { colors } from '@/styles/colors.ts';\nimport { inner, outer } from '@/styles/shared.ts';\n\nimport type { PageContext } from '@/templates/post.tsx';\n\ntype ReadNextProps = {\n  tags: string[];\n  currentPageSlug: string;\n  relatedPosts: {\n    totalCount: number;\n    edges: Array<{\n      node: {\n        frontmatter: {\n          date: string;\n          title: string;\n        };\n        fields: {\n          slug: string;\n          readingTime: {\n            text: string;\n          };\n        };\n      };\n    }>;\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n};\n\nexport function ReadNext({ relatedPosts, currentPageSlug, tags, pageContext }: ReadNextProps) {\n  const showRelatedPosts = relatedPosts.totalCount > 1;\n\n  return (\n    <ReadNextAside className=\"read-next\" css={outer}>\n      <div css={inner}>\n        <ReadNextFeed className=\"read-next-feed\">\n          {showRelatedPosts && (\n            <ReadNextCard\n              currentPageSlug={currentPageSlug}\n              tags={tags}\n              relatedPosts={relatedPosts}\n            />\n          )}\n\n          {pageContext.prev && <PostCard post={pageContext.prev} isNext={true} />}\n          {pageContext.next && <PostCard post={pageContext.next} isNext={true} />}\n        </ReadNextFeed>\n      </div>\n    </ReadNextAside>\n  );\n}\n\nconst ReadNextAside = styled.aside`\n  background: ${lighten('-0.05', colors.darkgrey)};\n\n  .post-card {\n    padding-bottom: 0;\n    border-bottom: none;\n  }\n\n  .post-card:after {\n    display: none;\n  }\n\n  .post-card-primary-tag {\n    color: #fff;\n    opacity: 0.6;\n  }\n\n  .post-card-title {\n    color: #fff;\n    opacity: 0.8;\n    transition: all 0.2s ease-in-out;\n  }\n\n  .post-card:hover .post-card-image {\n    opacity: 1;\n  }\n\n  .post-card-excerpt {\n    color: rgb(255 255 255 / 0.6);\n  }\n\n  .static-avatar {\n    border-color: #000;\n  }\n\n  .post-card-byline-content {\n    color: rgb(255 255 255 / 0.6);\n  }\n\n  .post-card-byline-content a {\n    color: rgb(255 255 255 / 0.8);\n  }\n\n  .author-avatar {\n    border-color: ${lighten('-0.05', colors.darkgrey)};\n  }\n\n  .author-profile-image {\n    background: ${lighten('-0.05', colors.darkgrey)};\n  }\n\n  @media (max-width: 650px) {\n    .post-card {\n      flex: 1 1 auto;\n      margin: 25px;\n      padding: 25px 0 0;\n    }\n  }\n`;\n\nconst ReadNextFeed = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -25px;\n  padding: 60px 0 0;\n`;\n","import { Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { format } from 'date-fns';\nimport { getImage, getSrc } from 'gatsby-plugin-image';\n\nimport { Footer } from '@/components/Footer.tsx';\nimport SiteNav from '@/components/header/SiteNav.tsx';\nimport Giscus from '@/components/post/Giscus.tsx';\nimport PostHead from '@/components/post/PostHead.tsx';\nimport PostImage from '@/components/post/PostImage.tsx';\nimport PostContent from '@/components/PostContent.tsx';\nimport { ReadNext } from '@/components/ReadNext.tsx';\nimport { Wrapper } from '@/components/Wrapper.tsx';\nimport IndexLayout from '@/layouts/index.tsx';\nimport { inner, outer, SiteMain } from '@/styles/shared.ts';\nimport config from '@/website-config.ts';\n\nimport type { ImageDataLike } from 'gatsby-plugin-image';\n\nexport type Author = {\n  name: string;\n  bio: string;\n  avatar: ImageDataLike;\n};\n\ntype PageTemplateProps = {\n  location: Location;\n  data: {\n    markdownRemark: {\n      html: string;\n      htmlAst: unknown;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: ImageDataLike;\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n        photoAuthor: string;\n        photoVender: string;\n      };\n      fields: {\n        readingTime: {\n          text: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            readingTime: {\n              text: string;\n            };\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n};\n\nexport type PageContext = {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      text: string;\n    };\n  };\n  frontmatter: {\n    image: ImageDataLike;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n};\n\nexport const Head = ({ data, location }: PageTemplateProps) => {\n  const post = data.markdownRemark;\n  const imageData = post.frontmatter.image;\n  let width: number | undefined;\n  let height: number | undefined;\n  if (imageData) {\n    width = getImage(imageData)?.width;\n    height = getImage(imageData)?.height;\n  }\n\n  const date = new Date(post.frontmatter.date);\n  const publishedTime = date.toISOString();\n\n  return (\n    <Fragment>\n      <title>{post.frontmatter.title}</title>\n\n      <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n      <meta property=\"og:site_name\" content={config.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={post.frontmatter.title} />\n      <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n      <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n      {imageData && <meta property=\"og:image\" content={`${config.siteUrl}${getSrc(imageData)}`} />}\n      <meta property=\"article:published_time\" content={publishedTime} />\n      {/* not sure if modified time possible */}\n      {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n      {post.frontmatter.tags && <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />}\n\n      {config.instagram && <meta property=\"article:publisher\" content={config.instagram} />}\n      {config.instagram && <meta property=\"article:author\" content={config.instagram} />}\n      <meta name=\"github:card\" content=\"summary_large_image\" />\n      <meta name=\"github:title\" content={post.frontmatter.title} />\n      <meta name=\"github:description\" content={post.frontmatter.excerpt || post.excerpt} />\n      <meta name=\"github:url\" content={config.siteUrl + location.pathname} />\n      {imageData && <meta name=\"github:image\" content={`${config.siteUrl}${getSrc(imageData)}`} />}\n      <meta name=\"github:label1\" content=\"Written by\" />\n      <meta name=\"github:data1\" content={post.frontmatter.author[0].name} />\n      <meta name=\"github:label2\" content=\"Filed under\" />\n      {post.frontmatter.tags && <meta name=\"github:data2\" content={post.frontmatter.tags[0]} />}\n      {config.github && (\n        <meta name=\"github:site\" content={`@${config.github.split('https://github.com/')[1]}`} />\n      )}\n      {config.github && (\n        <meta name=\"github:creator\" content={`@${config.github.split('https://github.com/')[1]}`} />\n      )}\n      {width && <meta property=\"og:image:width\" content={width?.toString()} />}\n      {height && <meta property=\"og:image:height\" content={height?.toString()} />}\n    </Fragment>\n  );\n};\n\nfunction PageTemplate({ data, pageContext, location }: PageTemplateProps) {\n  const post = data.markdownRemark;\n  const imageData = post.frontmatter.image;\n  const imageSource = getImage(imageData);\n  const imageMeta = {\n    photoAuthor: post.frontmatter.photoAuthor,\n    photoVender: post.frontmatter.photoVender,\n  };\n  const date = new Date(post.frontmatter.date);\n  const datetime = format(date, 'yyyy-MM-dd');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Wrapper css={PostTemplate}>\n        <SiteNav isPost post={post.frontmatter} />\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !imageData && NoImage]}>\n              <PostHead\n                tags={post.frontmatter.tags}\n                readingTime={post.fields.readingTime}\n                datetime={datetime}\n                author={post.frontmatter.author}\n                excerpt={post.frontmatter.excerpt}\n                title={post.frontmatter.title}\n              />\n\n              {imageSource && (\n                <PostImage\n                  imageSource={imageSource}\n                  title={post.frontmatter.title}\n                  imageMeta={imageMeta}\n                />\n              )}\n\n              <PostContent html={post.html} />\n            </article>\n            <div css={GiscusStyle}>\n              <Giscus />\n            </div>\n          </div>\n        </main>\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nconst GiscusStyle = css`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 760px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    padding-bottom: 4vw;\n    background: var(--background-color);\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const query = graphql`\n  query ($slug: String, $primaryTag: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        excerpt\n        photoAuthor\n        photoVender\n        image {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n        author {\n          name\n          bio\n          avatar {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 5\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            readingTime {\n              text\n            }\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"names":["theme","css","mode","PostFullContent","_styled","target","colors","whitegrey","html","___EmotionJSX","className","prism","dangerouslySetInnerHTML","__html","PostFullHeader","name","styles","PostFullTitle","Giscus","containerRef","createRef","useContext","ThemeToggleContext","useEffect","_containerRef$current","scriptElement","document","createElement","src","async","crossOrigin","setAttribute","body","current","appendChild","_iframe$contentWindow","iframe","querySelector","contentWindow","postMessage","giscus","setConfig","ref","memo","AuthorItem","author","imageSrc","getImage","avatar","AuthorItemLi","Link","AuthorAvatar","to","GatsbyImage","image","AuthorProfileImage","alt","PostHead","tags","datetime","readingTime","excerpt","title","PostFullTags","length","config","showAllTags","map","tag","idx","Fragment","key","_kebabCase","PostFullCustomExcerpt","PostFullByline","AuthorListUl","dateTime","text","midgrey","PostImage","imageSource","imageMeta","_imageMeta$photoAutho","_imageMeta$photoVende","photoAuthorName","photoAuthorLink","photoAuthor","split","undefined","photoVenderName","photoVenderLink","photoVender","PostFullImage","style","height","PhotoAuthorSection","href","rel","ReadNextCard","props","relatedPosts","edges","filter","post","node","fields","slug","currentPageSlug","slice","ReadNextCardArticle","ReadNextCardHeaderTitle","ReadNextCardContent","n","date","Date","frontmatter","format","displayDatetime","ReadNextCardMeta","ReadNextCardFooter","totalCount","lighten","darkgrey","yellow","ReadNext","pageContext","showRelatedPosts","ReadNextAside","outer","inner","ReadNextFeed","prev","PostCard","isNext","next","Head","data","location","_width","_height","markdownRemark","imageData","width","_getImage","_getImage2","publishedTime","toISOString","content","property","siteUrl","pathname","getSrc","instagram","github","toString","GiscusStyle","PostTemplate","PostFull","NoImage","IndexLayout","Wrapper","SiteNav","isPost","id","SiteMain","PostContent","Footer"],"sourceRoot":""}