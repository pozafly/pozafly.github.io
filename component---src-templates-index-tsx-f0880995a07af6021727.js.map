{"version":3,"file":"component---src-templates-index-tsx-f0880995a07af6021727.js","mappings":"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","sources":["webpack://record-journey/./src/components/header/BackgroundImage.tsx","webpack://record-journey/./src/components/header/HomeSiteNav.tsx","webpack://record-journey/./src/components/Pagination.tsx","webpack://record-journey/./src/templates/index.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { getSrc } from 'gatsby-plugin-image';\n\nimport type { ImageDataLike } from 'gatsby-plugin-image';\n\nexport default function BackgroundImage({ imageSrc }: { imageSrc: ImageDataLike }) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const imgRef = useRef<null | HTMLImageElement>(null);\n\n  useEffect(() => {\n    if (imgRef.current) {\n      setIsLoaded(true);\n    }\n  }, []);\n\n  return (\n    <HeaderBackground>\n      <img\n        src={getSrc(imageSrc) || ''}\n        className={isLoaded ? 'loaded' : ''}\n        alt=\"header background\"\n        ref={imgRef}\n      />\n    </HeaderBackground>\n  );\n}\n\nconst HeaderBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 100%;\n  height: 350px;\n\n  img {\n    transform: scale(1.05) translateY(10px);\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    object-fit: cover;\n    transition:\n      opacity 0.6s cubic-bezier(0.33, 1, 0.68, 1),\n      transform 0.6s cubic-bezier(0.33, 1, 0.68, 1);\n\n    &.loaded {\n      transform: scale(1) translateY(0);\n      opacity: 1;\n    }\n  }\n\n  @media (max-width: 780px) {\n    height: 28rem;\n  }\n\n  @media (max-width: 500px) {\n    height: 25rem;\n  }\n`;\n","import { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { SiteNavLogo } from '@/components/header/SiteNavLogo.tsx';\nimport ThemeModeSwitch from '@/components/header/ThemeModeSwitch.tsx';\nimport { Github } from '@/components/icons/github.tsx';\nimport { Instagram } from '@/components/icons/instagram.tsx';\nimport { ThemeToggleContext } from '@/layouts/ThemeToggleContext';\nimport { inner, SocialLink, SocialLinkFb } from '@/styles/shared.ts';\nimport config from '@/website-config.ts';\n\nconst HEIGHT_OFFSET = 92;\n\nexport default function HomeSiteNav() {\n  const [isScrollDown, isSetScrollDown] = useState(false);\n  const lastScrollY = useRef<number>(0);\n  const ticking = useRef<boolean>(false);\n  const { theme } = useContext(ThemeToggleContext);\n  const isWhite = !(isScrollDown && theme === 'light');\n\n  const onScroll = useCallback(() => {\n    if (!ticking.current) {\n      requestAnimationFrame(() => {\n        lastScrollY.current = window.scrollY;\n        const isScrolled = lastScrollY.current >= HEIGHT_OFFSET;\n        isSetScrollDown(isScrolled);\n        ticking.current = false;\n      });\n    }\n    ticking.current = true;\n  }, []);\n\n  useEffect(() => {\n    onScroll();\n    window.addEventListener('scroll', onScroll, { passive: true });\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [onScroll]);\n\n  return (\n    <header className=\"site-header\">\n      <div css={[SiteNavMain]} className={`${isScrollDown ? 'is-scroll-down' : ''}`}>\n        <div css={inner}>\n          <nav css={SiteNavStyles}>\n            <SiteNavLeft className={`site-nav-left`}>\n              <SiteNavLogo />\n              <SiteNavContent>\n                <ul css={NavStyles} role=\"menu\">\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      Home\n                    </Link>\n                  </li>\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/about\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      About\n                    </Link>\n                  </li>\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/tags\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      Tags\n                    </Link>\n                  </li>\n                  <li role=\"menuitem\">\n                    <Link\n                      to=\"/tags/diary/\"\n                      activeClassName=\"nav-current\"\n                      className={isWhite ? 'is-white' : ''}\n                    >\n                      Diary\n                    </Link>\n                  </li>\n                </ul>\n              </SiteNavContent>\n            </SiteNavLeft>\n            <SiteNavRight>\n              <SocialLinks>\n                {config.instagram && (\n                  <a\n                    className={`not-mobile ${isWhite ? 'is-white' : ''}`}\n                    css={[SocialLink, SocialLinkFb]}\n                    href={config.instagram}\n                    target=\"_blank\"\n                    title=\"Instagram\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Instagram />\n                  </a>\n                )}\n                {config.github && (\n                  <a\n                    className={`not-mobile ${isWhite ? 'is-white' : ''}`}\n                    css={SocialLink}\n                    href={config.github}\n                    title=\"Github\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Github />\n                  </a>\n                )}\n\n                <ThemeModeSwitch isWhite={isWhite} />\n              </SocialLinks>\n            </SiteNavRight>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport const SiteNavMain = css`\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  right: 0;\n  left: 0;\n  padding: 0 5vw;\n  transition: background 0.45s ease;\n\n  &.is-scroll-down {\n    background: var(--nav-background);\n    backdrop-filter: saturate(180%) blur(20px);\n    border-bottom: 1px solid var(--nav-border-color);\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 100;\n  overflow-y: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 52px;\n  font-size: 1.3rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  overflow: auto hidden;\n  display: flex;\n  flex: 1 0 auto;\n  align-items: center;\n  margin-right: 10px;\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.2px;\n  white-space: nowrap;\n  -webkit-overflow-scrolling: touch;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n  }\n`;\n\nconst SiteNavContent = styled.div`\n  position: relative;\n  align-self: flex-start;\n`;\n\nconst NavStyles = css`\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1);\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n  }\n\n  li a {\n    position: relative;\n    display: block;\n    padding: 10px 12px;\n    font-size: 1.2rem;\n    color: var(--main-color);\n    opacity: 0.7;\n    transition: opacity 0.2s ease-in-out;\n\n    @media (max-width: 700px) {\n      padding: 10px 8px;\n    }\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n\n  li a.is-white {\n    color: #fff;\n\n    &:before {\n      background: #fff;\n    }\n  }\n\n  .nav-current {\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  display: flex;\n  flex: 0 1 auto;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n\n  @media (max-width: 700px) {\n    .not-mobile {\n      display: none;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\n\nexport type PaginationProps = {\n  currentPage: number;\n  numPages: number;\n};\n\nfunction Pagination({ currentPage, numPages }: PaginationProps) {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const isEndFirst = currentPage > 3;\n  const isEndLast = currentPage <= numPages - 3;\n  const prevPage = currentPage - 1 === 1 ? '/' : `../${(currentPage - 1).toString()}`;\n  const nextPage = `../${(currentPage + 1).toString()}`;\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {isEndFirst && (\n          <Link to=\"/\" rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {'‹'}\n          </Link>\n        )}\n\n        {Array.from(\n          { length: numPages },\n          (_, i) =>\n            i > currentPage - 4 &&\n            i < currentPage + 2 && (\n              <Link\n                key={`pagination-number${i + 1}`}\n                className={i + 1 === currentPage ? 'active' : ''}\n                to={`/${i === 0 ? '' : i + 1}`}\n              >\n                {i + 1}\n              </Link>\n            ),\n        )}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {'›'}\n          </Link>\n        )}\n\n        {isEndLast && (\n          <Link to={`/${numPages}`} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nconst navCss = css`\n  margin-bottom: 32px;\n  text-align: center;\n\n  div {\n    display: inline-block;\n    padding: 10px;\n    background: rgb(25 27 31 / 0.1);\n    border-radius: 100px;\n  }\n\n  a {\n    float: left;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    margin: 0 4px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans', 'Ubuntu',\n      'Droid Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.5rem;\n    color: black;\n    text-decoration: none;\n    background: #fff;\n    border-radius: 100px;\n    box-shadow:\n      rgb(39 44 49 / 0.06) 8px 14px 38px,\n      rgb(39 44 49 / 0.03) 1px 3px 8px;\n    transition: background-color 0.3s;\n\n    &.active {\n      background-color: #b3b3b3;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    div {\n      background: rgb(255 255 255 / 0.1);\n    }\n\n    a {\n      color: #fff;\n      background: #000;\n\n      &.active {\n        background-color: #626262;\n      }\n\n      &:hover:not(.active) {\n        background-color: #272727;\n      }\n    }\n  }\n\n  @media (max-width: 650px) {\n    a {\n      width: 32px;\n      height: 32px;\n      margin: 0 2px;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { getImage, getSrc } from 'gatsby-plugin-image';\n\nimport { Footer } from '@/components/Footer.tsx';\nimport BackgroundImage from '@/components/header/BackgroundImage';\nimport HomeSiteNav from '@/components/header/HomeSiteNav';\nimport Pagination from '@/components/Pagination.tsx';\nimport { PostCard } from '@/components/PostCard.tsx';\nimport { Wrapper } from '@/components/Wrapper.tsx';\nimport IndexLayout from '@/layouts/index.tsx';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteDescription,\n  SiteHeaderContent,\n  SiteHeaderStyles,\n  SiteMain,\n  SiteTitle,\n} from '@/styles/shared.ts';\nimport config from '@/website-config.ts';\n\nimport type { PageContext } from '@/templates/post.tsx';\nimport type { ImageDataLike } from 'gatsby-plugin-image';\n\nexport type IndexProps = {\n  children: React.ReactNode;\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: ImageDataLike;\n    header: ImageDataLike;\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n};\n\nexport const Head = ({ data }: IndexProps) => {\n  const width = getImage(data.header)?.width;\n  const height = getImage(data.header)?.height;\n  return (\n    <Fragment>\n      <title>{config.title}</title>\n      <meta name=\"description\" content={config.description} />\n      <meta property=\"og:site_name\" content={config.title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={config.title} />\n      <meta property=\"og:description\" content={config.description} />\n      <meta property=\"og:url\" content={config.siteUrl} />\n      <meta property=\"og:image\" content={`${config.siteUrl}${getSrc(data.header)}`} />\n      {config.instagram && <meta property=\"article:publisher\" content={config.instagram} />}\n      {config.googleSiteVerification && (\n        <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n      )}\n      <meta name=\"github:card\" content=\"summary_large_image\" />\n      <meta name=\"github:title\" content={config.title} />\n      <meta name=\"github:description\" content={config.description} />\n      <meta name=\"github:url\" content={config.siteUrl} />\n      <meta name=\"github:image\" content={`${config.siteUrl}${getSrc(data.header)}`} />\n      {config.github && (\n        <meta name=\"github:site\" content={`@${config.github.split('https://github.com/')[1]}`} />\n      )}\n      <meta property=\"og:image:width\" content={width?.toString()} />\n      <meta property=\"og:image:height\" content={height?.toString()} />\n      <meta name=\"google-site-verification\" content=\"X7fnDr_T5GGmrn97A919fAd2I_t2ghdL_ZkDjcR1Y8Q\" />\n      <meta name=\"naver-site-verification\" content=\"896eb3f6e2c58669212193addb6978a4bb0d80c1\" />\n    </Fragment>\n  );\n};\n\nfunction IndexPage(props: IndexProps) {\n  return (\n    <IndexLayout css={HomePosts}>\n      <Wrapper>\n        <div css={[outer, SiteHeaderStyles]}>\n          <BackgroundImage imageSrc={props.data.header} />\n          <div css={inner}>\n            <HomeSiteNav />\n            <SiteHeaderContent className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <img\n                    style={{ maxHeight: '55px', height: '55px' }}\n                    src={getSrc(props.data.logo)}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <div css={[PostFeed]}>\n              {props.data.allMarkdownRemark.edges.map(\n                (post, index) =>\n                  // filter out drafts in production\n                  (post.node.frontmatter.draft !== true ||\n                    (post.node.frontmatter.tags[0] !== 'Diary' &&\n                      process.env.NODE_ENV !== 'production')) && (\n                    <PostCard key={post.node.fields.slug} post={post.node} isLarge={index === 0} />\n                  ),\n              )}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        {props.pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={props.pageContext.currentPage}\n            numPages={props.pageContext.numPages}\n          />\n        )}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    header: file(relativePath: { eq: \"img/common/back5.jpg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 2000\n          quality: 100\n          layout: FIXED\n          formats: [AUTO, WEBP, AVIF]\n          placeholder: BLURRED\n        )\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { draft: { ne: true }, tags: { ne: \"\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FULL_WIDTH\n                  formats: [AUTO, WEBP, AVIF]\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n          excerpt\n          fields {\n            readingTime {\n              text\n            }\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      min-height: 280px;\n      margin-bottom: 100px;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      min-height: 380px;\n      margin-bottom: 0;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      display: block;\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["BackgroundImage","imageSrc","isLoaded","setIsLoaded","useState","imgRef","useRef","useEffect","current","___EmotionJSX","HeaderBackground","src","getSrc","className","alt","ref","_styled","target","name","styles","HEIGHT_OFFSET","HomeSiteNav","isScrollDown","isSetScrollDown","lastScrollY","ticking","theme","useContext","ThemeToggleContext","isWhite","onScroll","useCallback","requestAnimationFrame","window","scrollY","isScrolled","addEventListener","passive","removeEventListener","css","SiteNavMain","inner","SiteNavStyles","SiteNavLeft","SiteNavLogo","SiteNavContent","NavStyles","role","Link","to","activeClassName","SiteNavRight","SocialLinks","config","instagram","SocialLink","SocialLinkFb","href","title","rel","Instagram","github","Github","ThemeModeSwitch","navCss","currentPage","numPages","isFirst","isLast","isEndFirst","isEndLast","prevPage","toString","nextPage","String","fromCharCode","Array","from","length","_","i","key","Head","data","_getImage","_getImage2","width","getImage","header","height","Fragment","content","description","property","siteUrl","googleSiteVerification","split","HomePosts","props","IndexLayout","Wrapper","outer","SiteHeaderStyles","SiteHeaderContent","SiteTitle","logo","style","maxHeight","SiteDescription","id","SiteMain","Posts","PostFeed","allMarkdownRemark","edges","map","post","index","node","frontmatter","draft","tags","process","PostCard","fields","slug","isLarge","children","pageContext","Pagination","Footer"],"sourceRoot":""}