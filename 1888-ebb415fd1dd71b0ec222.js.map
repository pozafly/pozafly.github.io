{"version":3,"file":"1888-ebb415fd1dd71b0ec222.js","mappings":"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","sources":["webpack://record-journey/./node_modules/.pnpm/mermaid@11.8.0/node_modules/mermaid/dist/chunks/mermaid.core/stateDiagram-XX37X6EN.mjs"],"sourcesContent":["import {\n  StateDB,\n  stateDiagram_default,\n  styles_default\n} from \"./chunk-6OLS64BW.mjs\";\nimport \"./chunk-BFAMUDN2.mjs\";\nimport \"./chunk-SKB7J2MH.mjs\";\nimport \"./chunk-27ZLIBVY.mjs\";\nimport \"./chunk-CPHRQXFT.mjs\";\nimport \"./chunk-MXNHSMXR.mjs\";\nimport \"./chunk-Y3GBUOFX.mjs\";\nimport \"./chunk-AC5SNWB5.mjs\";\nimport \"./chunk-UWXLY5YG.mjs\";\nimport \"./chunk-QESNASVV.mjs\";\nimport {\n  utils_default\n} from \"./chunk-55PJQP7W.mjs\";\nimport {\n  __name,\n  common_default,\n  configureSvgSize,\n  getConfig2 as getConfig,\n  getUrl,\n  log\n} from \"./chunk-3XYRH5AP.mjs\";\n\n// src/diagrams/state/stateRenderer.js\nimport { select } from \"d3\";\nimport { layout as dagreLayout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\n\n// src/diagrams/state/shapes.js\nimport { line, curveBasis } from \"d3\";\nvar drawStartState = /* @__PURE__ */ __name((g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit), \"drawStartState\");\nvar drawDivider = /* @__PURE__ */ __name((g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0), \"drawDivider\");\nvar drawSimpleState = /* @__PURE__ */ __name((g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n}, \"drawSimpleState\");\nvar drawDescrState = /* @__PURE__ */ __name((g, stateDef) => {\n  const addTspan = /* @__PURE__ */ __name(function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  }, \"addTspan\");\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"drawDescrState\");\nvar addTitleAndBox = /* @__PURE__ */ __name((g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc) {\n  }\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"addTitleAndBox\");\nvar drawEndState = /* @__PURE__ */ __name((g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n}, \"drawEndState\");\nvar drawForkJoinState = /* @__PURE__ */ __name((g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n}, \"drawForkJoinState\");\nvar _drawLongText = /* @__PURE__ */ __name((_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common_default.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n}, \"_drawLongText\");\nvar drawNote = /* @__PURE__ */ __name((text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n}, \"drawNote\");\nvar drawState = /* @__PURE__ */ __name(function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  return stateInfo;\n}, \"drawState\");\nvar edgeCount = 0;\nvar drawEdge = /* @__PURE__ */ __name(function(elem, path, relation) {\n  const getRelationType = /* @__PURE__ */ __name(function(type) {\n    switch (type) {\n      case StateDB.relationType.AGGREGATION:\n        return \"aggregation\";\n      case StateDB.relationType.EXTENSION:\n        return \"extension\";\n      case StateDB.relationType.COMPOSITION:\n        return \"composition\";\n      case StateDB.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  }, \"getRelationType\");\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = getUrl(true);\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(StateDB.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils_default.calcLabelPosition(path.points);\n    const rows = common_default.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundsTmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundsTmp.width);\n      minX = Math.min(minX, boundsTmp.x);\n      log.info(boundsTmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n}, \"drawEdge\");\n\n// src/diagrams/state/stateRenderer.js\nvar conf;\nvar transformationLog = {};\nvar setConf = /* @__PURE__ */ __name(function() {\n}, \"setConf\");\nvar insertMarkers = /* @__PURE__ */ __name(function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n}, \"insertMarkers\");\nvar draw = /* @__PURE__ */ __name(function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n}, \"draw\");\nvar getLabelWidth = /* @__PURE__ */ __name((text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n}, \"getLabelWidth\");\nvar renderDoc = /* @__PURE__ */ __name((doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys = Object.keys(states);\n  let first = true;\n  for (const key of keys) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      if (first) {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      } else {\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n      }\n    } else {\n      node = drawState(diagram2, stateDef, graph);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef, graph);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common_default.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  dagreLayout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n}, \"renderDoc\");\nvar stateRenderer_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/state/stateDiagram.ts\nvar diagram = {\n  parser: stateDiagram_default,\n  get db() {\n    return new StateDB(1);\n  },\n  renderer: stateRenderer_default,\n  styles: styles_default,\n  init: /* @__PURE__ */ __name((cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n  }, \"init\")\n};\nexport {\n  diagram\n};\n"],"names":["conf","drawStartState","g","append","attr","state","sizeUnit","padding","drawDivider","style","textHeight","drawSimpleState","stateDef","fontSize","text","id","classBox","node","getBBox","insert","width","height","radius","drawDescrState","addTspan","textEl","txt","isFirst2","tSpan","titleBox","descriptions","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","descrLine","descrBox","Math","max","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","title","titleShift","titleWidth","startX","graphBox","doc","abs","lineY","drawEndState","miniPadding","drawForkJoinState","forkWidth","forkHeight","parentId","tmp","_drawLongText","_text","y","textElem","replace","lines","split","lineBreakRegex","tHeight","noteMargin","line2","trim","length","span","textWidth","drawNote","note","rectElem","drawState","elem","stateInfo","label","type","stateBox","edgeCount","drawEdge","path","relation","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","points","filter","p","Number","isNaN","lineData","lineFunction","d","curve","svgPath","url","arrowMarkerAbsolute","calcLabelPosition","rows","getRows","titleRows","maxWidth","minX","i","boundsTmp","min","info","push","boxHeight","heightAdj","bounds","transformationLog","setConf","insertMarkers","draw","_version","diagObj","securityLevel","sandboxElement","root","nodes","contentDocument","body","document","debug","diagram2","select","rootDoc","db","getRootDoc","renderDoc","svgWidth","useMaxWidth","getLabelWidth","fontSizeFactor","domDocument","graph","compound","multigraph","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","states","getStates","relations","getRelations","keys","Object","key","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","nodeCount","cnt","setEdge","id1","id2","labelHeight","labelpos","svgElem","v","warn","JSON","stringify","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","setAttribute","edges","e","edge","w","stateRenderer_default","diagram","parser","renderer","styles","init","cnf"],"sourceRoot":""}