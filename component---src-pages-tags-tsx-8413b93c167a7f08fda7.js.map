{"version":3,"file":"component---src-pages-tags-tsx-8413b93c167a7f08fda7.js","mappings":"oPA0BA,MAAMA,EAAgBC,IAAiBC,EAAAA,EAAAA,IAAG,4DAIxBD,EAAME,OAAOC,KAAKC,gBAAe,eAI7CC,EAAWL,IAAiBC,EAAAA,EAAAA,IAAG,8EAMjBD,EAAMM,IAAIC,cAAa,qBACjBP,EAAMM,IAAIE,eAAc,oJASfR,EAAMM,IAAIG,kBAAiB,yEAO7CT,EAAMM,IAAII,SAAQ,0DAyEnC,UA/DuBC,IAAmB,IAAlB,KAAEC,GAAW,EACnC,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,MACVD,EAAAA,EAAAA,IAACE,EAAAA,EAAM,MACLF,EAAAA,EAAAA,IAAAA,QAAAA,KAAO,UAETA,EAAAA,EAAAA,IAACG,EAAAA,EAAO,CAACf,IAAKF,IACZc,EAAAA,EAAAA,IAAAA,SAAAA,CACEI,UAAU,+BACVhB,IAAG,CAAGiB,EAAAA,GAAYC,EAAAA,GAAiB,SAEnCN,EAAAA,EAAAA,IAAAA,MAAAA,CAAKZ,IAAG,CAAGmB,EAAAA,GAAOC,EAAAA,GAAW,SAC3BR,EAAAA,EAAAA,IAAAA,MAAAA,CAAKZ,IAAKqB,EAAAA,KACRT,EAAAA,EAAAA,IAACU,EAAAA,EAAO,CAACC,QAAQ,QAIvBX,EAAAA,EAAAA,IAAAA,OAAAA,CAAMY,GAAG,YAAYR,UAAU,YAAYhB,IAAG,CAAGyB,EAAAA,GAAUN,EAAAA,GAAK,SAC9DP,EAAAA,EAAAA,IAAAA,MAAAA,CAAKZ,IAAKqB,EAAAA,KACRT,EAAAA,EAAAA,IAAAA,UAAAA,CAASI,UAAU,YAAYhB,IAAG,CAAG0B,EAAAA,SAAUC,EAAAA,QAAO,SACpDf,EAAAA,EAAAA,IAACgB,EAAAA,eAAc,CAACZ,UAAU,qBACxBJ,EAAAA,EAAAA,IAACiB,EAAAA,cAAa,CAACb,UAAU,mBAAkB,UAG7CJ,EAAAA,EAAAA,IAACkB,EAAAA,EAAe,CAACd,UAAU,sBACzBJ,EAAAA,EAAAA,IAAAA,MAAAA,CAAKI,UAAU,iBACbJ,EAAAA,EAAAA,IAAAA,MAAAA,CAAKZ,IAAKI,IACRQ,EAAAA,EAAAA,IAAAA,KAAAA,KACGD,EAAKoB,kBAAkBC,MAAMC,KAAK5B,IACjCO,EAAAA,EAAAA,IAAAA,KAAAA,CAAIsB,IAAK7B,EAAI8B,aACXvB,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAACC,GAAK,SAAQC,IAAUjC,EAAI8B,gBAC9B9B,EAAI8B,WAAW,KAAG9B,EAAIkC,WAAW,gBAWtD3B,EAAAA,EAAAA,IAAC4B,EAAAA,EAAM,OAEG,C","sources":["webpack://gatsby-casper/./src/pages/tags.tsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql, Link } from 'gatsby';\nimport { css, Theme } from '@emotion/react';\nimport kebabCase from 'lodash/kebabCase';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostFullContent } from '../components/PostContent';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  SiteArchiveHeader,\n  SiteHeader,\n  SiteMain,\n  SiteNavMain,\n} from '../styles/shared';\nimport {\n  NoImage,\n  PostFull,\n  PostFullHeader,\n  PostFullTitle,\n} from '../templates/post';\n\nconst PageTemplate = (theme: Theme) => css`\n  .site-main {\n    margin-top: 64px;\n    padding-bottom: 4vw;\n    background: ${theme.global.body.backgroundColor};\n  }\n`;\n\nconst TagArea = (theme: Theme) => css`\n  ul {\n    padding-left: initial;\n    li {\n      display: inline-block;\n      list-style: none;\n      background: ${theme.tag.tagBackground};\n      border: 1px solid ${theme.tag.tagBorderColor};\n      border-radius: 6px;\n      margin-right: 12px;\n      color: #000;\n      padding: 2px 4px;\n      transform: translateY(0);\n      transition: all 0.4s ease;\n\n      &:hover {\n        box-shadow: 0px 8px 20px ${theme.tag.tagHoverBoxShadow};\n        transform: translateY(-3px);\n      }\n\n      a {\n        padding: 6px;\n        text-decoration: none;\n        color: ${theme.tag.tagColor};\n        box-shadow: none;\n        &:hover {\n          box-shadow: none;\n        }\n      }\n    }\n  }\n`;\n\nconst Tags: React.FC = ({ data }: any) => {\n  return (\n    <IndexLayout>\n      <Helmet>\n        <title>Tags</title>\n      </Helmet>\n      <Wrapper css={PageTemplate}>\n        <header\n          className=\"site-archive-header no-image\"\n          css={[SiteHeader, SiteArchiveHeader]}\n        >\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <article className=\"post page\" css={[PostFull, NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTitle className=\"post-full-title\">Tags</PostFullTitle>\n              </PostFullHeader>\n\n              <PostFullContent className=\"post-full-content\">\n                <div className=\"post-content\">\n                  <div css={TagArea}>\n                    <ul>\n                      {data.allMarkdownRemark.group.map((tag: any) => (\n                        <li key={tag.fieldValue}>\n                          <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                            {tag.fieldValue} ({tag.totalCount})\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </PostFullContent>\n            </article>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 2000\n    ) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default Tags;\n"],"names":["PageTemplate","theme","css","global","body","backgroundColor","TagArea","tag","tagBackground","tagBorderColor","tagHoverBoxShadow","tagColor","_ref","data","___EmotionJSX","IndexLayout","Helmet","Wrapper","className","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","id","SiteMain","PostFull","NoImage","PostFullHeader","PostFullTitle","PostFullContent","allMarkdownRemark","group","map","key","fieldValue","Link","to","kebabCase","totalCount","Footer"],"sourceRoot":""}