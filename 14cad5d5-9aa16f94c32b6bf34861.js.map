{"version":3,"file":"14cad5d5-9aa16f94c32b6bf34861.js","mappings":"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","sources":["webpack://gatsby-casper/./src/components/PostCard.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { kebabCase } from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\nimport _ from 'lodash';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport type { PageContext } from '../templates/post';\nimport { AuthorList } from './AuthorList';\nimport config from '../website-config';\n\nexport type PostCardProps = {\n  post: PageContext;\n  isLarge?: boolean;\n};\n\nexport function PostCard({ post, isLarge = false }: PostCardProps) {\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <article\n      // className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${\n      //   isLarge ? 'post-card-large' : ''\n      //   }`}\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${isLarge ? 'post-card-large' : ''\n        }`}\n      css={[PostCardStyles, isLarge && PostCardLarge]}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter?.image && (\n              <GatsbyImage\n                image={getImage(post.frontmatter.image)!}\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                loading={isLarge ? 'eager' : 'lazy'}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        {post.frontmatter.tags && config.showAllTags && (\n          <PostCardPrimaryTag className=\"post-card-primary-tag\">\n            {post.frontmatter.tags.map((tag, idx) => (\n              <React.Fragment key={tag}>\n                {idx > 0 && <>, &nbsp;</>}\n                <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n              </React.Fragment>\n            ))}\n          </PostCardPrimaryTag>\n        )}\n        {post.frontmatter.tags && !config.showAllTags && (\n          <PostCardPrimaryTag className=\"post-card-primary-tag\">\n            <Link to={`/tags/${kebabCase(post.frontmatter.tags[0])}/`}>\n              {post.frontmatter.tags[0]}\n            </Link>\n          </PostCardPrimaryTag>\n        )}\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <PostCardHeader className=\"post-card-header\">\n\n            <PostCardTitle className=\"post-card-title\">{post.frontmatter.title}</PostCardTitle>\n          </PostCardHeader>\n          <PostCardExcerpt className=\"post-card-excerpt\">\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList authors={post.frontmatter.author} tooltip=\"small\" />\n          <PostCardBylineContent className=\"post-card-byline-content\">\n            <span>\n              {post.frontmatter.author.map((author, index) => (\n                <React.Fragment key={author.name}>\n                  <Link to={`/author/${kebabCase(author.name)}/`}>{author.name}</Link>\n                  {post.frontmatter.author.length - 1 > index && ', '}\n                </React.Fragment>\n              ))}\n            </span>\n            <span className=\"post-card-byline-date\">\n              <time dateTime={datetime}>{displayDatetime}</time>{' '}\n              <span className=\"bull\">&bull;</span> {post.fields.readingTime.text}\n            </span>\n          </PostCardBylineContent>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n}\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 40px;\n  padding: 0 20px 40px;\n  min-height: 220px;\n  background-size: cover;\n`;\n\nconst PostCardLarge = css`\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    padding-bottom: 40px;\n    min-height: 280px;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-content-link {\n      \n    }\n\n    .post-card-meta {\n      /* padding: 0 0 0 40px; */\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: #fff no-repeat center center;\n  background-size: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  /* color: var(--darkgrey); */\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled.div`\n  margin: 15px 0 0.2em;\n  /* color: var(--blue); */\n  color: ${colors.blue};\n  font-size: 1.2rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  }\n`;\n\nconst PostCardExcerpt = styled.section`\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)} !important;\n  }\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  margin: 4px 0 0 10px;\n  /* color: color(var(--midgrey) l(+10%)); */\n  color: ${lighten('0.1', colors.midgrey)};\n  font-size: 1.2rem;\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n\n  span {\n    margin: 0;\n  }\n\n  a {\n    /* color: color(var(--darkgrey) l(+20%)); */\n    color: ${lighten('0.2', colors.darkgrey)};\n    font-weight: 600;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n  }\n`;\n\nconst PostCardHeader = styled.header`\n  /* margin: 15px 0 0; */\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-color: color(var(--darkgrey) l(+2%)); */\n    border-color: ${lighten('0.02', colors.darkgrey)};\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n"],"names":["PostCard","post","isLarge","date","Date","frontmatter","datetime","format","displayDatetime","___EmotionJSX","className","image","css","PostCardStyles","PostCardLarge","Link","PostCardImageLink","to","fields","slug","PostCardImage","_post$frontmatter","GatsbyImage","getImage","alt","title","style","height","loading","PostCardContent","tags","config","PostCardPrimaryTag","map","tag","idx","React","key","_kebabCase","PostCardContentLink","PostCardHeader","PostCardTitle","PostCardExcerpt","excerpt","PostCardMeta","AuthorList","authors","author","tooltip","PostCardBylineContent","index","name","length","dateTime","readingTime","text","styles","target","colors","lighten","AuthorProfileImage"],"sourceRoot":""}