{"componentChunkName":"component---src-templates-index-tsx","path":"/4/","result":{"data":{"header":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#082828","images":{"fallback":{"src":"/static/68b85cb792e6c1dd32709606e5beab12/384e9/back.png","srcSet":"/static/68b85cb792e6c1dd32709606e5beab12/384e9/back.png 2000w,\n/static/68b85cb792e6c1dd32709606e5beab12/69da9/back.png 4000w","sizes":"2000px"},"sources":[{"srcSet":"/static/68b85cb792e6c1dd32709606e5beab12/2b408/back.avif 2000w,\n/static/68b85cb792e6c1dd32709606e5beab12/7e324/back.avif 4000w","type":"image/avif","sizes":"2000px"},{"srcSet":"/static/68b85cb792e6c1dd32709606e5beab12/c8570/back.webp 2000w,\n/static/68b85cb792e6c1dd32709606e5beab12/3654e/back.webp 4000w","type":"image/webp","sizes":"2000px"}]},"width":2000,"height":372}}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"(5) 로그인2 -SpringBoot 구현","date":"2021-02-04T15:03:47.149Z","tags":["Tripllo 제작기","SpringSecurity","JWT"],"draft":false,"excerpt":"Spring Security와 JWT를 사용해서 로그인 기능을 구현했다. Spring Security의 구현된 소스와 login의 Service 단 내부 로직을 개념에 맞춰서 알아보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/cf052c2134f0abd114c107d149d0dd49/0022d/tripllo5.png","srcSet":"/static/cf052c2134f0abd114c107d149d0dd49/76a4f/tripllo5.png 750w,\n/static/cf052c2134f0abd114c107d149d0dd49/0022d/tripllo5.png 820w","sizes":"100vw"},"sources":[{"srcSet":"/static/cf052c2134f0abd114c107d149d0dd49/2b382/tripllo5.avif 750w,\n/static/cf052c2134f0abd114c107d149d0dd49/a6808/tripllo5.avif 820w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/cf052c2134f0abd114c107d149d0dd49/66907/tripllo5.webp 750w,\n/static/cf052c2134f0abd114c107d149d0dd49/898ce/tripllo5.webp 820w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.75}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Spring Security와 JWT를 사용해서 로그인 기능을 구현했다. Spring Security의 구현된 소스와 login의 Service 단 내부 로직을 개념에 맞춰서 알아보자. 이제 실제적으로 SpringBoot…","fields":{"readingTime":{"text":"21 min read"},"layout":"post","slug":"/tripllo/(5)login2-SpringBoot/"}}},{"node":{"frontmatter":{"title":"(4) 로그인1 -SpringSecurity & JWT 개념","date":"2021-02-04T10:03:47.149Z","tags":["Tripllo 제작기","SpringSecurity","JWT"],"draft":false,"excerpt":"Spring Security와 JWT를 사용해서 로그인 기능을 구현했다. Spring Security와 JWT의 개념을 알아보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f0634ae38a1872124e048bd0df954052/f6dfe/tripllo4.png","srcSet":"/static/f0634ae38a1872124e048bd0df954052/21457/tripllo4.png 750w,\n/static/f0634ae38a1872124e048bd0df954052/f6dfe/tripllo4.png 788w","sizes":"100vw"},"sources":[{"srcSet":"/static/f0634ae38a1872124e048bd0df954052/8372e/tripllo4.avif 750w,\n/static/f0634ae38a1872124e048bd0df954052/1f499/tripllo4.avif 788w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/f0634ae38a1872124e048bd0df954052/1cb46/tripllo4.webp 750w,\n/static/f0634ae38a1872124e048bd0df954052/0c535/tripllo4.webp 788w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.43527918781725894}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Spring Security와 JWT를 사용해서 로그인 기능을 구현했다. Spring Security와 JWT의 개념을 알아보자. Spring Security Spring Security는 Spring…","fields":{"readingTime":{"text":"12 min read"},"layout":"post","slug":"/tripllo/(4)spring-security-jwt/"}}},{"node":{"frontmatter":{"title":"(3) Vue init & ESLint, Prettier 설정","date":"2021-02-03T19:03:47.149Z","tags":["Tripllo 제작기","Vue.js"],"draft":false,"excerpt":"백엔드 Setting은 끝났으니 이제 프론트엔드 Setting이 필요하다. npm 으로 Vue를 생성하고, 코드 포맷터인 ESLint, Prettier 설정을 해보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#282838","images":{"fallback":{"src":"/static/4a082b86b3f9e7cdce0817b9bd40b7d2/a1afa/tripllo3.png","srcSet":"/static/4a082b86b3f9e7cdce0817b9bd40b7d2/a1afa/tripllo3.png 649w","sizes":"100vw"},"sources":[{"srcSet":"/static/4a082b86b3f9e7cdce0817b9bd40b7d2/265ea/tripllo3.avif 649w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/4a082b86b3f9e7cdce0817b9bd40b7d2/2a2cd/tripllo3.webp 649w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6394453004622496}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"백엔드 Setting은 끝났으니 이제 프론트엔드 Setting이 필요하다. npm 으로 Vue를 생성하고, 코드 포맷터인 ESLint, Prettier 설정을 해보자. npm 세팅 (Node Package Manager)은 node.js…","fields":{"readingTime":{"text":"12 min read"},"layout":"post","slug":"/tripllo/(3)vue-esLint-prettier-setting/"}}},{"node":{"frontmatter":{"title":"(2) MySQL 설계 & SpringBoot init","date":"2021-02-03T12:03:47.149Z","tags":["Tripllo 제작기","MySQL","SpringBoot"],"draft":false,"excerpt":"Tripllo 백엔드 세팅을 해보자. Workbench로 DB를 설계하고 MySQL, MyBatis와 SpringBoot를 연동한다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/b92b834fea823ff58fb62fb32c1d3cc7/79916/tripllo2.png","srcSet":"/static/b92b834fea823ff58fb62fb32c1d3cc7/7c622/tripllo2.png 750w,\n/static/b92b834fea823ff58fb62fb32c1d3cc7/79916/tripllo2.png 1012w","sizes":"100vw"},"sources":[{"srcSet":"/static/b92b834fea823ff58fb62fb32c1d3cc7/cd2e3/tripllo2.avif 750w,\n/static/b92b834fea823ff58fb62fb32c1d3cc7/2c052/tripllo2.avif 1012w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/b92b834fea823ff58fb62fb32c1d3cc7/1ec5d/tripllo2.webp 750w,\n/static/b92b834fea823ff58fb62fb32c1d3cc7/927ba/tripllo2.webp 1012w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8023715415019763}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Tripllo 백엔드 세팅을 해보자. Workbench로 DB를 설계하고 MySQL, MyBatis와 SpringBoot를 연동한다. 웹 개발 절차 통상적인 웹 개발 절차는 요구사항 -> 서비스 기획 -> UI, UX 상세 설계 -> GUI…","fields":{"readingTime":{"text":"11 min read"},"layout":"post","slug":"/tripllo/(2)mysql-design-spring-boot/"}}},{"node":{"frontmatter":{"title":"(1) 제작동기","date":"2021-02-03T10:03:47.149Z","tags":["Tripllo 제작기"],"draft":false,"excerpt":"Trello 어플리케이션을 만들기 시작한 지 벌써 2달이 조금 안 되었다. 하루에 10시간씩 꼬박 시간을 들여가며 만드는 시간이 조급하면서도 즐거웠다. 현재 어플 상태는 3/4 정도 만들어진 상태로 배포되어 있다. 어플을 만들면서 다음번에 같은 문제를 만났을 때 참고할 만한 자료를 남겨두어야지 생각만 하다가 지금부터라도 남겨두어야겠다 싶어 제작기를 적으려고 한다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/e4152/tripllo1.png","srcSet":"/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/17a2a/tripllo1.png 750w,\n/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/55283/tripllo1.png 1080w,\n/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/e4152/tripllo1.png 1107w","sizes":"100vw"},"sources":[{"srcSet":"/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/676a5/tripllo1.avif 750w,\n/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/e198f/tripllo1.avif 1080w,\n/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/e7002/tripllo1.avif 1107w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/3c28e/tripllo1.webp 750w,\n/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/d475f/tripllo1.webp 1080w,\n/static/bf24ba2ee5132b0ee0bdfdda2b735e7d/b6a06/tripllo1.webp 1107w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7262872628726287}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Trello 어플리케이션을 만들기 시작한 지 벌써 2달이 조금 안 되었다. 하루에 10시간씩 꼬박 시간을 들여가며 만드는 시간이 조급하면서도 즐거웠다. 현재 어플 상태는 3/…","fields":{"readingTime":{"text":"6 min read"},"layout":"post","slug":"/tripllo/(1)production-motive/"}}},{"node":{"frontmatter":{"title":"오라클 CHR, ASCII 함수 사용법","date":"2020-06-12","tags":["Oracle"],"draft":false,"excerpt":"CHR(), ASCII() 함수 사용법.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f80808","images":{"fallback":{"src":"/static/81d8014c53e209d05ed5596eb1b93203/39611/oracle.jpg","srcSet":"/static/81d8014c53e209d05ed5596eb1b93203/7284f/oracle.jpg 750w,\n/static/81d8014c53e209d05ed5596eb1b93203/39611/oracle.jpg 768w","sizes":"100vw"},"sources":[{"srcSet":"/static/81d8014c53e209d05ed5596eb1b93203/b0356/oracle.avif 750w,\n/static/81d8014c53e209d05ed5596eb1b93203/f1c79/oracle.avif 768w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/81d8014c53e209d05ed5596eb1b93203/57584/oracle.webp 750w,\n/static/81d8014c53e209d05ed5596eb1b93203/588ff/oracle.webp 768w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6666666666666666}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"정의 - : 아스키코드값 얻기(숫자)\n​ - : CHR값 얻기(문자) 이렇게만 적어놓으면 뭐가뭔지 잘 모를테니, 문자로 아스키코드값과 아스키코드로 문자열 값을 얻는 쿼리문을 한번 보자. 결과는, ASCII(‘A’) ASCII(‘Z’) ASCII(‘a…","fields":{"readingTime":{"text":"3 min read"},"layout":"post","slug":"/oracle/CHR-ASCII/"}}}]}},"pageContext":{"limit":6,"skip":18,"numPages":6,"currentPage":4}},"staticQueryHashes":["2234322554","3549156140"],"slicesMap":{}}