{"componentChunkName":"component---src-pages-404-tsx","path":"/404/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"JavaScript의 Getter / Setter","date":"2023-02-09","tags":["JavaScript"],"image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#383838","images":{"fallback":{"src":"/static/2b54ff7ec217d87afe264e9798a7a243/18b2e/JavaScript_Getter_Setter.png","srcSet":"/static/2b54ff7ec217d87afe264e9798a7a243/18b2e/JavaScript_Getter_Setter.png 700w","sizes":"100vw"},"sources":[{"srcSet":"/static/2b54ff7ec217d87afe264e9798a7a243/377b6/JavaScript_Getter_Setter.webp 700w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"children":[{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}]}}]},"excerpt":"getter와 setter란? 객체의 프로퍼티는 두 종류다. 첫 번째는 데이터 프로퍼티이고, 두 번째는 접근자 프로퍼티다. 데이터 프로퍼티는 우리가 흔히 아는 객체 내부의 값에 해당한다. 접근자 프로퍼티는 getter와 setter…","fields":{"readingTime":{"text":"9 min read"},"layout":"post","slug":"/javascript/getter-setter/"}}},{"node":{"frontmatter":{"title":"JavaScript의 얕은 복사와 깊은 복사","date":"2023-02-08","tags":["JavaScript"],"image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/c0455e771b38f35341c36082f8b7c15c/492b5/deep-copy-shallow-copy.png","srcSet":"/static/c0455e771b38f35341c36082f8b7c15c/71312/deep-copy-shallow-copy.png 750w,\n/static/c0455e771b38f35341c36082f8b7c15c/5feb6/deep-copy-shallow-copy.png 1080w,\n/static/c0455e771b38f35341c36082f8b7c15c/492b5/deep-copy-shallow-copy.png 1160w","sizes":"100vw"},"sources":[{"srcSet":"/static/c0455e771b38f35341c36082f8b7c15c/5d2c1/deep-copy-shallow-copy.webp 750w,\n/static/c0455e771b38f35341c36082f8b7c15c/0bcd6/deep-copy-shallow-copy.webp 1080w,\n/static/c0455e771b38f35341c36082f8b7c15c/9ca95/deep-copy-shallow-copy.webp 1160w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.789655172413793}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"children":[{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}]}}]},"excerpt":"JavaScript에서 객체란, 키로 구분된 데이터 집합이나 복잡한 개체(entity)를 저장할 수 있다. JavaScript를 잘 다루려면 객체를 잘 이해하고 있어야 한다. 객체는 단순히 key, value…","fields":{"readingTime":{"text":"25 min read"},"layout":"post","slug":"/javascript/shallo-copy-and-deep-copy/"}}},{"node":{"frontmatter":{"title":"nvm을 사용해 프로젝트별로 Node.js 버전 다르게 사용하기","date":"2022-04-10T12:13:47.149Z","tags":["NPM","AutoMation"],"image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#282828","images":{"fallback":{"src":"/static/c7934c26406e2c570808f63f8ceaa552/7592a/node-version-manager.webp","srcSet":"/static/c7934c26406e2c570808f63f8ceaa552/1e0c8/node-version-manager.webp 750w,\n/static/c7934c26406e2c570808f63f8ceaa552/7592a/node-version-manager.webp 1000w","sizes":"100vw"},"sources":[]},"width":1,"height":0.42}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"children":[{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}]}}]},"excerpt":"nvm이란, Node Version Manager로, Node.js의 버전을 관리하는 도구다. 시스템에 여러 개의 Node.js를 설치하고 사용할 버전을 쉽게 전환할 수 있도록 도와주는 유틸이다. 이는 쉘(sh, dash, ksh, zsh, bash…","fields":{"readingTime":{"text":"9 min read"},"layout":"post","slug":"/npm/setting-npm-differently-for-each-project/"}}}]}},"pageContext":{}},"staticQueryHashes":["2234322554","3549156140"],"slicesMap":{}}