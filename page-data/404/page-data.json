{"componentChunkName":"component---src-pages-404-tsx","path":"/404/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"객체지향 프로그래밍으로 알아보는 prototype","date":"2023-02-24","tags":["JavaScript"],"image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#78b8c8","images":{"fallback":{"src":"/static/043461a4a4c588ab1965da78011a1685/48ae8/platypus.jpg","srcSet":"/static/043461a4a4c588ab1965da78011a1685/48ae8/platypus.jpg 522w","sizes":"100vw"},"sources":[{"srcSet":"/static/043461a4a4c588ab1965da78011a1685/a2f07/platypus.webp 522w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6513409961685823}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"children":[{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}]}}]},"excerpt":"객체지향 프로그래밍 객체 지향 프로그래밍(Object-Oriented Programming, OOP…","fields":{"readingTime":{"text":"44 min read"},"layout":"post","slug":"/javascript/prototype/"}}},{"node":{"frontmatter":{"title":"Event Loop와 비동기","date":"2023-02-16","tags":["JavaScript"],"image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/93e29bc79c4d8fe0729ab8aefff58475/521da/blocking.jpg","srcSet":"/static/93e29bc79c4d8fe0729ab8aefff58475/521da/blocking.jpg 700w","sizes":"100vw"},"sources":[{"srcSet":"/static/93e29bc79c4d8fe0729ab8aefff58475/dcd92/blocking.webp 700w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5714285714285714}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"children":[{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}]}}]},"excerpt":"요약 JavaScript는 싱글 스레드 언어이다. 하지만 멀티 스레드 처럼 동작하는데 이는 Event Loop 때문이다. Event Loop는 JavaScript Runtime Environment에 있으며 Web API와 Call Stack…","fields":{"readingTime":{"text":"25 min read"},"layout":"post","slug":"/javascript/event-loop-and-async/"}}},{"node":{"frontmatter":{"title":"JavaScript의 Symbol에 대해서.","date":"2023-02-15","tags":["JavaScript"],"image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#181818","images":{"fallback":{"src":"/static/561bcd4a1b332dc70475a85d77d3c82c/cabd0/symbol.png","srcSet":"/static/561bcd4a1b332dc70475a85d77d3c82c/d734b/symbol.png 750w,\n/static/561bcd4a1b332dc70475a85d77d3c82c/cabd0/symbol.png 876w","sizes":"100vw"},"sources":[{"srcSet":"/static/561bcd4a1b332dc70475a85d77d3c82c/59596/symbol.webp 750w,\n/static/561bcd4a1b332dc70475a85d77d3c82c/d99ef/symbol.webp 876w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6255707762557078}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"children":[{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}]}}]},"excerpt":"요약 Symbol은 primitive type으로 ES6에서 추가되었다. Symbol은 변경 불가능한 원시 값이며, 고유한 ID의 역할을 한다. 객체의 속성(프로퍼티)의 key로 사용된다. Symbol…","fields":{"readingTime":{"text":"27 min read"},"layout":"post","slug":"/javascript/symbol/"}}}]}},"pageContext":{}},"staticQueryHashes":["2234322554","3549156140"],"slicesMap":{}}