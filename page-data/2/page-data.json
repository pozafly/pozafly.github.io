{"componentChunkName":"component---src-templates-index-tsx","path":"/2/","result":{"data":{"header":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#082828","images":{"fallback":{"src":"/static/68b85cb792e6c1dd32709606e5beab12/384e9/back.png","srcSet":"/static/68b85cb792e6c1dd32709606e5beab12/384e9/back.png 2000w,\n/static/68b85cb792e6c1dd32709606e5beab12/69da9/back.png 4000w","sizes":"2000px"},"sources":[{"srcSet":"/static/68b85cb792e6c1dd32709606e5beab12/2b408/back.avif 2000w,\n/static/68b85cb792e6c1dd32709606e5beab12/7e324/back.avif 4000w","type":"image/avif","sizes":"2000px"},{"srcSet":"/static/68b85cb792e6c1dd32709606e5beab12/c8570/back.webp 2000w,\n/static/68b85cb792e6c1dd32709606e5beab12/3654e/back.webp 4000w","type":"image/webp","sizes":"2000px"}]},"width":2000,"height":372}}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"(12) Let's Encrypt 갱신 자동화","date":"2021-04-12T10:13:47.149Z","tags":["Tripllo 제작기","Let's Encrypt","AutoMation"],"draft":false,"excerpt":"AWS EC2 환경에서 Nginx와 Let's Encrypt로 HTTPS SSL 인증서 갱신 자동화를 해보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/58a4a7e8eb69b8bdbea5d60e52f4155d/abc1a/lets-encrypt.png","srcSet":"/static/58a4a7e8eb69b8bdbea5d60e52f4155d/abc1a/lets-encrypt.png 640w","sizes":"100vw"},"sources":[{"srcSet":"/static/58a4a7e8eb69b8bdbea5d60e52f4155d/daee1/lets-encrypt.avif 640w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/58a4a7e8eb69b8bdbea5d60e52f4155d/b659a/lets-encrypt.webp 640w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.825}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Let’s Encrypt 갱신 자동화 서비스 환경은 AWS의 EC2(Amazon linux2) + Nginx 조합으로 되어있습니다. *amazon linux2는 apt-get 패키지 관련 명령어 대신 yum 패키지 명령어를 사용합니다. Let’s…","fields":{"readingTime":{"text":"10 min read"},"layout":"post","slug":"/tripllo/(12)aws-lets-encrypt-renewal-automation/"}}},{"node":{"frontmatter":{"title":"(11) Sentry 에러 로깅 시스템 도입","date":"2021-04-09T17:13:47.149Z","tags":["Tripllo 제작기","Sentry","에러 모니터링"],"draft":false,"excerpt":"Sentry를 통해 프론트엔드 에러 로깅 시스템을 도입해보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/bf7a9491463863772f181d36c58051fa/245fe/sentry.png","srcSet":"/static/bf7a9491463863772f181d36c58051fa/6f128/sentry.png 750w,\n/static/bf7a9491463863772f181d36c58051fa/245fe/sentry.png 900w","sizes":"100vw"},"sources":[{"srcSet":"/static/bf7a9491463863772f181d36c58051fa/4bc47/sentry.avif 750w,\n/static/bf7a9491463863772f181d36c58051fa/80d3b/sentry.avif 900w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/bf7a9491463863772f181d36c58051fa/fdac4/sentry.webp 750w,\n/static/bf7a9491463863772f181d36c58051fa/ff899/sentry.webp 900w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5555555555555556}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Sentry Sentry는 Application Error Monitoring…","fields":{"readingTime":{"text":"17 min read"},"layout":"post","slug":"/tripllo/(11)vue-sentry-error-monitoring-system/"}}},{"node":{"frontmatter":{"title":"(10) Frontend -travis 배포 자동화","date":"2021-04-06T17:13:47.149Z","tags":["Tripllo 제작기","Travis CI","AutoMation"],"draft":false,"excerpt":"Vue프로젝트를 aws의 S3와 CloudFront에 Travis CI를 통해 배포 자동화를 해보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/49f04b06d4009a791ea88d198934da29/2b5bd/travis.png","srcSet":"/static/49f04b06d4009a791ea88d198934da29/343d5/travis.png 750w,\n/static/49f04b06d4009a791ea88d198934da29/2b5bd/travis.png 1053w","sizes":"100vw"},"sources":[{"srcSet":"/static/49f04b06d4009a791ea88d198934da29/2139a/travis.avif 750w,\n/static/49f04b06d4009a791ea88d198934da29/5dcc9/travis.avif 1053w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/49f04b06d4009a791ea88d198934da29/ffebb/travis.webp 750w,\n/static/49f04b06d4009a791ea88d198934da29/76746/travis.webp 1053w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.0066476733143401}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Travis Travis CI에 대해서 알아보자. 우선 Travis 공식 Docs를 보고 따라 해봤다. 참고 자료는 이동욱 님의 스프링 부트와 AWS로 혼자 구현하는 웹 서비스 책을 참고했다. 우선 travis endpoint…","fields":{"readingTime":{"text":"17 min read"},"layout":"post","slug":"/tripllo/(10)vue-travis-automation/"}}},{"node":{"frontmatter":{"title":"(9) vue 리팩토링2","date":"2021-04-04T19:13:47.149Z","tags":["Tripllo 제작기","리팩토링","Vue.js"],"draft":false,"excerpt":"멘토링 후 Tripllo에 꽤 많은 것을 손봐야한다는 것을 알게 되었다. 하나하나 고쳐보면서 정리한 것을 기록해보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#280878","images":{"fallback":{"src":"/static/55cb55c1713d209ce0e78d1522e0f7bf/d0b9c/refactor2.jpg","srcSet":"/static/55cb55c1713d209ce0e78d1522e0f7bf/6c918/refactor2.jpg 750w,\n/static/55cb55c1713d209ce0e78d1522e0f7bf/d0b9c/refactor2.jpg 800w","sizes":"100vw"},"sources":[{"srcSet":"/static/55cb55c1713d209ce0e78d1522e0f7bf/2b382/refactor2.avif 750w,\n/static/55cb55c1713d209ce0e78d1522e0f7bf/6ee87/refactor2.avif 800w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/55cb55c1713d209ce0e78d1522e0f7bf/66907/refactor2.webp 750w,\n/static/55cb55c1713d209ce0e78d1522e0f7bf/0d27e/refactor2.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.75}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"아래 내용은 인프런 멘토링에서 캡틴판교님께 멘토링 받으며 코드 리뷰를 해주신 부분에 대한 반영 내용입니다. 목차 props type plugin 폴더 정리 nextTick 없애기 & 대신 사용자 정의 디렉티브 연결 API 함수 에러 핸들링 API…","fields":{"readingTime":{"text":"28 min read"},"layout":"post","slug":"/tripllo/(9)vue-refactor2/"}}},{"node":{"frontmatter":{"title":"(8) vue 리팩토링1","date":"2021-04-03T19:13:47.149Z","tags":["Tripllo 제작기","리팩토링","Vue.js"],"draft":false,"excerpt":"멘토링 후 Tripllo에 꽤 많은 것을 손봐야한다는 것을 알게 되었다. 하나하나 고쳐보면서 정리한 것을 기록해보자.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#280878","images":{"fallback":{"src":"/static/f1082d81f2807d3a4e13b865bcd8c9f7/d0b9c/refactor1.jpg","srcSet":"/static/f1082d81f2807d3a4e13b865bcd8c9f7/6c918/refactor1.jpg 750w,\n/static/f1082d81f2807d3a4e13b865bcd8c9f7/d0b9c/refactor1.jpg 800w","sizes":"100vw"},"sources":[{"srcSet":"/static/f1082d81f2807d3a4e13b865bcd8c9f7/2b382/refactor1.avif 750w,\n/static/f1082d81f2807d3a4e13b865bcd8c9f7/6ee87/refactor1.avif 800w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/f1082d81f2807d3a4e13b865bcd8c9f7/66907/refactor1.webp 750w,\n/static/f1082d81f2807d3a4e13b865bcd8c9f7/0d27e/refactor1.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.75}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"아래 내용은 인프런 멘토링에서 캡틴판교님께 멘토링 받으며 코드 리뷰를 해주신 부분에 대한 반영 내용입니다. 목차 package.json 정리(안 쓰는 라이브러리 제거, 개발용 배포용 라이브러리 구분) vue plugin eslint…","fields":{"readingTime":{"text":"21 min read"},"layout":"post","slug":"/tripllo/(8)vue-refactor1/"}}},{"node":{"frontmatter":{"title":"Gatsby 블로그 이사","date":"2021-03-31","tags":["Blog","Gatsby"],"draft":false,"excerpt":"블로그 이사를 완료했다. 사실 블로그를 어떤 기준으로 운영해야하는지 감이 없기도 했고 개발 기록을 남기는 작업은, 첫 블로그를 만들기 전에 onenote에 전부 작업을 해두고 있었기 때문에 블로그에 전부 옮기는 작업이 귀찮기도 했었다. 하지만 어쨌든 블로그를 만들어뒀기 때문에 포트폴리오 프로젝트 정리를 약간 하는 용도로 사용했다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/a671edcce8e625b6cba1a1bb8d2d7aff/ca123/gatsby.jpg","srcSet":"/static/a671edcce8e625b6cba1a1bb8d2d7aff/cf2dd/gatsby.jpg 750w,\n/static/a671edcce8e625b6cba1a1bb8d2d7aff/24294/gatsby.jpg 1080w,\n/static/a671edcce8e625b6cba1a1bb8d2d7aff/ca123/gatsby.jpg 1123w","sizes":"100vw"},"sources":[{"srcSet":"/static/a671edcce8e625b6cba1a1bb8d2d7aff/4814e/gatsby.avif 750w,\n/static/a671edcce8e625b6cba1a1bb8d2d7aff/acf79/gatsby.avif 1080w,\n/static/a671edcce8e625b6cba1a1bb8d2d7aff/1d69b/gatsby.avif 1123w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/a671edcce8e625b6cba1a1bb8d2d7aff/73e0d/gatsby.webp 750w,\n/static/a671edcce8e625b6cba1a1bb8d2d7aff/9fede/gatsby.webp 1080w,\n/static/a671edcce8e625b6cba1a1bb8d2d7aff/d4610/gatsby.webp 1123w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5253784505788067}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"Blog 이사 블로그 이사를 완료했다. 사실 블로그를 어떤 기준으로 운영해야하는지 감이 없기도 했고 개발 기록을 남기는 작업은, 첫 블로그를 만들기 전에 onenote…","fields":{"readingTime":{"text":"5 min read"},"layout":"post","slug":"/blog/Gatsby-Blog/"}}},{"node":{"frontmatter":{"title":"Tripllo 후기","date":"2021-02-19","tags":["Tripllo 제작기"],"draft":false,"excerpt":"프로젝트를 마무리했다. 두달 반 조금 안 되게 시간이 걸린 듯 하다. 프로젝트를 진행하면서 느꼈던 점을 조금 적어보려고 한다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f87848","images":{"fallback":{"src":"/static/6b653001f64019c0b04254a40de8af38/ffe25/%ED%9B%84%EA%B8%B0.png","srcSet":"/static/6b653001f64019c0b04254a40de8af38/1d01f/%ED%9B%84%EA%B8%B0.png 750w,\n/static/6b653001f64019c0b04254a40de8af38/38074/%ED%9B%84%EA%B8%B0.png 1080w,\n/static/6b653001f64019c0b04254a40de8af38/ffe25/%ED%9B%84%EA%B8%B0.png 1115w","sizes":"100vw"},"sources":[{"srcSet":"/static/6b653001f64019c0b04254a40de8af38/94de5/%ED%9B%84%EA%B8%B0.avif 750w,\n/static/6b653001f64019c0b04254a40de8af38/54da0/%ED%9B%84%EA%B8%B0.avif 1080w,\n/static/6b653001f64019c0b04254a40de8af38/62e45/%ED%9B%84%EA%B8%B0.avif 1115w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/6b653001f64019c0b04254a40de8af38/96ac1/%ED%9B%84%EA%B8%B0.webp 750w,\n/static/6b653001f64019c0b04254a40de8af38/24cc5/%ED%9B%84%EA%B8%B0.webp 1080w,\n/static/6b653001f64019c0b04254a40de8af38/45d29/%ED%9B%84%EA%B8%B0.webp 1115w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7013452914798206}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"프로젝트를 마무리했다. 두 달 반 조금 안 되게 시간이 걸린 듯하다. 프로젝트를 진행하면서 느꼈던 점을 조금 적어보려고 한다. 1. 서론 한창 실력에 자신이 없고 나를 검증할 만한 수단이 없다고 생각하던 차 Toy…","fields":{"readingTime":{"text":"12 min read"},"layout":"post","slug":"/tripllo/tripllo-epilogue/"}}},{"node":{"frontmatter":{"title":"(7) 로그인4 -vue 소셜로그인","date":"2021-02-05T10:03:47.149Z","tags":["Tripllo 제작기","Vue.js"],"draft":false,"excerpt":"vue에서 소셜 로그인 기능을 만들어보자. 보통 요즘 서비스들은 다 소셜 로그인으로 가입, 로그인이 되므로 앞으로 서비스 개발할 때 거의 필수적으로 들어갈 기능이라고 생각했다. 또 backend보다는 frontend 개발자로 지원하고 싶기 때문에 백엔드의 OAuth2.0 을 사용하는 것 보다는 Javascript단에서 로그인 기능을 넣고 싶었다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/1d06556ee3cbf97a8da8c382a82e32ce/a764f/tripllo7.jpg","srcSet":"/static/1d06556ee3cbf97a8da8c382a82e32ce/37bba/tripllo7.jpg 750w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/61c72/tripllo7.jpg 1080w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/d61e8/tripllo7.jpg 1366w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/a764f/tripllo7.jpg 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/1d06556ee3cbf97a8da8c382a82e32ce/ba386/tripllo7.avif 750w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/8adb1/tripllo7.avif 1080w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/dc6b3/tripllo7.avif 1366w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/031aa/tripllo7.avif 1920w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/1d06556ee3cbf97a8da8c382a82e32ce/a66aa/tripllo7.webp 750w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/65dd5/tripllo7.webp 1080w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/4fad6/tripllo7.webp 1366w,\n/static/1d06556ee3cbf97a8da8c382a82e32ce/c512e/tripllo7.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"vue에서 소셜 로그인 기능을 만들어보자. 보통 요즘 서비스들은 다 소셜 로그인으로 가입, 로그인이 되므로 앞으로 서비스 개발할 때 거의 필수적으로 들어갈 기능이라고 생각했다. 또 backend보다는 frontend…","fields":{"readingTime":{"text":"21 min read"},"layout":"post","slug":"/tripllo/(7)login4-vue-social-login/"}}},{"node":{"frontmatter":{"title":"(6) 로그인3 -vue 구현","date":"2021-02-05T07:03:47.149Z","tags":["Tripllo 제작기","Vue.js"],"draft":false,"excerpt":"SpringBoot 쪽 서비스 로직이 만들어졌으므로 이번엔 vue에서 화면을 만들고 회원가입과 로그인을 진행해보자. 우리는 vue의 기능을 최대한 살려서 뼈대가 되는 페이지 하나에 login과 signup 2개의 컴포넌트를 붙이고 watch를 활용해 데이터를 검증할 것이다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/091b93c48a5a6d44022278f6ff3b1035/4ba33/tripllo6.png","srcSet":"/static/091b93c48a5a6d44022278f6ff3b1035/4ba33/tripllo6.png 505w","sizes":"100vw"},"sources":[{"srcSet":"/static/091b93c48a5a6d44022278f6ff3b1035/eec93/tripllo6.avif 505w","type":"image/avif","sizes":"100vw"},{"srcSet":"/static/091b93c48a5a6d44022278f6ff3b1035/1988c/tripllo6.webp 505w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.3465346534653464}}},"author":[{"name":"Pozafly","bio":"Frontend Developer","avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#6808f8","images":{"fallback":{"src":"/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg","srcSet":"/static/8c061761f263c344f2c0416607c8adf1/2f28c/pozafly.jpg 40w,\n/static/8c061761f263c344f2c0416607c8adf1/499f6/pozafly.jpg 80w,\n/static/8c061761f263c344f2c0416607c8adf1/73bb6/pozafly.jpg 120w","sizes":"100vw"},"sources":[{"srcSet":"/static/8c061761f263c344f2c0416607c8adf1/e73fe/pozafly.webp 40w,\n/static/8c061761f263c344f2c0416607c8adf1/61ca6/pozafly.webp 80w,\n/static/8c061761f263c344f2c0416607c8adf1/507b0/pozafly.webp 120w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}}}}]},"excerpt":"SpringBoot 쪽 서비스 로직이 만들어졌으므로 이번엔 vue에서 화면을 만들고 회원가입과 로그인을 진행해보자. 우리는 vue의 기능을 최대한 살려서 뼈대가 되는 페이지 하나에 login과 signup 2개의 컴포넌트를 붙이고 watch…","fields":{"readingTime":{"text":"11 min read"},"layout":"post","slug":"/tripllo/(6)login3-vue/"}}}]}},"pageContext":{"limit":9,"skip":9,"numPages":4,"currentPage":2}},"staticQueryHashes":["2234322554","3549156140"],"slicesMap":{}}