{"version":3,"file":"component---src-pages-tags-tsx-d46e62e0eebec6d80ba4.js","mappings":"gRAaA,MAAMA,EAAe,CAAHC,KAAAA,SAAAC,OAAAA,mDAOZC,EAAU,CAAHF,KAAAA,UAAAC,OAAAA,mcA8CAE,EAAO,KAClBC,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,MACPD,EAAAA,EAAAA,IAAAA,QAAAA,KAAO,SACPA,EAAAA,EAAAA,IAAAA,OAAAA,CAAMJ,KAAK,SAASM,QAAQ,aA6DhC,UAzDaC,IAAqB,IAApB,KAAEC,GAAa,EAC3B,OACEJ,EAAAA,EAAAA,IAACK,EAAAA,EAAW,MACVL,EAAAA,EAAAA,IAACM,EAAAA,EAAO,CAACC,IAAKZ,IACZK,EAAAA,EAAAA,IAAAA,SAAAA,CAAQQ,UAAU,+BAA+BD,IAAG,CAAGE,EAAAA,GAAiB,SACtET,EAAAA,EAAAA,IAAAA,MAAAA,CAAKO,IAAG,CAAGG,EAAAA,GAAOC,EAAAA,GAAW,SAC3BX,EAAAA,EAAAA,IAAAA,MAAAA,CAAKO,IAAKK,EAAAA,KACRZ,EAAAA,EAAAA,IAACa,EAAAA,EAAO,CAACC,QAAQ,QAIvBd,EAAAA,EAAAA,IAAAA,OAAAA,CAAMe,GAAG,YAAYP,UAAU,YAAYD,IAAG,CAAGS,EAAAA,GAAUN,EAAAA,GAAK,SAC9DV,EAAAA,EAAAA,IAAAA,MAAAA,CAAKO,IAAKK,EAAAA,KACRZ,EAAAA,EAAAA,IAAAA,UAAAA,CAASQ,UAAU,YAAYD,IAAG,CAAGU,EAAAA,SAAUC,EAAAA,QAAO,SACpDlB,EAAAA,EAAAA,IAACmB,EAAAA,eAAc,CAACX,UAAU,qBACxBR,EAAAA,EAAAA,IAACoB,EAAAA,cAAa,CAACZ,UAAU,mBAAkB,UAG7CR,EAAAA,EAAAA,IAACqB,EAAAA,EAAe,CAACb,UAAU,sBACzBR,EAAAA,EAAAA,IAAAA,MAAAA,CAAKQ,UAAU,iBACbR,EAAAA,EAAAA,IAAAA,MAAAA,CAAKO,IAAKT,IACRE,EAAAA,EAAAA,IAAAA,KAAAA,KACGI,EAAKkB,kBAAkBC,MAAMC,KAAKC,IACjCzB,EAAAA,EAAAA,IAAAA,KAAAA,CAAI0B,IAAKD,EAAIE,aACX3B,EAAAA,EAAAA,IAAC4B,EAAAA,KAAI,CAACC,GAAK,UAAQC,EAAAA,EAAAA,GAAUL,EAAIE,gBAC9BF,EAAIE,WAAW,KAAGF,EAAIM,WAAW,gBAWtD/B,EAAAA,EAAAA,IAACgC,EAAAA,EAAM,OAEG,C","sources":["webpack://record-journey/./src/pages/tags.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { kebabCase } from 'lodash-es';\n\nimport { Footer } from '@/components/Footer.tsx';\nimport SiteNav from '@/components/header/SiteNav.tsx';\nimport { PostFullContent } from '@/components/PostContent.tsx';\nimport { Wrapper } from '@/components/Wrapper.tsx';\nimport IndexLayout from '@/layouts/index.tsx';\nimport { inner, outer, SiteArchiveHeader, SiteMain, SiteNavMain } from '@/styles/shared.ts';\nimport { NoImage, PostFull, PostFullHeader, PostFullTitle } from '@/templates/post.tsx';\n\nconst PageTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    padding-bottom: 4vw;\n  }\n`;\n\nconst TagArea = css`\n  ul {\n    padding-left: initial;\n\n    li {\n      transform: translateY(0);\n      display: inline-block;\n      margin-right: 12px;\n      padding: 2px 4px;\n      color: var(--main-color);\n      list-style: none;\n      background: var(--tag-background);\n      border: 1px solid var(--image-border-color);\n      border-radius: 6px;\n      transition: all 0.4s ease;\n\n      &:hover {\n        transform: translateY(-3px);\n        box-shadow: 0 8px 20px var(--tag-boxshadow);\n      }\n\n      a {\n        padding: 6px;\n        color: var(--main-color);\n        text-decoration: none;\n        box-shadow: none;\n\n        &:hover {\n          box-shadow: none;\n        }\n      }\n    }\n  }\n`;\n\ntype Props = {\n  data: {\n    allMarkdownRemark: {\n      group: Array<{\n        fieldValue: string;\n        totalCount: number | string;\n      }>;\n    };\n  };\n};\n\nexport const Head = () => (\n  <Fragment>\n    <title>Tags</title>\n    <meta name=\"robots\" content=\"noindex\" />\n  </Fragment>\n);\n\nconst Tags = ({ data }: Props) => {\n  return (\n    <IndexLayout>\n      <Wrapper css={PageTemplate}>\n        <header className=\"site-archive-header no-image\" css={[SiteArchiveHeader]}>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <article className=\"post page\" css={[PostFull, NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTitle className=\"post-full-title\">Tags</PostFullTitle>\n              </PostFullHeader>\n\n              <PostFullContent className=\"post-full-content\">\n                <div className=\"post-content\">\n                  <div css={TagArea}>\n                    <ul>\n                      {data.allMarkdownRemark.group.map((tag) => (\n                        <li key={tag.fieldValue}>\n                          <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                            {tag.fieldValue} ({tag.totalCount})\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </PostFullContent>\n            </article>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 2000\n    ) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default Tags;\n"],"names":["PageTemplate","name","styles","TagArea","Head","___EmotionJSX","Fragment","content","_ref","data","IndexLayout","Wrapper","css","className","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","id","SiteMain","PostFull","NoImage","PostFullHeader","PostFullTitle","PostFullContent","allMarkdownRemark","group","map","tag","key","fieldValue","Link","to","_kebabCase","totalCount","Footer"],"sourceRoot":""}